{
  "hash" : "T-root",
  "fields" : [
    {
      "refs" : [
        {
          "hash" : "T-listeners-S-listeners",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-listeners-S-listeners-tcp-S-mqtt_tcp_listener",
                  "fields" : [
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-bind",
                      "doc" : "IP address and port for the listening socket.",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "1883"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-acceptors",
                      "doc" : "The size of the listener's receiving pool.",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-max_connections",
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-mountpoint",
                      "doc" : "- Adds a static or templated prefix (e.g., `n1/` or `${username}/`) to topics used by clients in `SUBSCRIBE` and `UNSUBSCRIBE` requests, `PUBLISH` messages, and Will Message (if supplied in the `CONNECT` packet).\n- Removes this prefix from topics of messages published to the respective subscriptions.\n\nThe supported placeholders are:\n- `${username}`\n- `${clientid}`\n- `${zone}`\n- `${client_attrs.NAME}`\n\nFor example, with `mountpoint=\"${username}/\"` a client using `u1` as username will have:\n- Client SUBSCRIBE `sensors/#` -> `u1/sensors/#` internally in the broker.\n- Broker PUBLISH `u1/sensors/data` -> `sensors/data` sent to the client.\n\nThe prefix mount/unmount is applied to:\n- Will in `CONNECT`\n- `PUBLISH`\n- `SUBSCRIBE`\n- `UNSUBSCRIBE`\n\nNote: mounting occurs **after authorization/ACL checks**.",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-zone",
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-enable_authn",
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-bytes_rate",
                      "doc" : "Limits the number of bytes a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be dropped/rejected.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be dropped/rejected.",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-bytes_burst",
                      "doc" : "Number of bytes that can be sent in a burst, on top of regular `bytes_rate`.\n\nFor example: `100MB/60m`: Once every 60 minutes, up to 100 megabytes can be sent in a short period of time.",
                      "text" : "bytes_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-messages_rate",
                      "doc" : "Limits the number of messages a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be dropped/rejected.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be dropped/rejected.",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-messages_burst",
                      "doc" : "Number of messages that can be sent in a burst, on top of regular `messages_rate`, per each node.\n\nFor example: `10000/60m`: Once in 60 minutes, up to 10000 messages can be sent in a short period of time.",
                      "text" : "messages_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-max_conn_rate",
                      "doc" : "Limits how quickly this listener accepts connections, per each node.\n\nOnce the limit is reached, EMQX will automatically close any new connections right after theyâ€™re accepted, effectively draining the queue of connections waiting to be accepted.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-max_conn_burst",
                      "doc" : "Number of connections that can be accepted in a burst, on top of regular rate, per each node.\n\nFor example: `10000/60m`: Once every 60 minutes, up to 10000 connections can be accepted in a short period of time.",
                      "text" : "max_conn_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-access_rules",
                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses. The rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-proxy_protocol",
                      "doc" : "Enable the Proxy Protocol V1/2 if the EMQX cluster is deployed behind HAProxy or Nginx.<br/>\nSee: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-proxy_protocol_timeout",
                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP, this option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\n\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-parse_unit",
                      "doc" : "This setting specifies the level of granularity for data processed during MQTT framing, determining how frames are extracted and parsed from a byte stream:\n\n- `chunk`: Frames are processed at the transport layer packet level. This method uses raw byte chunks as the parsing unit, requiring the application logic to assemble and interpret MQTT frames. The size of each chunk non-deterministically depends on factors such as transmission speed, socket buffer size, and other kernel settings.\n- `frame`: Frames are processed as complete MQTT messages. This method ensures that only fully-formed MQTT frames are delivered to the application logic for further handling. In most of the cases, it offers better performance than the `chunk` option.\n\nNote, the choice of `parse_unit` affects the interpretation of the `active_n` setting: it defines either the number of raw byte chunks or complete MQTT messages are delivered to the connection process.",
                      "text" : "parse_unit",
                      "type" : "Enum(chunk,frame)",
                      "default" : "chunk"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-active_n",
                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "text" : "active_n",
                              "type" : "Integer(0..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-backlog",
                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "doc" : "Close the connection if send timeout.",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-recbuf",
                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-buffer",
                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-nodelay",
                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-nolinger",
                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                              "text" : "nolinger",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "doc" : "The SO_REUSEADDR flag for the connections.",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options-S-tcp_opts-keepalive",
                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "doc" : "TCP listener options.",
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-tcp-S-mqtt_tcp_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    }
                  ],
                  "doc" : "Settings for the MQTT over TCP listener.",
                  "text" : "mqtt_tcp_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-tcp",
              "doc" : "TCP listeners.",
              "text" : "tcp",
              "type" : "Map($name->OneOf(Struct(mqtt_tcp_listener),String(\"marked_for_deletion\")))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener",
                  "fields" : [
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-bind",
                      "doc" : "IP address and port for the listening socket.",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "8883"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-acceptors",
                      "doc" : "The size of the listener's receiving pool.",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-max_connections",
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-mountpoint",
                      "doc" : "- Adds a static or templated prefix (e.g., `n1/` or `${username}/`) to topics used by clients in `SUBSCRIBE` and `UNSUBSCRIBE` requests, `PUBLISH` messages, and Will Message (if supplied in the `CONNECT` packet).\n- Removes this prefix from topics of messages published to the respective subscriptions.\n\nThe supported placeholders are:\n- `${username}`\n- `${clientid}`\n- `${zone}`\n- `${client_attrs.NAME}`\n\nFor example, with `mountpoint=\"${username}/\"` a client using `u1` as username will have:\n- Client SUBSCRIBE `sensors/#` -> `u1/sensors/#` internally in the broker.\n- Broker PUBLISH `u1/sensors/data` -> `sensors/data` sent to the client.\n\nThe prefix mount/unmount is applied to:\n- Will in `CONNECT`\n- `PUBLISH`\n- `SUBSCRIBE`\n- `UNSUBSCRIBE`\n\nNote: mounting occurs **after authorization/ACL checks**.",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-zone",
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-enable_authn",
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-bytes_rate",
                      "doc" : "Limits the number of bytes a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be dropped/rejected.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be dropped/rejected.",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-bytes_burst",
                      "doc" : "Number of bytes that can be sent in a burst, on top of regular `bytes_rate`.\n\nFor example: `100MB/60m`: Once every 60 minutes, up to 100 megabytes can be sent in a short period of time.",
                      "text" : "bytes_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-messages_rate",
                      "doc" : "Limits the number of messages a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be dropped/rejected.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be dropped/rejected.",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-messages_burst",
                      "doc" : "Number of messages that can be sent in a burst, on top of regular `messages_rate`, per each node.\n\nFor example: `10000/60m`: Once in 60 minutes, up to 10000 messages can be sent in a short period of time.",
                      "text" : "messages_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-max_conn_rate",
                      "doc" : "Limits how quickly this listener accepts connections, per each node.\n\nOnce the limit is reached, EMQX will automatically close any new connections right after theyâ€™re accepted, effectively draining the queue of connections waiting to be accepted.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-max_conn_burst",
                      "doc" : "Number of connections that can be accepted in a burst, on top of regular rate, per each node.\n\nFor example: `10000/60m`: Once every 60 minutes, up to 10000 connections can be accepted in a short period of time.",
                      "text" : "max_conn_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-access_rules",
                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses. The rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-proxy_protocol",
                      "doc" : "Enable the Proxy Protocol V1/2 if the EMQX cluster is deployed behind HAProxy or Nginx.<br/>\nSee: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-proxy_protocol_timeout",
                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP, this option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\n\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-parse_unit",
                      "doc" : "This setting specifies the level of granularity for data processed during MQTT framing, determining how frames are extracted and parsed from a byte stream:\n\n- `chunk`: Frames are processed at the transport layer packet level. This method uses raw byte chunks as the parsing unit, requiring the application logic to assemble and interpret MQTT frames. The size of each chunk non-deterministically depends on factors such as transmission speed, socket buffer size, and other kernel settings.\n- `frame`: Frames are processed as complete MQTT messages. This method ensures that only fully-formed MQTT frames are delivered to the application logic for further handling. In most of the cases, it offers better performance than the `chunk` option.\n\nNote, the choice of `parse_unit` affects the interpretation of the `active_n` setting: it defines either the number of raw byte chunks or complete MQTT messages are delivered to the connection process.",
                      "text" : "parse_unit",
                      "type" : "Enum(chunk,frame)",
                      "default" : "chunk"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-active_n",
                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "text" : "active_n",
                              "type" : "Integer(0..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-backlog",
                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "doc" : "Close the connection if send timeout.",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-recbuf",
                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-buffer",
                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-nodelay",
                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-nolinger",
                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                              "text" : "nolinger",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "doc" : "The SO_REUSEADDR flag for the connections.",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options-S-tcp_opts-keepalive",
                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "doc" : "TCP listener options.",
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts",
                          "fields" : [
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                              "text" : "dhfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                              "text" : "fail_if_no_peer_cert",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                              "text" : "honor_cipher_order",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "client_renegotiation",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "handshake_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                              "text" : "gc_after_handshake",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                  "fields" : [
                                    {
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                      "text" : "enable_ocsp_stapling",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                      "text" : "responder_url",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                      "text" : "issuer_pem",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "refresh_interval",
                                      "type" : "Duration",
                                      "default" : "\"5m\""
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "refresh_http_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    }
                                  ],
                                  "doc" : "Per listener OCSP Stapling configuration.",
                                  "text" : "ocsp"
                                }
                              ],
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                              "text" : "ocsp",
                              "type" : "Struct(ocsp)"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                              "doc" : "Whether to enable CRL verification for this listener.",
                              "text" : "enable_crl_check",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "doc" : "Socket options for SSL connections.",
                          "text" : "listener_ssl_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ssl-S-mqtt_ssl_listener-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(listener_ssl_opts)"
                    }
                  ],
                  "doc" : "Settings for the MQTT over SSL listener.",
                  "text" : "mqtt_ssl_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-ssl",
              "doc" : "SSL listeners.",
              "text" : "ssl",
              "type" : "Map($name->OneOf(Struct(mqtt_ssl_listener),String(\"marked_for_deletion\")))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener",
                  "fields" : [
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-bind",
                      "doc" : "IP address and port for the listening socket.",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "8083"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-acceptors",
                      "doc" : "The size of the listener's receiving pool.",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-max_connections",
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-mountpoint",
                      "doc" : "- Adds a static or templated prefix (e.g., `n1/` or `${username}/`) to topics used by clients in `SUBSCRIBE` and `UNSUBSCRIBE` requests, `PUBLISH` messages, and Will Message (if supplied in the `CONNECT` packet).\n- Removes this prefix from topics of messages published to the respective subscriptions.\n\nThe supported placeholders are:\n- `${username}`\n- `${clientid}`\n- `${zone}`\n- `${client_attrs.NAME}`\n\nFor example, with `mountpoint=\"${username}/\"` a client using `u1` as username will have:\n- Client SUBSCRIBE `sensors/#` -> `u1/sensors/#` internally in the broker.\n- Broker PUBLISH `u1/sensors/data` -> `sensors/data` sent to the client.\n\nThe prefix mount/unmount is applied to:\n- Will in `CONNECT`\n- `PUBLISH`\n- `SUBSCRIBE`\n- `UNSUBSCRIBE`\n\nNote: mounting occurs **after authorization/ACL checks**.",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-zone",
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-enable_authn",
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-bytes_rate",
                      "doc" : "Limits the number of bytes a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be dropped/rejected.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be dropped/rejected.",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-bytes_burst",
                      "doc" : "Number of bytes that can be sent in a burst, on top of regular `bytes_rate`.\n\nFor example: `100MB/60m`: Once every 60 minutes, up to 100 megabytes can be sent in a short period of time.",
                      "text" : "bytes_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-messages_rate",
                      "doc" : "Limits the number of messages a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be dropped/rejected.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be dropped/rejected.",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-messages_burst",
                      "doc" : "Number of messages that can be sent in a burst, on top of regular `messages_rate`, per each node.\n\nFor example: `10000/60m`: Once in 60 minutes, up to 10000 messages can be sent in a short period of time.",
                      "text" : "messages_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-max_conn_rate",
                      "doc" : "Limits how quickly this listener accepts connections, per each node.\n\nOnce the limit is reached, EMQX will automatically close any new connections right after theyâ€™re accepted, effectively draining the queue of connections waiting to be accepted.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-max_conn_burst",
                      "doc" : "Number of connections that can be accepted in a burst, on top of regular rate, per each node.\n\nFor example: `10000/60m`: Once every 60 minutes, up to 10000 connections can be accepted in a short period of time.",
                      "text" : "max_conn_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-access_rules",
                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses. The rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-proxy_protocol",
                      "doc" : "Enable the Proxy Protocol V1/2 if the EMQX cluster is deployed behind HAProxy or Nginx.<br/>\nSee: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-proxy_protocol_timeout",
                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP, this option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\n\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-active_n",
                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "text" : "active_n",
                              "type" : "Integer(0..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-backlog",
                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-send_timeout",
                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "doc" : "Close the connection if send timeout.",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-recbuf",
                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-sndbuf",
                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-buffer",
                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-high_watermark",
                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-nodelay",
                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-nolinger",
                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                              "text" : "nolinger",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "doc" : "The SO_REUSEADDR flag for the connections.",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options-S-tcp_opts-keepalive",
                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "doc" : "TCP listener options.",
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts",
                          "fields" : [
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-mqtt_path",
                              "doc" : "WebSocket's MQTT protocol path. By default, the full URL for the WebSocket client to connect is:\n`ws://{host}:{port}/mqtt`.\nAppend `/[...]` to the end of the path to make EMQX accept any subpath.\nFor example, specifying `mqtt/[...]` would allow clients to connect at paths like\n`mqtt/org1` or `mqtt/group2`, etc.\n\nNOTE: An unmatched path will cause the client to be rejected immediately at the HTTP layer,\nmeaning it will not be traceable at the MQTT layer.",
                              "text" : "mqtt_path",
                              "type" : "String",
                              "default" : "\"/mqtt\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-mqtt_piggyback",
                              "doc" : "Whether a WebSocket message is allowed to contain multiple MQTT packets.",
                              "text" : "mqtt_piggyback",
                              "type" : "Enum(single,multiple)",
                              "default" : "multiple"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-compress",
                              "doc" : "If <code>true</code>, compress WebSocket messages using <code>zlib</code>.\n\nThe configuration items under <code>deflate_opts</code> belong to the compression-related parameter configuration.",
                              "text" : "compress",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-idle_timeout",
                              "doc" : "The timeout for waiting for the WebSocket upgrade request. After the timeout, the connection will be closed.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "idle_timeout",
                              "type" : "Duration",
                              "default" : "\"7200s\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-max_frame_size",
                              "doc" : "The maximum length of a single MQTT packet.",
                              "text" : "max_frame_size",
                              "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                              "default" : "infinity"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-fail_if_no_subprotocol",
                              "doc" : "If <code>true</code>, the server will return an error when\n the client does not carry the <code>Sec-WebSocket-Protocol</code> field.\n <br/>Note: WeChat applet needs to disable this verification.",
                              "text" : "fail_if_no_subprotocol",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-supported_subprotocols",
                              "doc" : "Comma-separated list of supported subprotocols.",
                              "text" : "supported_subprotocols",
                              "type" : "String",
                              "default" : "\"mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-check_origin_enable",
                              "doc" : "If <code>true</code>, <code>origin</code> HTTP header will be\n validated against the list of allowed origins configured in <code>check_origins</code>\n parameter.",
                              "text" : "check_origin_enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-allow_origin_absence",
                              "doc" : "If <code>false</code> and <code>check_origin_enable</code> is\n <code>true</code>, the server will reject requests that don't have <code>origin</code>\n HTTP header.",
                              "text" : "allow_origin_absence",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-check_origins",
                              "doc" : "List of allowed origins.<br/>See <code>check_origin_enable</code>.",
                              "text" : "check_origins",
                              "type" : "String",
                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-proxy_address_header",
                              "doc" : "The HTTP request header that carries the original client's IP address, EMQX will take the leftmost IP in the header as the original client's IP.\n\nThis option is typically used when EMQX is deployed behind a WebSocket proxy.",
                              "text" : "proxy_address_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-for\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-proxy_port_header",
                              "doc" : "The HTTP request header that carries the original client's source port, EMQX will take the leftmost port in the header as the original client's source port.\n\nThis option is typically used when EMQX is deployed behind a WebSocket proxy.",
                              "text" : "proxy_port_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-port\""
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts",
                                  "fields" : [
                                    {
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-level",
                                      "doc" : "Compression level.",
                                      "text" : "level",
                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-mem_level",
                                      "doc" : "Specifies the size of the compression state.<br/>\nLower values decrease memory usage per connection.",
                                      "text" : "mem_level",
                                      "type" : "Integer(1..9)",
                                      "default" : "8"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-strategy",
                                      "doc" : "Specifies the compression strategy.",
                                      "text" : "strategy",
                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                      "default" : "default"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_context_takeover",
                                      "doc" : "Takeover means the compression state is retained between server messages.",
                                      "text" : "server_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_context_takeover",
                                      "doc" : "Takeover means the compression state is retained between client messages.",
                                      "text" : "client_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_max_window_bits",
                                      "doc" : "Specifies the size of the compression context for the server.",
                                      "text" : "server_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_max_window_bits",
                                      "doc" : "Specifies the size of the compression context for the client.",
                                      "text" : "client_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    }
                                  ],
                                  "doc" : "Compression options.",
                                  "text" : "deflate_opts"
                                }
                              ],
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-deflate_opts",
                              "text" : "deflate_opts",
                              "type" : "Struct(deflate_opts)"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket-S-ws_opts-validate_utf8",
                              "doc" : "Whether to verify that the payload of `text` and `close` frames is valid UTF-8. Disabling it can save resources and improve performance.",
                              "text" : "validate_utf8",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "doc" : "WebSocket listener options.",
                          "text" : "ws_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-ws-S-mqtt_ws_listener-websocket",
                      "text" : "websocket",
                      "type" : "Struct(ws_opts)"
                    }
                  ],
                  "doc" : "Settings for the MQTT over WebSocket listener.",
                  "text" : "mqtt_ws_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-ws",
              "doc" : "HTTP websocket listeners.",
              "text" : "ws",
              "type" : "Map($name->OneOf(Struct(mqtt_ws_listener),String(\"marked_for_deletion\")))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener",
                  "fields" : [
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-bind",
                      "doc" : "IP address and port for the listening socket.",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "8084"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-acceptors",
                      "doc" : "The size of the listener's receiving pool.",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-max_connections",
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-mountpoint",
                      "doc" : "- Adds a static or templated prefix (e.g., `n1/` or `${username}/`) to topics used by clients in `SUBSCRIBE` and `UNSUBSCRIBE` requests, `PUBLISH` messages, and Will Message (if supplied in the `CONNECT` packet).\n- Removes this prefix from topics of messages published to the respective subscriptions.\n\nThe supported placeholders are:\n- `${username}`\n- `${clientid}`\n- `${zone}`\n- `${client_attrs.NAME}`\n\nFor example, with `mountpoint=\"${username}/\"` a client using `u1` as username will have:\n- Client SUBSCRIBE `sensors/#` -> `u1/sensors/#` internally in the broker.\n- Broker PUBLISH `u1/sensors/data` -> `sensors/data` sent to the client.\n\nThe prefix mount/unmount is applied to:\n- Will in `CONNECT`\n- `PUBLISH`\n- `SUBSCRIBE`\n- `UNSUBSCRIBE`\n\nNote: mounting occurs **after authorization/ACL checks**.",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-zone",
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-enable_authn",
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-bytes_rate",
                      "doc" : "Limits the number of bytes a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be dropped/rejected.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be dropped/rejected.",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-bytes_burst",
                      "doc" : "Number of bytes that can be sent in a burst, on top of regular `bytes_rate`.\n\nFor example: `100MB/60m`: Once every 60 minutes, up to 100 megabytes can be sent in a short period of time.",
                      "text" : "bytes_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-messages_rate",
                      "doc" : "Limits the number of messages a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be dropped/rejected.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be dropped/rejected.",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-messages_burst",
                      "doc" : "Number of messages that can be sent in a burst, on top of regular `messages_rate`, per each node.\n\nFor example: `10000/60m`: Once in 60 minutes, up to 10000 messages can be sent in a short period of time.",
                      "text" : "messages_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-max_conn_rate",
                      "doc" : "Limits how quickly this listener accepts connections, per each node.\n\nOnce the limit is reached, EMQX will automatically close any new connections right after theyâ€™re accepted, effectively draining the queue of connections waiting to be accepted.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-max_conn_burst",
                      "doc" : "Number of connections that can be accepted in a burst, on top of regular rate, per each node.\n\nFor example: `10000/60m`: Once every 60 minutes, up to 10000 connections can be accepted in a short period of time.",
                      "text" : "max_conn_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-access_rules",
                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses. The rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                      "text" : "access_rules",
                      "type" : "Array(String)",
                      "default" : "[\"allow all\"]"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-proxy_protocol",
                      "doc" : "Enable the Proxy Protocol V1/2 if the EMQX cluster is deployed behind HAProxy or Nginx.<br/>\nSee: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                      "text" : "proxy_protocol",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-proxy_protocol_timeout",
                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP, this option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\n\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "proxy_protocol_timeout",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts",
                          "fields" : [
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-active_n",
                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                              "text" : "active_n",
                              "type" : "Integer(0..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-backlog",
                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                              "text" : "backlog",
                              "type" : "Integer(1..+inf)",
                              "default" : "1024"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-send_timeout",
                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-send_timeout_close",
                              "doc" : "Close the connection if send timeout.",
                              "text" : "send_timeout_close",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-recbuf",
                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-sndbuf",
                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-buffer",
                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "buffer",
                              "type" : "Bytesize",
                              "default" : "\"4KB\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-high_watermark",
                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "high_watermark",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-nodelay",
                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-nolinger",
                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                              "text" : "nolinger",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-reuseaddr",
                              "doc" : "The SO_REUSEADDR flag for the connections.",
                              "text" : "reuseaddr",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options-S-tcp_opts-keepalive",
                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                              "text" : "keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "doc" : "TCP listener options.",
                          "text" : "tcp_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-tcp_options",
                      "text" : "tcp_options",
                      "type" : "Struct(tcp_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts",
                          "fields" : [
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-dhfile",
                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                              "text" : "dhfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-fail_if_no_peer_cert",
                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                              "text" : "fail_if_no_peer_cert",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-honor_cipher_order",
                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                              "text" : "honor_cipher_order",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-client_renegotiation",
                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "client_renegotiation",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options-S-listener_wss_opts-handshake_timeout",
                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "handshake_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            }
                          ],
                          "doc" : "Socket options for WebSocket/SSL connections.",
                          "text" : "listener_wss_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-ssl_options",
                      "text" : "ssl_options",
                      "type" : "Struct(listener_wss_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts",
                          "fields" : [
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-mqtt_path",
                              "doc" : "WebSocket's MQTT protocol path. By default, the full URL for the WebSocket client to connect is:\n`ws://{host}:{port}/mqtt`.\nAppend `/[...]` to the end of the path to make EMQX accept any subpath.\nFor example, specifying `mqtt/[...]` would allow clients to connect at paths like\n`mqtt/org1` or `mqtt/group2`, etc.\n\nNOTE: An unmatched path will cause the client to be rejected immediately at the HTTP layer,\nmeaning it will not be traceable at the MQTT layer.",
                              "text" : "mqtt_path",
                              "type" : "String",
                              "default" : "\"/mqtt\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-mqtt_piggyback",
                              "doc" : "Whether a WebSocket message is allowed to contain multiple MQTT packets.",
                              "text" : "mqtt_piggyback",
                              "type" : "Enum(single,multiple)",
                              "default" : "multiple"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-compress",
                              "doc" : "If <code>true</code>, compress WebSocket messages using <code>zlib</code>.\n\nThe configuration items under <code>deflate_opts</code> belong to the compression-related parameter configuration.",
                              "text" : "compress",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-idle_timeout",
                              "doc" : "The timeout for waiting for the WebSocket upgrade request. After the timeout, the connection will be closed.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "idle_timeout",
                              "type" : "Duration",
                              "default" : "\"7200s\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-max_frame_size",
                              "doc" : "The maximum length of a single MQTT packet.",
                              "text" : "max_frame_size",
                              "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                              "default" : "infinity"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-fail_if_no_subprotocol",
                              "doc" : "If <code>true</code>, the server will return an error when\n the client does not carry the <code>Sec-WebSocket-Protocol</code> field.\n <br/>Note: WeChat applet needs to disable this verification.",
                              "text" : "fail_if_no_subprotocol",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-supported_subprotocols",
                              "doc" : "Comma-separated list of supported subprotocols.",
                              "text" : "supported_subprotocols",
                              "type" : "String",
                              "default" : "\"mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-check_origin_enable",
                              "doc" : "If <code>true</code>, <code>origin</code> HTTP header will be\n validated against the list of allowed origins configured in <code>check_origins</code>\n parameter.",
                              "text" : "check_origin_enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-allow_origin_absence",
                              "doc" : "If <code>false</code> and <code>check_origin_enable</code> is\n <code>true</code>, the server will reject requests that don't have <code>origin</code>\n HTTP header.",
                              "text" : "allow_origin_absence",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-check_origins",
                              "doc" : "List of allowed origins.<br/>See <code>check_origin_enable</code>.",
                              "text" : "check_origins",
                              "type" : "String",
                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-proxy_address_header",
                              "doc" : "The HTTP request header that carries the original client's IP address, EMQX will take the leftmost IP in the header as the original client's IP.\n\nThis option is typically used when EMQX is deployed behind a WebSocket proxy.",
                              "text" : "proxy_address_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-for\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-proxy_port_header",
                              "doc" : "The HTTP request header that carries the original client's source port, EMQX will take the leftmost port in the header as the original client's source port.\n\nThis option is typically used when EMQX is deployed behind a WebSocket proxy.",
                              "text" : "proxy_port_header",
                              "type" : "String",
                              "default" : "\"x-forwarded-port\""
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts",
                                  "fields" : [
                                    {
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-level",
                                      "doc" : "Compression level.",
                                      "text" : "level",
                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-mem_level",
                                      "doc" : "Specifies the size of the compression state.<br/>\nLower values decrease memory usage per connection.",
                                      "text" : "mem_level",
                                      "type" : "Integer(1..9)",
                                      "default" : "8"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-strategy",
                                      "doc" : "Specifies the compression strategy.",
                                      "text" : "strategy",
                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                      "default" : "default"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_context_takeover",
                                      "doc" : "Takeover means the compression state is retained between server messages.",
                                      "text" : "server_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_context_takeover",
                                      "doc" : "Takeover means the compression state is retained between client messages.",
                                      "text" : "client_context_takeover",
                                      "type" : "Enum(takeover,no_takeover)",
                                      "default" : "takeover"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-server_max_window_bits",
                                      "doc" : "Specifies the size of the compression context for the server.",
                                      "text" : "server_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    },
                                    {
                                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts-S-deflate_opts-client_max_window_bits",
                                      "doc" : "Specifies the size of the compression context for the client.",
                                      "text" : "client_max_window_bits",
                                      "type" : "Integer(8..15)",
                                      "default" : "15"
                                    }
                                  ],
                                  "doc" : "Compression options.",
                                  "text" : "deflate_opts"
                                }
                              ],
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-deflate_opts",
                              "text" : "deflate_opts",
                              "type" : "Struct(deflate_opts)"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket-S-ws_opts-validate_utf8",
                              "doc" : "Whether to verify that the payload of `text` and `close` frames is valid UTF-8. Disabling it can save resources and improve performance.",
                              "text" : "validate_utf8",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "doc" : "WebSocket listener options.",
                          "text" : "ws_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-wss-S-mqtt_wss_listener-websocket",
                      "text" : "websocket",
                      "type" : "Struct(ws_opts)"
                    }
                  ],
                  "doc" : "Settings for the MQTT over WebSocket/SSL listener.",
                  "text" : "mqtt_wss_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-wss",
              "doc" : "HTTPS websocket listeners.",
              "text" : "wss",
              "type" : "Map($name->OneOf(Struct(mqtt_wss_listener),String(\"marked_for_deletion\")))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-listeners-S-listeners-quic-S-mqtt_quic_listener",
                  "fields" : [
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br/>\n\nNOTE: QUIC listener supports only 'tlsv1.3' ciphers",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_CHACHA20_POLY1305_SHA256]"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts",
                          "fields" : [
                            {
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String",
                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                            },
                            {
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options-S-listener_quic_ssl_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "TLS options for QUIC transport.",
                          "text" : "listener_quic_ssl_opts"
                        }
                      ],
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-ssl_options",
                      "doc" : "TLS options for QUIC transport",
                      "text" : "ssl_options",
                      "type" : "Struct(listener_quic_ssl_opts)"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-bind",
                      "doc" : "IP address and port for the listening socket.",
                      "text" : "bind",
                      "type" : "String",
                      "default" : "14567"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-acceptors",
                      "doc" : "The size of the listener's receiving pool.",
                      "text" : "acceptors",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-max_connections",
                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                      "text" : "max_connections",
                      "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
                      "default" : "infinity"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-mountpoint",
                      "doc" : "- Adds a static or templated prefix (e.g., `n1/` or `${username}/`) to topics used by clients in `SUBSCRIBE` and `UNSUBSCRIBE` requests, `PUBLISH` messages, and Will Message (if supplied in the `CONNECT` packet).\n- Removes this prefix from topics of messages published to the respective subscriptions.\n\nThe supported placeholders are:\n- `${username}`\n- `${clientid}`\n- `${zone}`\n- `${client_attrs.NAME}`\n\nFor example, with `mountpoint=\"${username}/\"` a client using `u1` as username will have:\n- Client SUBSCRIBE `sensors/#` -> `u1/sensors/#` internally in the broker.\n- Broker PUBLISH `u1/sensors/data` -> `sensors/data` sent to the client.\n\nThe prefix mount/unmount is applied to:\n- Will in `CONNECT`\n- `PUBLISH`\n- `SUBSCRIBE`\n- `UNSUBSCRIBE`\n\nNote: mounting occurs **after authorization/ACL checks**.",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-zone",
                      "doc" : "The configuration zone to which the listener belongs.\nClients connected to this listener will inherit zone-settings created under this zone name.\n\nA zone can override the configs under below root names:\n- `mqtt`\n- `force_shutdown`\n- `force_gc`\n- `flapping_detect`\n- `durable_sessions`",
                      "text" : "zone",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-enable_authn",
                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener, the authentication\nprocess goes through the configured authentication chain.\nWhen set to <code>false</code>, any client (with or without username/password) is allowed to connect.\nWhen set to <code>quick_deny_anonymous</code>, it behaves like when set to <code>true</code>, but clients will be\ndenied immediately without going through any authenticators if <code>username</code> is not provided. This is useful to fence off\nanonymous clients early.",
                      "text" : "enable_authn",
                      "type" : "Enum(true,false,quick_deny_anonymous)",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-bytes_rate",
                      "doc" : "Limits the number of bytes a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be dropped/rejected.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be dropped/rejected.",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-bytes_burst",
                      "doc" : "Number of bytes that can be sent in a burst, on top of regular `bytes_rate`.\n\nFor example: `100MB/60m`: Once every 60 minutes, up to 100 megabytes can be sent in a short period of time.",
                      "text" : "bytes_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-messages_rate",
                      "doc" : "Limits the number of messages a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be dropped/rejected.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be dropped/rejected.",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-messages_burst",
                      "doc" : "Number of messages that can be sent in a burst, on top of regular `messages_rate`, per each node.\n\nFor example: `10000/60m`: Once in 60 minutes, up to 10000 messages can be sent in a short period of time.",
                      "text" : "messages_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-max_conn_rate",
                      "doc" : "Limits how quickly this listener accepts connections, per each node.\n\nOnce the limit is reached, EMQX will automatically close any new connections right after theyâ€™re accepted, effectively draining the queue of connections waiting to be accepted.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-listeners-S-listeners-quic-S-mqtt_quic_listener-max_conn_burst",
                      "doc" : "Number of connections that can be accepted in a burst, on top of regular rate, per each node.\n\nFor example: `10000/60m`: Once every 60 minutes, up to 10000 connections can be accepted in a short period of time.",
                      "text" : "max_conn_burst",
                      "type" : "String"
                    }
                  ],
                  "doc" : "Settings for the MQTT over QUIC listener.",
                  "text" : "mqtt_quic_listener"
                }
              ],
              "hash" : "V-listeners-S-listeners-quic",
              "doc" : "QUIC listeners.",
              "text" : "quic",
              "type" : "Map($name->OneOf(Struct(mqtt_quic_listener),String(\"marked_for_deletion\")))"
            }
          ],
          "doc" : "MQTT listeners identified by their protocol type and assigned names",
          "text" : "listeners"
        }
      ],
      "hash" : "V-listeners",
      "doc" : "Listener configurations are defined per transport type.\nEach transport type contains a map associating listener names with their configurations.\nBy default, each transport type includes a listener named `default`, which is not explicitly configured within configuration files.\nTo remove a `default` listener, explicitly set its configuration like: `listeners.ws.default = marked_for_deletion`.\n\nAlternatively, to disable a listener without removing its configuration, set the hidden `enable` field to `false`. For example: `listeners.tcp.my_listener.enable = false`.",
      "text" : "listeners",
      "type" : "Struct(listeners)"
    },
    {
      "refs" : [
        {
          "hash" : "T-mqtt-S-mqtt",
          "fields" : [
            {
              "hash" : "V-mqtt-S-mqtt-idle_timeout",
              "doc" : "Configure the duration of time that a connection can remain idle (i.e., without any data transfer) before being:\n  - Automatically disconnected  if no CONNECT package is received from the client yet.\n  - Put into hibernation mode to save resources if some CONNECT packages are already received.\nNote: Please set the parameter with caution as long idle time will lead to resource waste.",
              "text" : "idle_timeout",
              "type" : "OneOf(String(\"infinity\"),Duration)",
              "default" : "\"15s\""
            },
            {
              "hash" : "V-mqtt-S-mqtt-max_packet_size",
              "doc" : "Maximum MQTT packet size allowed. Default: 1 MB, Maximum: 256 MB<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "text" : "max_packet_size",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "hash" : "V-mqtt-S-mqtt-max_clientid_len",
              "doc" : "Maximum allowed length of MQTT Client ID.",
              "text" : "max_clientid_len",
              "type" : "Integer(23..65535)",
              "default" : "65535"
            },
            {
              "hash" : "V-mqtt-S-mqtt-max_topic_levels",
              "doc" : "Maximum topic levels allowed.",
              "text" : "max_topic_levels",
              "type" : "Integer(1..65535)",
              "default" : "128"
            },
            {
              "hash" : "V-mqtt-S-mqtt-max_topic_alias",
              "doc" : "Maximum topic alias, 0 means no topic alias supported.",
              "text" : "max_topic_alias",
              "type" : "Integer(0..65535)",
              "default" : "65535"
            },
            {
              "hash" : "V-mqtt-S-mqtt-retain_available",
              "doc" : "Whether to enable support for MQTT retained message.",
              "text" : "retain_available",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-mqtt-S-mqtt-wildcard_subscription",
              "doc" : "Whether to enable support for MQTT wildcard subscription.",
              "text" : "wildcard_subscription",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-mqtt-S-mqtt-shared_subscription",
              "doc" : "Whether to enable support for MQTT shared subscription.",
              "text" : "shared_subscription",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-mqtt-S-mqtt-shared_subscription_strategy",
              "doc" : "Dispatch strategy for shared subscription.\n - `random`: Randomly select a subscriber for dispatch;\n - `round_robin`: Clients in a shared subscription group will consume messages in turn, and the progress of the loop is recorded independently in each publisher, so two adjacent messages from **different publishers** may be consumed by the same client in the subscription group;\n - `round_robin_per_group`: Clients in a shared subscription group will consume messages in turn, and the progress of the loop is recorded independently in each node, so two adjacent messages from **different nodes** may be consumed by the same client in the subscription group;\n - `local`: Randomly select a subscriber on the current node, if there are no subscribers on the current node, then randomly select within the cluster;\n - `sticky`: Continuously dispatch messages to the initially selected subscriber until their session ends. The initial selection is made based on `mqtt_shared_subscription_initial_sticky_pick`;\n - `hash_clientid`: Hash the publisher's client ID to select a subscriber;\n - `hash_topic`: Hash the publishing topic to select a subscriber.",
              "text" : "shared_subscription_strategy",
              "type" : "Enum(random,round_robin,round_robin_per_group,sticky,local,hash_topic,hash_clientid)",
              "default" : "round_robin"
            },
            {
              "hash" : "V-mqtt-S-mqtt-shared_subscription_initial_sticky_pick",
              "doc" : "The strategy to use for the initial subscriber pick when shared_subscription_strategy is `sticky`.\n - `random`: Randomly select the subscriber;\n - `local`: Randomly select a subscriber on the current node, if there are no subscribers on the current node, then randomly select within the cluster;\n - `hash_clientid`: Hash the publisher's client ID to select a subscriber;\n - `hash_topic`: Hash the publishing topic to select a subscriber.",
              "text" : "shared_subscription_initial_sticky_pick",
              "type" : "Enum(random,local,hash_topic,hash_clientid)",
              "default" : "random"
            },
            {
              "hash" : "V-mqtt-S-mqtt-exclusive_subscription",
              "doc" : "Whether to enable support for MQTT exclusive subscription.",
              "text" : "exclusive_subscription",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-mqtt-S-mqtt-ignore_loop_deliver",
              "doc" : "Whether the messages sent by the MQTT v3.1.1/v3.1.0 client will be looped back to the publisher itself, similar to <code>No Local</code> in MQTT 5.0.",
              "text" : "ignore_loop_deliver",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-mqtt-S-mqtt-strict_mode",
              "doc" : "Whether to parse MQTT messages in strict mode.\nIn strict mode, invalid utf8 strings in for example client ID, topic name, etc. will cause the client to be disconnected.",
              "text" : "strict_mode",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-mqtt-S-mqtt-response_information",
              "doc" : "UTF-8 string, for creating the response topic, for example, if set to <code>reqrsp/</code>, the publisher/subscriber will communicate using the topic prefix <code>reqrsp/</code>.\nTo disable this feature, input <code>\"\"</code> in the text box below. Only applicable to MQTT 5.0 clients.",
              "text" : "response_information",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-mqtt-S-mqtt-server_keepalive",
              "doc" : "The keep alive duration required by EMQX. To use the setting from the client side, choose disabled from the drop-down list. Only applicable to MQTT 5.0 clients.",
              "text" : "server_keepalive",
              "type" : "OneOf(Integer(1..+inf),String(\"disabled\"))",
              "default" : "disabled"
            },
            {
              "hash" : "V-mqtt-S-mqtt-keepalive_multiplier",
              "doc" : "Keep-Alive Timeout = Keep-Alive interval Ã— Keep-Alive Multiplier.\nThe default value 1.5 is following the MQTT 5.0 specification. This multiplier is adjustable, providing system administrators flexibility for tailoring to their specific needs. For instance, if a client's 10-second Keep-Alive interval PINGREQ gets delayed by an extra 10 seconds, changing the multiplier to 2 lets EMQX tolerate this delay.",
              "text" : "keepalive_multiplier",
              "type" : "Number",
              "default" : "1.5"
            },
            {
              "hash" : "V-mqtt-S-mqtt-keepalive_check_interval",
              "doc" : "The frequency of checking for incoming MQTT packets determines how often the server will check for new MQTT packets.\nIf a certain amount of time passes without any packets being sent from the client, this time will be added up.\nOnce the accumulated time exceeds `keepalive-interval * keepalive-multiplier`, the connection will be terminated.\nThe default is set to 30 seconds, with a minimum value of 1 second and a maximum value of `keepalive-interval / 2`.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "keepalive_check_interval",
              "type" : "Duration",
              "default" : "\"30s\""
            },
            {
              "hash" : "V-mqtt-S-mqtt-retry_interval",
              "doc" : "Retry interval for QoS 1/2 message delivering.",
              "text" : "retry_interval",
              "type" : "OneOf(String(\"infinity\"),Duration)",
              "default" : "infinity"
            },
            {
              "hash" : "V-mqtt-S-mqtt-use_username_as_clientid",
              "doc" : "Whether to use Username as Client ID.\nThis setting takes effect later than `peer_cert_as_username` and `peer_cert_as_clientid`.",
              "text" : "use_username_as_clientid",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-mqtt-S-mqtt-peer_cert_as_username",
              "doc" : "Use the CN, DN field in the peer certificate or the entire certificate content as Username. Only works for the TLS connection.\nSupported configurations are the following:\n- <code>cn</code>: CN field of the certificate\n- <code>dn</code>: DN field of the certificate\n- <code>crt</code>: Content of the <code>DER</code> or <code>PEM</code> certificate\n- <code>pem</code>: Convert <code>DER</code> certificate content to <code>PEM</code> format and use as Username\n- <code>md5</code>: MD5 value of the <code>DER</code> or <code>PEM</code> certificate",
              "text" : "peer_cert_as_username",
              "type" : "Enum(disabled,cn,dn,crt,pem,md5)",
              "default" : "disabled"
            },
            {
              "hash" : "V-mqtt-S-mqtt-peer_cert_as_clientid",
              "doc" : "Use the CN, DN field in the peer certificate or the entire certificate content as Client ID. Only works for the TLS connection.\nSupported configurations are the following:\n- <code>cn</code>: CN field of the certificate\n- <code>dn</code>: DN field of the certificate\n- <code>crt</code>: <code>DER</code> or <code>PEM</code> certificate\n- <code>pem</code>: Convert <code>DER</code> certificate content to <code>PEM</code> format and use as Client ID\n- <code>md5</code>: MD5 value of the <code>DER</code> or <code>PEM</code> certificate",
              "text" : "peer_cert_as_clientid",
              "type" : "Enum(disabled,cn,dn,crt,pem,md5)",
              "default" : "disabled"
            },
            {
              "refs" : [
                {
                  "hash" : "T-mqtt-S-mqtt-client_attrs_init-S-client_attrs_init",
                  "fields" : [
                    {
                      "hash" : "V-mqtt-S-mqtt-client_attrs_init-S-client_attrs_init-expression",
                      "doc" : "A one line expression to evaluate a set of predefined string functions (like in the rule engine SQL statements).\nThe expression can be a function call with nested calls as its arguments, or direct variable reference.\nSo far, it does not provide user-defined variable binding (like `var a=1`) or user-defined functions.\nAs an example, to extract the prefix of client ID delimited by a dot: `nth(1, tokens(clientid, '.'))`.\n\nThe variables pre-bound variables are:\n- `clientid`: MQTT Client ID.\n- `username`: MQTT Client's username.\n- `user_property.{NAME}`: User properties in the CONNECT packet.\n- `zone`: Listener's config zone.\n- `listener`: The ID (like `tcp:default`) of the listener from which the client is connected.\nFor TLS clients, connected directly or via proxy-protocol (v2) enabled load balancer,\nsome extra variables can be used:\n- `cn`: Client's TLS certificate common name.\n- `dn`: Client's TLS certificate distinguished name (the subject).\n- `peersni`: TLS server name indication sent by the client.\n\nYou can read more about variform expressions in EMQX docs.",
                      "text" : "expression",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-mqtt-S-mqtt-client_attrs_init-S-client_attrs_init-set_as_attr",
                      "doc" : "The name of the client attribute extracted from the client data.\nThe extracted attribute will be stored in the `client_attrs` property with this name.",
                      "text" : "set_as_attr",
                      "type" : "String"
                    }
                  ],
                  "doc" : "Specify how to initialize client attributes.\nEach client attribute can be initialized as `client_attrs.{NAME}`,\nwhere `{NAME}` is the name of the attribute specified in the config field `set_as_attr`.\n\nThe initialized client attribute will be stored in the `client_attrs` property with the specified name,\nand can be used as a variable to render a template for mountpoint, authentication and authorization requests.\n\nFor example, use `${client_attrs.tns}` to render an HTTP POST body when `set_as_attr = tns`,\nor render listener config `moutpoint = ${client_attrs.tns}/` for topic namespacing.",
                  "text" : "client_attrs_init"
                }
              ],
              "hash" : "V-mqtt-S-mqtt-client_attrs_init",
              "doc" : "Specify how to initialize client attributes.\nEach client attribute can be initialized as `client_attrs.{NAME}`,\nwhere `{NAME}` is the name of the attribute specified in the config field `set_as_attr`.\n\nThe initialized client attribute will be stored in the `client_attrs` property with the specified name,\nand can be used as a variable to render a template for mountpoint, authentication and authorization requests.\n\nFor example, use `${client_attrs.tns}` to render an HTTP POST body when `set_as_attr = tns`,\nor render listener config `moutpoint = ${client_attrs.tns}/` for topic namespacing.",
              "text" : "client_attrs_init",
              "type" : "Array(Struct(client_attrs_init))",
              "default" : "[]"
            },
            {
              "hash" : "V-mqtt-S-mqtt-clientid_override",
              "doc" : "A one line expression to evaluate a set of predefined string functions (like in the rule engine SQL statements).\nThe expression can be a function call with nested calls as its arguments, or direct variable reference.\nSo far, it does not provide user-defined variable binding (like `var a=1`) or user-defined functions.\nAs an example, to extract the prefix of username delimited by a dot: `nth(1, tokens(username, '.'))`.\n\nThe variables pre-bound variables are:\n- `clientid`: The original MQTT Client ID.\n- `username`: MQTT Client's username.\n- `client_attrs.{NAME}`: Client attributes initialized by per config `client_attrs_init`.\nFor TLS clients, connected directly or via proxy-protocol (v2) enabled load balancer,\nsome extra variables can be used:\n- `cn`: Client's TLS certificate common name.\n- `dn`: Client's TLS certificate distinguished name (the subject).\n- `peersni`: TLS server name indication sent by the client.\n\nYou can read more about variform expressions in EMQX docs.",
              "text" : "clientid_override",
              "type" : "OneOf(String(\"disabled\"),String)",
              "default" : "disabled"
            },
            {
              "hash" : "V-mqtt-S-mqtt-session_expiry_interval",
              "doc" : "Specifies how long the session will expire after the connection is disconnected, only for non-MQTT 5.0 connections.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "session_expiry_interval",
              "type" : "Duration",
              "default" : "\"2h\""
            },
            {
              "hash" : "V-mqtt-S-mqtt-message_expiry_interval",
              "doc" : "The expiry interval of MQTT messages. For MQTT 5.0 clients, this configuration will only take effect when the `Message-Expiry-Interval` property is not set in the message; otherwise, the value of the `Message-Expiry-Interval` property will be used. For MQTT versions older than 5.0, this configuration will always take effect. Please note that setting `message_expiry_interval` greater than `session_expiry_interval` is meaningless, as all messages will be cleared when the session expires.",
              "text" : "message_expiry_interval",
              "type" : "OneOf(Duration,String(\"infinity\"))",
              "default" : "infinity"
            },
            {
              "hash" : "V-mqtt-S-mqtt-max_awaiting_rel",
              "doc" : "For each publisher session, the maximum number of outstanding QoS 2 messages pending on the client to send PUBREL. After reaching this limit, new QoS 2 PUBLISH requests will be rejected with `147(0x93)` until either PUBREL is received or timed out.",
              "text" : "max_awaiting_rel",
              "type" : "OneOf(Integer(0..+inf),String(\"infinity\"))",
              "default" : "100"
            },
            {
              "hash" : "V-mqtt-S-mqtt-max_qos_allowed",
              "doc" : "Maximum QoS allowed.",
              "text" : "max_qos_allowed",
              "type" : "Integer(0..2)",
              "default" : "2"
            },
            {
              "hash" : "V-mqtt-S-mqtt-mqueue_priorities",
              "doc" : "Topic priority list. Prioritize messages in the message queue by topic. The priority range is `[1, 255]`.\n\nThe larger the value, the higher the priority. Messages with higher priority will be sent first.\n\nTopics not in this list will use the default priority (specified by `mqueue_default_priority`).\n\nBy default, this list is empty, which means all topics have the same priority.\n\nNote: commas and equal signs are not supported in topic names.\n\nFor example, if you want `topic/1` to have a higher priority than `topic/2`, you can configure it like this:\n\n`mqueue_priorities: {\"topic/1\": 10, \"topic/2\": 8}`",
              "text" : "mqueue_priorities",
              "type" : "OneOf(String(\"disabled\"),Map)",
              "default" : "disabled"
            },
            {
              "hash" : "V-mqtt-S-mqtt-mqueue_default_priority",
              "doc" : "Default topic priority, which will be used by topics not in <code>Topic Priorities</code> (<code>mqueue_priorities</code>).",
              "text" : "mqueue_default_priority",
              "type" : "Enum(highest,lowest)",
              "default" : "lowest"
            },
            {
              "hash" : "V-mqtt-S-mqtt-mqueue_store_qos0",
              "doc" : "Specifies whether to store QoS 0 messages in the message queue while the connection is down but the session remains.",
              "text" : "mqueue_store_qos0",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-mqtt-S-mqtt-max_mqueue_len",
              "doc" : "Maximum queue length. Enqueued messages when persistent client disconnected, or inflight window is full.",
              "text" : "max_mqueue_len",
              "type" : "OneOf(Integer(0..+inf),String(\"infinity\"))",
              "default" : "1000"
            },
            {
              "hash" : "V-mqtt-S-mqtt-max_inflight",
              "doc" : "Maximum number of QoS 1 and QoS 2 messages that are allowed to be delivered simultaneously before completing the acknowledgment.",
              "text" : "max_inflight",
              "type" : "Integer(1..65535)",
              "default" : "32"
            },
            {
              "hash" : "V-mqtt-S-mqtt-max_subscriptions",
              "doc" : "Maximum number of subscriptions allowed per client.",
              "text" : "max_subscriptions",
              "type" : "OneOf(Integer(1..inf),String(\"infinity\"))",
              "default" : "infinity"
            },
            {
              "hash" : "V-mqtt-S-mqtt-upgrade_qos",
              "doc" : "Force upgrade of QoS level according to subscription.",
              "text" : "upgrade_qos",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-mqtt-S-mqtt-await_rel_timeout",
              "doc" : "For client to broker QoS 2 message, the time limit for the broker to wait before the `PUBREL` message is received. The wait is aborted after timed out, meaning the packet ID is freed for new `PUBLISH` requests. Receiving a stale `PUBREL` causes a warning level log. Note, the message is delivered to subscribers before entering the wait for PUBREL.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "await_rel_timeout",
              "type" : "Duration",
              "default" : "\"300s\""
            },
            {
              "refs" : [
                {
                  "hash" : "T-mqtt-S-mqtt-limiter-S-mqtt",
                  "fields" : [
                    {
                      "hash" : "V-mqtt-S-mqtt-limiter-S-mqtt-bytes_rate",
                      "doc" : "Limits the number of bytes a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nThe unit of the bytes could be: B, KB, MB, GB.\n\nFor example:\n\n- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be dropped/rejected.\n- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be dropped/rejected.",
                      "text" : "bytes_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-mqtt-S-mqtt-limiter-S-mqtt-bytes_burst",
                      "doc" : "Number of bytes that can be sent in a burst, on top of regular `bytes_rate`.\n\nFor example: `100MB/60m`: Once every 60 minutes, up to 100 megabytes can be sent in a short period of time.",
                      "text" : "bytes_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-mqtt-S-mqtt-limiter-S-mqtt-messages_rate",
                      "doc" : "Limits the number of messages a single client can send to the broker, per each node.\n\nOnce the limit is reached, EMQX will drop QoS 0 messages and reject QoS 1 and QoS 2 messages\nwith \"Quota Exceeded\" error code (0x97).\n\nFor example:\n\n- `500/s`: Only 500 messages will be received per second, and the remaining messages will be dropped/rejected.\n- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be dropped/rejected.",
                      "text" : "messages_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-mqtt-S-mqtt-limiter-S-mqtt-messages_burst",
                      "doc" : "Number of messages that can be sent in a burst, on top of regular `messages_rate`, per each node.\n\nFor example: `10000/60m`: Once in 60 minutes, up to 10000 messages can be sent in a short period of time.",
                      "text" : "messages_burst",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-mqtt-S-mqtt-limiter-S-mqtt-max_conn_rate",
                      "doc" : "Limits how quickly this listener accepts connections, per each node.\n\nOnce the limit is reached, EMQX will automatically close any new connections right after theyâ€™re accepted, effectively draining the queue of connections waiting to be accepted.\n\nFor example:\n\n- `1000/s`: Only accepts 1000 connections per second.\n- `1000/10s`: Only accepts 1000 connections every 10 seconds.",
                      "text" : "max_conn_rate",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-mqtt-S-mqtt-limiter-S-mqtt-max_conn_burst",
                      "doc" : "Number of connections that can be accepted in a burst, on top of regular rate, per each node.\n\nFor example: `10000/60m`: Once every 60 minutes, up to 10000 connections can be accepted in a short period of time.",
                      "text" : "max_conn_burst",
                      "type" : "String"
                    }
                  ],
                  "doc" : "MQTT related limiters.",
                  "text" : "mqtt"
                }
              ],
              "hash" : "V-mqtt-S-mqtt-limiter",
              "doc" : "MQTT related limiter configuration.",
              "text" : "limiter",
              "type" : "Struct(mqtt)"
            }
          ],
          "doc" : "Global MQTT configuration.",
          "text" : "mqtt"
        }
      ],
      "hash" : "V-mqtt",
      "doc" : "Global MQTT configuration.\nThe configs here work as default values which can be overridden in <code>zone</code> configs",
      "text" : "mqtt",
      "type" : "Struct(mqtt)"
    },
    {
      "refs" : [
        {
          "hash" : "T-authentication-S-builtin_db",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw-name",
                      "doc" : "For BCRYPT password hashing, must set name to 'bcrypt'",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    },
                    {
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-bcrypt_rw-salt_rounds",
                      "doc" : "Work factor for BCRYPT password generation.",
                      "text" : "salt_rounds",
                      "type" : "Integer(5..10)",
                      "default" : "10"
                    }
                  ],
                  "doc" : "Settings for bcrypt password hashing algorithm (for DB backends with write capability).",
                  "text" : "bcrypt_rw"
                },
                {
                  "hash" : "T-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-name",
                      "doc" : "For PBKDF2 password hashing, must set name to 'pbkdf2'",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "doc" : "Specifies which HMAC function to use in PBKDF2 algorithm. Note that md4, md5, ripemd160 are no longer supported since 5.8.3.",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-iterations",
                      "doc" : "Number of iterations for PBKDF2 algorithm. Higher values provide better security but require more computation.",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-pbkdf2-dk_length",
                      "doc" : "Length of the derived key in bytes for PBKDF2 algorithm.",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "text" : "pbkdf2"
                },
                {
                  "hash" : "T-authentication-S-builtin_db-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-simple-name",
                      "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-builtin_db-password_hash_algorithm-S-simple-salt_position",
                      "doc" : "Salt position for PLAIN, SHA, SHA256 and SHA512 algorithms.",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-builtin_db-password_hash_algorithm",
              "doc" : "Options for password hash creation and verification.",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt_rw),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "hash" : "V-authentication-S-builtin_db-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-builtin_db-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"built_in_database\")"
            },
            {
              "hash" : "V-authentication-S-builtin_db-user_id_type",
              "doc" : "Specify whether to use `clientid` or `username` for authentication.",
              "text" : "user_id_type",
              "type" : "Enum(clientid,username)",
              "default" : "username"
            },
            {
              "hash" : "V-authentication-S-builtin_db-bootstrap_file",
              "doc" : "The bootstrap file imports users into the built-in database.\nIt will not import a user ID that already exists in the database.\nThe file content format is determined by `bootstrap_type`.",
              "text" : "bootstrap_file",
              "type" : "String",
              "default" : "\"${EMQX_ETC_DIR}/auth-built-in-db-bootstrap.csv\""
            },
            {
              "hash" : "V-authentication-S-builtin_db-bootstrap_type",
              "doc" : "Specify which type of content the bootstrap file has.\n\n- **`plain`**:\n  - Expected data fields: `user_id`, `password`, `is_superuser`\n  - `user_id`: Can be Client ID or username, depending on built-in database authentication's `user_id_type` config.\n  - `password`: User's plaintext password.\n  - `is_superuser`: Boolean, user's administrative status.\n\n- **`hash`**:\n  - Expected data fields: `user_id`,`password_hash`,`salt`,`is_superuser`\n  - Definitions similar to `plain` type, with `password_hash` and `salt` added for security.\n\nThe content can be either in CSV, or JSON format.\n\nHere is a CSV example: `user_id,password_hash,salt,is_superuser\\nmy_user,b6c743545a7817ae8c8f624371d5f5f0373234bb0ff36b8ffbf19bce0e06ab75,de1024f462fb83910fd13151bd4bd235,true`\n\nAnd JSON content should be decoded into an array of objects, for example: `[{\"user_id\": \"my_user\",\"password\": \"s3cr3tp@ssw0rd\",\"is_superuser\": true}]`.\n\nThe hash string for `password_hash` depends on how `password_hash_algorithm` is configured for the built-in database authentication mechanism. For example, if it's configured as `password_hash_algorithm {name = sha256, salt_position = suffix}`, then the salt is appended to the password before hashed. Here is the equivalent Python expression: `hashlib.sha256(password + salt).hexdigest()`.",
              "text" : "bootstrap_type",
              "type" : "Enum(hash,plain)",
              "default" : "plain"
            },
            {
              "hash" : "V-authentication-S-builtin_db-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "doc" : "Configuration of authenticator using built-in database as data source.",
          "text" : "builtin_db"
        },
        {
          "hash" : "T-authentication-S-mysql",
          "fields" : [
            {
              "hash" : "V-authentication-S-mysql-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-mysql-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"mysql\")"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mysql-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-bcrypt-name",
                      "doc" : "For BCRYPT password hashing, must set name to 'bcrypt'",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "doc" : "Settings for BCRYPT password hashing algorithm.",
                  "text" : "bcrypt"
                },
                {
                  "hash" : "T-authentication-S-mysql-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-name",
                      "doc" : "For PBKDF2 password hashing, must set name to 'pbkdf2'",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "doc" : "Specifies which HMAC function to use in PBKDF2 algorithm. Note that md4, md5, ripemd160 are no longer supported since 5.8.3.",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-iterations",
                      "doc" : "Number of iterations for PBKDF2 algorithm. Higher values provide better security but require more computation.",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-pbkdf2-dk_length",
                      "doc" : "Length of the derived key in bytes for PBKDF2 algorithm.",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "text" : "pbkdf2"
                },
                {
                  "hash" : "T-authentication-S-mysql-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-simple-name",
                      "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-password_hash_algorithm-S-simple-salt_position",
                      "doc" : "Salt position for PLAIN, SHA, SHA256 and SHA512 algorithms.",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mysql-password_hash_algorithm",
              "doc" : "Options for password hash verification.",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "hash" : "V-authentication-S-mysql-query",
              "doc" : "SQL used to query data for authentication, such as password hash.",
              "text" : "query",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mysql-query_timeout",
              "doc" : "Timeout for the SQL query.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "query_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "hash" : "V-authentication-S-mysql-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-mysql-server",
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MySQL default port 3306 is used if `[:Port]` is not specified.",
              "text" : "server",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mysql-database",
              "doc" : "Database name.",
              "text" : "database",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mysql-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-mysql-username",
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "text" : "username",
              "type" : "String",
              "default" : "root"
            },
            {
              "hash" : "V-authentication-S-mysql-password",
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "hash" : "V-authentication-S-mysql-auto_reconnect",
              "doc" : "Deprecated since v5.0.15.",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mysql-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mysql-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mysql-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using MySQL as authentication data source.",
          "text" : "mysql"
        },
        {
          "hash" : "T-authentication-S-postgresql",
          "fields" : [
            {
              "hash" : "V-authentication-S-postgresql-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-postgresql-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"postgresql\")"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-postgresql-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-bcrypt-name",
                      "doc" : "For BCRYPT password hashing, must set name to 'bcrypt'",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "doc" : "Settings for BCRYPT password hashing algorithm.",
                  "text" : "bcrypt"
                },
                {
                  "hash" : "T-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-name",
                      "doc" : "For PBKDF2 password hashing, must set name to 'pbkdf2'",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "doc" : "Specifies which HMAC function to use in PBKDF2 algorithm. Note that md4, md5, ripemd160 are no longer supported since 5.8.3.",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-iterations",
                      "doc" : "Number of iterations for PBKDF2 algorithm. Higher values provide better security but require more computation.",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-pbkdf2-dk_length",
                      "doc" : "Length of the derived key in bytes for PBKDF2 algorithm.",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "text" : "pbkdf2"
                },
                {
                  "hash" : "T-authentication-S-postgresql-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-simple-name",
                      "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-password_hash_algorithm-S-simple-salt_position",
                      "doc" : "Salt position for PLAIN, SHA, SHA256 and SHA512 algorithms.",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-postgresql-password_hash_algorithm",
              "doc" : "Options for password hash verification.",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "hash" : "V-authentication-S-postgresql-query",
              "doc" : "SQL used to query data for authentication, such as password hash.",
              "text" : "query",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-postgresql-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-postgresql-server",
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe PostgreSQL default port 5432 is used if `[:Port]` is not specified.",
              "text" : "server",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-postgresql-disable_prepared_statements",
              "doc" : "Disables the usage of prepared statements in the connections.\nSome endpoints, like PGBouncer or Supabase in Transaction mode, do not\nsupport session features such as prepared statements.  For such connections,\nthis option should be enabled.",
              "text" : "disable_prepared_statements",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-authentication-S-postgresql-database",
              "doc" : "Database name.",
              "text" : "database",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-postgresql-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-postgresql-username",
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "text" : "username",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-postgresql-password",
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "hash" : "V-authentication-S-postgresql-auto_reconnect",
              "doc" : "Deprecated since v5.0.15.",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-postgresql-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-postgresql-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-postgresql-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using PostgreSQL as authentication data source.",
          "text" : "postgresql"
        },
        {
          "hash" : "T-authentication-S-mongo_single",
          "fields" : [
            {
              "hash" : "V-authentication-S-mongo_single-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-mongo_single-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"mongodb\")"
            },
            {
              "hash" : "V-authentication-S-mongo_single-collection",
              "doc" : "Collection used to store authentication data.",
              "text" : "collection",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_single-filter",
              "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
              "text" : "filter",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "hash" : "V-authentication-S-mongo_single-password_hash_field",
              "doc" : "Document field that contains password hash.",
              "text" : "password_hash_field",
              "type" : "String",
              "default" : "password_hash"
            },
            {
              "hash" : "V-authentication-S-mongo_single-salt_field",
              "doc" : "Document field that contains the password salt.",
              "text" : "salt_field",
              "type" : "String",
              "default" : "salt"
            },
            {
              "hash" : "V-authentication-S-mongo_single-is_superuser_field",
              "doc" : "Document field that defines if the user has superuser privileges.",
              "text" : "is_superuser_field",
              "type" : "String",
              "default" : "is_superuser"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mongo_single-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-bcrypt-name",
                      "doc" : "For BCRYPT password hashing, must set name to 'bcrypt'",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "doc" : "Settings for BCRYPT password hashing algorithm.",
                  "text" : "bcrypt"
                },
                {
                  "hash" : "T-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-name",
                      "doc" : "For PBKDF2 password hashing, must set name to 'pbkdf2'",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "doc" : "Specifies which HMAC function to use in PBKDF2 algorithm. Note that md4, md5, ripemd160 are no longer supported since 5.8.3.",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-iterations",
                      "doc" : "Number of iterations for PBKDF2 algorithm. Higher values provide better security but require more computation.",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-pbkdf2-dk_length",
                      "doc" : "Length of the derived key in bytes for PBKDF2 algorithm.",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "text" : "pbkdf2"
                },
                {
                  "hash" : "T-authentication-S-mongo_single-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-simple-name",
                      "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-password_hash_algorithm-S-simple-salt_position",
                      "doc" : "Salt position for PLAIN, SHA, SHA256 and SHA512 algorithms.",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mongo_single-password_hash_algorithm",
              "doc" : "Options for password hash verification.",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "hash" : "V-authentication-S-mongo_single-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-mongo_single-mongo_type",
              "doc" : "Standalone instance. Must be set to 'single' when MongoDB server is running in standalone mode.",
              "text" : "mongo_type",
              "type" : "String(\"single\")",
              "default" : "single"
            },
            {
              "hash" : "V-authentication-S-mongo_single-server",
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
              "text" : "server",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_single-w_mode",
              "doc" : "Write mode.",
              "text" : "w_mode",
              "type" : "Enum(unsafe,safe)",
              "default" : "unsafe"
            },
            {
              "hash" : "V-authentication-S-mongo_single-srv_record",
              "doc" : "Use DNS SRV record.",
              "text" : "srv_record",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-authentication-S-mongo_single-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-mongo_single-username",
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "text" : "username",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_single-password",
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "hash" : "V-authentication-S-mongo_single-use_legacy_protocol",
              "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
              "text" : "use_legacy_protocol",
              "type" : "Enum(auto,true,false)",
              "default" : "auto"
            },
            {
              "hash" : "V-authentication-S-mongo_single-auth_source",
              "doc" : "Database name associated with the user's credentials.",
              "text" : "auth_source",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_single-database",
              "doc" : "Database name.",
              "text" : "database",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mongo_single-topology-S-topology",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-max_overflow",
                      "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                      "text" : "max_overflow",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-overflow_ttl",
                      "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "overflow_ttl",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-overflow_check_period",
                      "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "overflow_check_period",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-local_threshold_ms",
                      "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "local_threshold_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-connect_timeout_ms",
                      "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-socket_timeout_ms",
                      "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "socket_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-server_selection_timeout_ms",
                      "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "server_selection_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-wait_queue_timeout_ms",
                      "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "wait_queue_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-heartbeat_frequency_ms",
                      "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "heartbeat_frequency_ms",
                      "type" : "Duration",
                      "default" : "\"200s\""
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-topology-S-topology-min_heartbeat_frequency_ms",
                      "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "min_heartbeat_frequency_ms",
                      "type" : "Duration"
                    }
                  ],
                  "doc" : "Topology of MongoDB.",
                  "text" : "topology"
                }
              ],
              "hash" : "V-authentication-S-mongo_single-topology",
              "text" : "topology",
              "type" : "Struct(topology)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mongo_single-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_single-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mongo_single-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using MongoDB (Standalone) as authentication data source.",
          "text" : "mongo_single"
        },
        {
          "hash" : "T-authentication-S-mongo_rs",
          "fields" : [
            {
              "hash" : "V-authentication-S-mongo_rs-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"mongodb\")"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-collection",
              "doc" : "Collection used to store authentication data.",
              "text" : "collection",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-filter",
              "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
              "text" : "filter",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-password_hash_field",
              "doc" : "Document field that contains password hash.",
              "text" : "password_hash_field",
              "type" : "String",
              "default" : "password_hash"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-salt_field",
              "doc" : "Document field that contains the password salt.",
              "text" : "salt_field",
              "type" : "String",
              "default" : "salt"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-is_superuser_field",
              "doc" : "Document field that defines if the user has superuser privileges.",
              "text" : "is_superuser_field",
              "type" : "String",
              "default" : "is_superuser"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mongo_rs-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-bcrypt-name",
                      "doc" : "For BCRYPT password hashing, must set name to 'bcrypt'",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "doc" : "Settings for BCRYPT password hashing algorithm.",
                  "text" : "bcrypt"
                },
                {
                  "hash" : "T-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-name",
                      "doc" : "For PBKDF2 password hashing, must set name to 'pbkdf2'",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "doc" : "Specifies which HMAC function to use in PBKDF2 algorithm. Note that md4, md5, ripemd160 are no longer supported since 5.8.3.",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-iterations",
                      "doc" : "Number of iterations for PBKDF2 algorithm. Higher values provide better security but require more computation.",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-pbkdf2-dk_length",
                      "doc" : "Length of the derived key in bytes for PBKDF2 algorithm.",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "text" : "pbkdf2"
                },
                {
                  "hash" : "T-authentication-S-mongo_rs-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-simple-name",
                      "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm-S-simple-salt_position",
                      "doc" : "Salt position for PLAIN, SHA, SHA256 and SHA512 algorithms.",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mongo_rs-password_hash_algorithm",
              "doc" : "Options for password hash verification.",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-mongo_rs-mongo_type",
              "doc" : "Replica set. Must be set to 'rs' when MongoDB server is running in 'replica set' mode.",
              "text" : "mongo_type",
              "type" : "String(\"rs\")",
              "default" : "rs"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-servers",
              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
              "text" : "servers",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-w_mode",
              "doc" : "Write mode.",
              "text" : "w_mode",
              "type" : "Enum(unsafe,safe)",
              "default" : "unsafe"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-r_mode",
              "doc" : "Read mode.",
              "text" : "r_mode",
              "type" : "Enum(master,slave_ok)",
              "default" : "master"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-replica_set_name",
              "doc" : "Name of the replica set.",
              "text" : "replica_set_name",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-srv_record",
              "doc" : "Use DNS SRV record.",
              "text" : "srv_record",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-username",
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "text" : "username",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-password",
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-use_legacy_protocol",
              "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
              "text" : "use_legacy_protocol",
              "type" : "Enum(auto,true,false)",
              "default" : "auto"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-auth_source",
              "doc" : "Database name associated with the user's credentials.",
              "text" : "auth_source",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_rs-database",
              "doc" : "Database name.",
              "text" : "database",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mongo_rs-topology-S-topology",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-max_overflow",
                      "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                      "text" : "max_overflow",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-overflow_ttl",
                      "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "overflow_ttl",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-overflow_check_period",
                      "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "overflow_check_period",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-local_threshold_ms",
                      "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "local_threshold_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-connect_timeout_ms",
                      "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-socket_timeout_ms",
                      "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "socket_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-server_selection_timeout_ms",
                      "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "server_selection_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-wait_queue_timeout_ms",
                      "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "wait_queue_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-heartbeat_frequency_ms",
                      "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "heartbeat_frequency_ms",
                      "type" : "Duration",
                      "default" : "\"200s\""
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-topology-S-topology-min_heartbeat_frequency_ms",
                      "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "min_heartbeat_frequency_ms",
                      "type" : "Duration"
                    }
                  ],
                  "doc" : "Topology of MongoDB.",
                  "text" : "topology"
                }
              ],
              "hash" : "V-authentication-S-mongo_rs-topology",
              "text" : "topology",
              "type" : "Struct(topology)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mongo_rs-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_rs-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mongo_rs-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using MongoDB (Replica Set) as authentication data source.",
          "text" : "mongo_rs"
        },
        {
          "hash" : "T-authentication-S-mongo_sharded",
          "fields" : [
            {
              "hash" : "V-authentication-S-mongo_sharded-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"mongodb\")"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-collection",
              "doc" : "Collection used to store authentication data.",
              "text" : "collection",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-filter",
              "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
              "text" : "filter",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-password_hash_field",
              "doc" : "Document field that contains password hash.",
              "text" : "password_hash_field",
              "type" : "String",
              "default" : "password_hash"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-salt_field",
              "doc" : "Document field that contains the password salt.",
              "text" : "salt_field",
              "type" : "String",
              "default" : "salt"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-is_superuser_field",
              "doc" : "Document field that defines if the user has superuser privileges.",
              "text" : "is_superuser_field",
              "type" : "String",
              "default" : "is_superuser"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mongo_sharded-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-bcrypt-name",
                      "doc" : "For BCRYPT password hashing, must set name to 'bcrypt'",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "doc" : "Settings for BCRYPT password hashing algorithm.",
                  "text" : "bcrypt"
                },
                {
                  "hash" : "T-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-name",
                      "doc" : "For PBKDF2 password hashing, must set name to 'pbkdf2'",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "doc" : "Specifies which HMAC function to use in PBKDF2 algorithm. Note that md4, md5, ripemd160 are no longer supported since 5.8.3.",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-iterations",
                      "doc" : "Number of iterations for PBKDF2 algorithm. Higher values provide better security but require more computation.",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-pbkdf2-dk_length",
                      "doc" : "Length of the derived key in bytes for PBKDF2 algorithm.",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "text" : "pbkdf2"
                },
                {
                  "hash" : "T-authentication-S-mongo_sharded-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-simple-name",
                      "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm-S-simple-salt_position",
                      "doc" : "Salt position for PLAIN, SHA, SHA256 and SHA512 algorithms.",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-mongo_sharded-password_hash_algorithm",
              "doc" : "Options for password hash verification.",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-mongo_type",
              "doc" : "Sharded cluster. Must be set to 'sharded' when MongoDB server is running in 'sharded' mode.",
              "text" : "mongo_type",
              "type" : "String(\"sharded\")",
              "default" : "sharded"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-servers",
              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
              "text" : "servers",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-w_mode",
              "doc" : "Write mode.",
              "text" : "w_mode",
              "type" : "Enum(unsafe,safe)",
              "default" : "unsafe"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-srv_record",
              "doc" : "Use DNS SRV record.",
              "text" : "srv_record",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-username",
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "text" : "username",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-password",
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-use_legacy_protocol",
              "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
              "text" : "use_legacy_protocol",
              "type" : "Enum(auto,true,false)",
              "default" : "auto"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-auth_source",
              "doc" : "Database name associated with the user's credentials.",
              "text" : "auth_source",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-mongo_sharded-database",
              "doc" : "Database name.",
              "text" : "database",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mongo_sharded-topology-S-topology",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-max_overflow",
                      "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                      "text" : "max_overflow",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-overflow_ttl",
                      "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "overflow_ttl",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-overflow_check_period",
                      "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "overflow_check_period",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-local_threshold_ms",
                      "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "local_threshold_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-connect_timeout_ms",
                      "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-socket_timeout_ms",
                      "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "socket_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-server_selection_timeout_ms",
                      "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "server_selection_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-wait_queue_timeout_ms",
                      "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "wait_queue_timeout_ms",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-heartbeat_frequency_ms",
                      "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "heartbeat_frequency_ms",
                      "type" : "Duration",
                      "default" : "\"200s\""
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-topology-S-topology-min_heartbeat_frequency_ms",
                      "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "min_heartbeat_frequency_ms",
                      "type" : "Duration"
                    }
                  ],
                  "doc" : "Topology of MongoDB.",
                  "text" : "topology"
                }
              ],
              "hash" : "V-authentication-S-mongo_sharded-topology",
              "text" : "topology",
              "type" : "Struct(topology)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-mongo_sharded-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-mongo_sharded-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-mongo_sharded-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using MongoDB (Sharded Cluster) as authentication data source.",
          "text" : "mongo_sharded"
        },
        {
          "hash" : "T-authentication-S-redis_single",
          "fields" : [
            {
              "hash" : "V-authentication-S-redis_single-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-redis_single-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"redis\")"
            },
            {
              "hash" : "V-authentication-S-redis_single-cmd",
              "doc" : "The Redis Command used to query data for authentication such as password hash, currently only supports <code>HGET</code> and <code>HMGET</code>.",
              "text" : "cmd",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-redis_single-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-bcrypt-name",
                      "doc" : "For BCRYPT password hashing, must set name to 'bcrypt'",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "doc" : "Settings for BCRYPT password hashing algorithm.",
                  "text" : "bcrypt"
                },
                {
                  "hash" : "T-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-name",
                      "doc" : "For PBKDF2 password hashing, must set name to 'pbkdf2'",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "doc" : "Specifies which HMAC function to use in PBKDF2 algorithm. Note that md4, md5, ripemd160 are no longer supported since 5.8.3.",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-iterations",
                      "doc" : "Number of iterations for PBKDF2 algorithm. Higher values provide better security but require more computation.",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-pbkdf2-dk_length",
                      "doc" : "Length of the derived key in bytes for PBKDF2 algorithm.",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "text" : "pbkdf2"
                },
                {
                  "hash" : "T-authentication-S-redis_single-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-simple-name",
                      "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-password_hash_algorithm-S-simple-salt_position",
                      "doc" : "Salt position for PLAIN, SHA, SHA256 and SHA512 algorithms.",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-redis_single-password_hash_algorithm",
              "doc" : "Options for password hash verification.",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "hash" : "V-authentication-S-redis_single-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-redis_single-server",
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
              "text" : "server",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-redis_single-redis_type",
              "doc" : "Single mode. Must be set to 'single' when Redis server is running in single mode.",
              "text" : "redis_type",
              "type" : "String(\"single\")",
              "default" : "single"
            },
            {
              "hash" : "V-authentication-S-redis_single-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-redis_single-username",
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "text" : "username",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-redis_single-password",
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "hash" : "V-authentication-S-redis_single-database",
              "doc" : "Redis database ID.",
              "text" : "database",
              "type" : "Integer(0..+inf)",
              "default" : "0"
            },
            {
              "hash" : "V-authentication-S-redis_single-auto_reconnect",
              "doc" : "Deprecated since v5.0.15.",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-redis_single-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-redis_single-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-redis_single-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using Redis (Standalone) as authentication data source.",
          "text" : "redis_single"
        },
        {
          "hash" : "T-authentication-S-redis_cluster",
          "fields" : [
            {
              "hash" : "V-authentication-S-redis_cluster-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-redis_cluster-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"redis\")"
            },
            {
              "hash" : "V-authentication-S-redis_cluster-cmd",
              "doc" : "The Redis Command used to query data for authentication such as password hash, currently only supports <code>HGET</code> and <code>HMGET</code>.",
              "text" : "cmd",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-redis_cluster-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-bcrypt-name",
                      "doc" : "For BCRYPT password hashing, must set name to 'bcrypt'",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "doc" : "Settings for BCRYPT password hashing algorithm.",
                  "text" : "bcrypt"
                },
                {
                  "hash" : "T-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-name",
                      "doc" : "For PBKDF2 password hashing, must set name to 'pbkdf2'",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "doc" : "Specifies which HMAC function to use in PBKDF2 algorithm. Note that md4, md5, ripemd160 are no longer supported since 5.8.3.",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-iterations",
                      "doc" : "Number of iterations for PBKDF2 algorithm. Higher values provide better security but require more computation.",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-pbkdf2-dk_length",
                      "doc" : "Length of the derived key in bytes for PBKDF2 algorithm.",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "text" : "pbkdf2"
                },
                {
                  "hash" : "T-authentication-S-redis_cluster-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-simple-name",
                      "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm-S-simple-salt_position",
                      "doc" : "Salt position for PLAIN, SHA, SHA256 and SHA512 algorithms.",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-redis_cluster-password_hash_algorithm",
              "doc" : "Options for password hash verification.",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "hash" : "V-authentication-S-redis_cluster-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-redis_cluster-servers",
              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
              "text" : "servers",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-redis_cluster-redis_type",
              "doc" : "Cluster mode. Must be set to 'cluster' when Redis server is running in clustered mode.",
              "text" : "redis_type",
              "type" : "String(\"cluster\")",
              "default" : "cluster"
            },
            {
              "hash" : "V-authentication-S-redis_cluster-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-redis_cluster-username",
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "text" : "username",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-redis_cluster-password",
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "hash" : "V-authentication-S-redis_cluster-auto_reconnect",
              "doc" : "Deprecated since v5.0.15.",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-redis_cluster-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-redis_cluster-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-redis_cluster-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using Redis (Cluster) as authentication data source.",
          "text" : "redis_cluster"
        },
        {
          "hash" : "T-authentication-S-redis_sentinel",
          "fields" : [
            {
              "hash" : "V-authentication-S-redis_sentinel-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"redis\")"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-cmd",
              "doc" : "The Redis Command used to query data for authentication such as password hash, currently only supports <code>HGET</code> and <code>HMGET</code>.",
              "text" : "cmd",
              "type" : "String"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-redis_sentinel-password_hash_algorithm-S-bcrypt",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-bcrypt-name",
                      "doc" : "For BCRYPT password hashing, must set name to 'bcrypt'",
                      "text" : "name",
                      "type" : "String(\"bcrypt\")"
                    }
                  ],
                  "doc" : "Settings for BCRYPT password hashing algorithm.",
                  "text" : "bcrypt"
                },
                {
                  "hash" : "T-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-name",
                      "doc" : "For PBKDF2 password hashing, must set name to 'pbkdf2'",
                      "text" : "name",
                      "type" : "String(\"pbkdf2\")"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-mac_fun",
                      "doc" : "Specifies which HMAC function to use in PBKDF2 algorithm. Note that md4, md5, ripemd160 are no longer supported since 5.8.3.",
                      "text" : "mac_fun",
                      "type" : "Enum(md4,md5,ripemd160,sha,sha224,sha256,sha384,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-iterations",
                      "doc" : "Number of iterations for PBKDF2 algorithm. Higher values provide better security but require more computation.",
                      "text" : "iterations",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-pbkdf2-dk_length",
                      "doc" : "Length of the derived key in bytes for PBKDF2 algorithm.",
                      "text" : "dk_length",
                      "type" : "Integer(1..+inf)"
                    }
                  ],
                  "doc" : "Settings for PBKDF2 password hashing algorithm.",
                  "text" : "pbkdf2"
                },
                {
                  "hash" : "T-authentication-S-redis_sentinel-password_hash_algorithm-S-simple",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-simple-name",
                      "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                      "text" : "name",
                      "type" : "Enum(plain,md5,sha,sha256,sha512)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm-S-simple-salt_position",
                      "doc" : "Salt position for PLAIN, SHA, SHA256 and SHA512 algorithms.",
                      "text" : "salt_position",
                      "type" : "Enum(disable,prefix,suffix)",
                      "default" : "prefix"
                    }
                  ],
                  "doc" : "Settings for simple algorithms like PLAIN, SHA, SHA256 and SHA512.",
                  "text" : "simple"
                }
              ],
              "hash" : "V-authentication-S-redis_sentinel-password_hash_algorithm",
              "doc" : "Options for password hash verification.",
              "text" : "password_hash_algorithm",
              "type" : "OneOf(Struct(bcrypt),Struct(pbkdf2),Struct(simple))",
              "default" : "{name = sha256, salt_position = prefix}"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-servers",
              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
              "text" : "servers",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-redis_type",
              "doc" : "Sentinel mode. Must be set to 'sentinel' when Redis server is running in sentinel mode.",
              "text" : "redis_type",
              "type" : "String(\"sentinel\")",
              "default" : "sentinel"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-sentinel",
              "doc" : "The cluster name in Redis sentinel mode.",
              "text" : "sentinel",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-username",
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "text" : "username",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-password",
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-database",
              "doc" : "Redis database ID.",
              "text" : "database",
              "type" : "Integer(0..+inf)",
              "default" : "0"
            },
            {
              "hash" : "V-authentication-S-redis_sentinel-auto_reconnect",
              "doc" : "Deprecated since v5.0.15.",
              "text" : "auto_reconnect",
              "type" : "Boolean"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-redis_sentinel-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-redis_sentinel-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-redis_sentinel-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using Redis (Sentinel) as authentication data source.",
          "text" : "redis_sentinel"
        },
        {
          "hash" : "T-authentication-S-http_get",
          "fields" : [
            {
              "hash" : "V-authentication-S-http_get-method",
              "doc" : "HTTP request method.",
              "text" : "method",
              "type" : "String(\"get\")"
            },
            {
              "hash" : "V-authentication-S-http_get-headers",
              "doc" : "List of HTTP headers (without <code>content-type</code>).",
              "text" : "headers",
              "type" : "Map",
              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", keep-alive = \"timeout=30, max=1000\"}"
            },
            {
              "hash" : "V-authentication-S-http_get-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-http_get-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"http\")"
            },
            {
              "hash" : "V-authentication-S-http_get-url",
              "doc" : "URL of the HTTP server.",
              "text" : "url",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-http_get-body",
              "doc" : "HTTP request body.",
              "text" : "body",
              "type" : "Map"
            },
            {
              "hash" : "V-authentication-S-http_get-request_timeout",
              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "hash" : "V-authentication-S-http_get-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-http_get-request-S-request",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-http_get-request-S-request-method",
                      "doc" : "HTTP method.",
                      "text" : "method",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-request-S-request-path",
                      "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "text" : "path",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-request-S-request-body",
                      "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "text" : "body",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-request-S-request-headers",
                      "doc" : "List of HTTP headers.",
                      "text" : "headers",
                      "type" : "Map"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-request-S-request-max_retries",
                      "doc" : "Max retry times if error on sending request.",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-request-S-request-request_timeout",
                      "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    }
                  ],
                  "doc" : "",
                  "text" : "request"
                }
              ],
              "hash" : "V-authentication-S-http_get-request",
              "doc" : "Configure HTTP request parameters.",
              "text" : "request",
              "type" : "Struct(request)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-http_get-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-http_get-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-http_get-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            },
            {
              "hash" : "V-authentication-S-http_get-pool_size",
              "doc" : "The pool size.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-http_get-connect_timeout",
              "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "hash" : "V-authentication-S-http_get-retry_interval",
              "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "retry_interval",
              "type" : "Duration"
            },
            {
              "hash" : "V-authentication-S-http_get-max_inactive",
              "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "max_inactive",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "hash" : "V-authentication-S-http_get-max_retries",
              "doc" : "Deprecated since 5.0.4.",
              "text" : "max_retries",
              "type" : "Integer(0..+inf)"
            },
            {
              "hash" : "V-authentication-S-http_get-enable_pipelining",
              "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
              "text" : "enable_pipelining",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            }
          ],
          "doc" : "Configuration of authenticator using HTTP Server as authentication service (Using GET request).",
          "text" : "http_get"
        },
        {
          "hash" : "T-authentication-S-http_post",
          "fields" : [
            {
              "hash" : "V-authentication-S-http_post-method",
              "doc" : "HTTP request method.",
              "text" : "method",
              "type" : "String(\"post\")"
            },
            {
              "hash" : "V-authentication-S-http_post-headers",
              "doc" : "List of HTTP Headers.",
              "text" : "headers",
              "type" : "Map",
              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=30, max=1000\"}"
            },
            {
              "hash" : "V-authentication-S-http_post-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-http_post-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"http\")"
            },
            {
              "hash" : "V-authentication-S-http_post-url",
              "doc" : "URL of the HTTP server.",
              "text" : "url",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-http_post-body",
              "doc" : "HTTP request body.",
              "text" : "body",
              "type" : "Map"
            },
            {
              "hash" : "V-authentication-S-http_post-request_timeout",
              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "hash" : "V-authentication-S-http_post-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-http_post-request-S-request",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-http_post-request-S-request-method",
                      "doc" : "HTTP method.",
                      "text" : "method",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-request-S-request-path",
                      "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "text" : "path",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-request-S-request-body",
                      "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "text" : "body",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-request-S-request-headers",
                      "doc" : "List of HTTP headers.",
                      "text" : "headers",
                      "type" : "Map"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-request-S-request-max_retries",
                      "doc" : "Max retry times if error on sending request.",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-request-S-request-request_timeout",
                      "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    }
                  ],
                  "doc" : "",
                  "text" : "request"
                }
              ],
              "hash" : "V-authentication-S-http_post-request",
              "doc" : "Configure HTTP request parameters.",
              "text" : "request",
              "type" : "Struct(request)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-http_post-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-http_post-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-http_post-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            },
            {
              "hash" : "V-authentication-S-http_post-pool_size",
              "doc" : "The pool size.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-http_post-connect_timeout",
              "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "hash" : "V-authentication-S-http_post-retry_interval",
              "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "retry_interval",
              "type" : "Duration"
            },
            {
              "hash" : "V-authentication-S-http_post-max_inactive",
              "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "max_inactive",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "hash" : "V-authentication-S-http_post-max_retries",
              "doc" : "Deprecated since 5.0.4.",
              "text" : "max_retries",
              "type" : "Integer(0..+inf)"
            },
            {
              "hash" : "V-authentication-S-http_post-enable_pipelining",
              "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
              "text" : "enable_pipelining",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            }
          ],
          "doc" : "Configuration of authenticator using HTTP Server as authentication service (Using POST request).",
          "text" : "http_post"
        },
        {
          "hash" : "T-authentication-S-jwt_hmac",
          "fields" : [
            {
              "hash" : "V-authentication-S-jwt_hmac-algorithm",
              "doc" : "JWT signing algorithm, Supports HMAC (configured as <code>hmac-based</code>) and RSA, ECDSA (configured as <code>public-key</code>).",
              "text" : "algorithm",
              "type" : "Enum(hmac-based)"
            },
            {
              "hash" : "V-authentication-S-jwt_hmac-secret",
              "doc" : "The key to verify the JWT using HMAC algorithm.",
              "text" : "secret",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-jwt_hmac-secret_base64_encoded",
              "doc" : "Whether secret is base64 encoded.",
              "text" : "secret_base64_encoded",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-authentication-S-jwt_hmac-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"jwt\")"
            },
            {
              "hash" : "V-authentication-S-jwt_hmac-acl_claim_name",
              "doc" : "The JWT claim designated for accessing ACL (Access Control List) rules can be specified,\nsuch as using the `acl` claim. A typical decoded JWT with this claim might appear as:\n`{\"username\": \"user1\", \"acl\": ...}`.\n\nSupported ACL Rule Formats:\n\n- Object Format:\n  Utilizes action types pub (publish), sub (subscribe), or all (both publish and subscribe).\n  The value is a list of topic filters.\n  Example: `{\"pub\": [\"topic1\"], \"sub\": [], \"all\": [\"${username}/#\"]}`.\n  This example signifies that the token owner can publish to topic1 and perform both publish and subscribe\n  actions on topics starting with their username.\n  Note: In this format, if no topic matches, the action is denied, and the authorization process terminates.\n\n- Array Format (resembles File-Based ACL Rules):\n  Example: `[{\"permission\": \"allow\", \"action\": \"all\", \"topic\": \"${username}/#\"}]`.\n  Additionally, the `pub` or `publish` action rules can be extended with `qos` and `retain` field,\n  and `sub` or `subscribe` action rules can be extended with a `qos` field.\n  Note: Here, if no rule matches, the action is not immediately denied.\n  The process continues to other configured authorization sources,\n  and ultimately falls back to the default permission in config `authorization.no_match`.\n\nThe ACL claim utilizes MQTT topic wildcard matching rules for publishing or subscribing.\nA special syntax for the 'subscribe' action allows the use of `eq` for an exact match.\nFor instance, `eq t/#` permits or denies subscription to `t/#`, but not to `t/1`.",
              "text" : "acl_claim_name",
              "type" : "String",
              "default" : "acl"
            },
            {
              "hash" : "V-authentication-S-jwt_hmac-verify_claims",
              "doc" : "A list of custom claims to validate. The allowed formats are the following:\nA map where claim names are map keys and expected values are map values:\n <code>{ claim_name = \"${username}\", ...}</code>.\n\nA list of maps with <code>name</code> (claim name) and <code>value</code> (expected claim value) keys:\n <code>[{name = \"claim_name\", value = \"${username}\"}, ...]</code>.\n\nValues can use the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting\n\nAuthentication will verify that the value of claims in the JWT (taken from the Password field) matches what is required in <code>verify_claims</code>.",
              "text" : "verify_claims",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "hash" : "V-authentication-S-jwt_hmac-disconnect_after_expire",
              "doc" : "Disconnect the client after the token expires.",
              "text" : "disconnect_after_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-authentication-S-jwt_hmac-from",
              "doc" : "Field to take JWT from.",
              "text" : "from",
              "type" : "Enum(username,password)",
              "default" : "password"
            },
            {
              "hash" : "V-authentication-S-jwt_hmac-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "doc" : "Configuration when the JWT for authentication is issued using the HMAC algorithm.",
          "text" : "jwt_hmac"
        },
        {
          "hash" : "T-authentication-S-jwt_public_key",
          "fields" : [
            {
              "hash" : "V-authentication-S-jwt_public_key-algorithm",
              "doc" : "JWT signing algorithm, Supports HMAC (configured as <code>hmac-based</code>) and RSA, ECDSA (configured as <code>public-key</code>).",
              "text" : "algorithm",
              "type" : "Enum(public-key)"
            },
            {
              "hash" : "V-authentication-S-jwt_public_key-public_key",
              "doc" : "The public key used to verify the JWT.",
              "text" : "public_key",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-jwt_public_key-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"jwt\")"
            },
            {
              "hash" : "V-authentication-S-jwt_public_key-acl_claim_name",
              "doc" : "The JWT claim designated for accessing ACL (Access Control List) rules can be specified,\nsuch as using the `acl` claim. A typical decoded JWT with this claim might appear as:\n`{\"username\": \"user1\", \"acl\": ...}`.\n\nSupported ACL Rule Formats:\n\n- Object Format:\n  Utilizes action types pub (publish), sub (subscribe), or all (both publish and subscribe).\n  The value is a list of topic filters.\n  Example: `{\"pub\": [\"topic1\"], \"sub\": [], \"all\": [\"${username}/#\"]}`.\n  This example signifies that the token owner can publish to topic1 and perform both publish and subscribe\n  actions on topics starting with their username.\n  Note: In this format, if no topic matches, the action is denied, and the authorization process terminates.\n\n- Array Format (resembles File-Based ACL Rules):\n  Example: `[{\"permission\": \"allow\", \"action\": \"all\", \"topic\": \"${username}/#\"}]`.\n  Additionally, the `pub` or `publish` action rules can be extended with `qos` and `retain` field,\n  and `sub` or `subscribe` action rules can be extended with a `qos` field.\n  Note: Here, if no rule matches, the action is not immediately denied.\n  The process continues to other configured authorization sources,\n  and ultimately falls back to the default permission in config `authorization.no_match`.\n\nThe ACL claim utilizes MQTT topic wildcard matching rules for publishing or subscribing.\nA special syntax for the 'subscribe' action allows the use of `eq` for an exact match.\nFor instance, `eq t/#` permits or denies subscription to `t/#`, but not to `t/1`.",
              "text" : "acl_claim_name",
              "type" : "String",
              "default" : "acl"
            },
            {
              "hash" : "V-authentication-S-jwt_public_key-verify_claims",
              "doc" : "A list of custom claims to validate. The allowed formats are the following:\nA map where claim names are map keys and expected values are map values:\n <code>{ claim_name = \"${username}\", ...}</code>.\n\nA list of maps with <code>name</code> (claim name) and <code>value</code> (expected claim value) keys:\n <code>[{name = \"claim_name\", value = \"${username}\"}, ...]</code>.\n\nValues can use the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting\n\nAuthentication will verify that the value of claims in the JWT (taken from the Password field) matches what is required in <code>verify_claims</code>.",
              "text" : "verify_claims",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "hash" : "V-authentication-S-jwt_public_key-disconnect_after_expire",
              "doc" : "Disconnect the client after the token expires.",
              "text" : "disconnect_after_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-authentication-S-jwt_public_key-from",
              "doc" : "Field to take JWT from.",
              "text" : "from",
              "type" : "Enum(username,password)",
              "default" : "password"
            },
            {
              "hash" : "V-authentication-S-jwt_public_key-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "doc" : "Configuration when the JWT for authentication is issued using RSA or ECDSA algorithm.",
          "text" : "jwt_public_key"
        },
        {
          "hash" : "T-authentication-S-jwt_jwks",
          "fields" : [
            {
              "hash" : "V-authentication-S-jwt_jwks-use_jwks",
              "doc" : "Whether to use JWKS.",
              "text" : "use_jwks",
              "type" : "Enum(true)"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-endpoint",
              "doc" : "JWKS endpoint, it's a read-only endpoint that returns the server's public key set in the JWKS format.",
              "text" : "endpoint",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-headers",
              "doc" : "List of HTTP headers to send with the JWKS request.",
              "text" : "headers",
              "type" : "Map",
              "default" : "{Accept = \"application/json\"}"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-refresh_interval",
              "doc" : "JWKS refresh interval.",
              "text" : "refresh_interval",
              "type" : "Integer",
              "default" : "300"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-jwt_jwks-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-jwt_jwks-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-jwt_jwks-ssl",
              "doc" : "SSL options.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"jwt\")"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-acl_claim_name",
              "doc" : "The JWT claim designated for accessing ACL (Access Control List) rules can be specified,\nsuch as using the `acl` claim. A typical decoded JWT with this claim might appear as:\n`{\"username\": \"user1\", \"acl\": ...}`.\n\nSupported ACL Rule Formats:\n\n- Object Format:\n  Utilizes action types pub (publish), sub (subscribe), or all (both publish and subscribe).\n  The value is a list of topic filters.\n  Example: `{\"pub\": [\"topic1\"], \"sub\": [], \"all\": [\"${username}/#\"]}`.\n  This example signifies that the token owner can publish to topic1 and perform both publish and subscribe\n  actions on topics starting with their username.\n  Note: In this format, if no topic matches, the action is denied, and the authorization process terminates.\n\n- Array Format (resembles File-Based ACL Rules):\n  Example: `[{\"permission\": \"allow\", \"action\": \"all\", \"topic\": \"${username}/#\"}]`.\n  Additionally, the `pub` or `publish` action rules can be extended with `qos` and `retain` field,\n  and `sub` or `subscribe` action rules can be extended with a `qos` field.\n  Note: Here, if no rule matches, the action is not immediately denied.\n  The process continues to other configured authorization sources,\n  and ultimately falls back to the default permission in config `authorization.no_match`.\n\nThe ACL claim utilizes MQTT topic wildcard matching rules for publishing or subscribing.\nA special syntax for the 'subscribe' action allows the use of `eq` for an exact match.\nFor instance, `eq t/#` permits or denies subscription to `t/#`, but not to `t/1`.",
              "text" : "acl_claim_name",
              "type" : "String",
              "default" : "acl"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-verify_claims",
              "doc" : "A list of custom claims to validate. The allowed formats are the following:\nA map where claim names are map keys and expected values are map values:\n <code>{ claim_name = \"${username}\", ...}</code>.\n\nA list of maps with <code>name</code> (claim name) and <code>value</code> (expected claim value) keys:\n <code>[{name = \"claim_name\", value = \"${username}\"}, ...]</code>.\n\nValues can use the following placeholders:\n- <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting\n- <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting\n\nAuthentication will verify that the value of claims in the JWT (taken from the Password field) matches what is required in <code>verify_claims</code>.",
              "text" : "verify_claims",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-disconnect_after_expire",
              "doc" : "Disconnect the client after the token expires.",
              "text" : "disconnect_after_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-from",
              "doc" : "Field to take JWT from.",
              "text" : "from",
              "type" : "Enum(username,password)",
              "default" : "password"
            },
            {
              "hash" : "V-authentication-S-jwt_jwks-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "doc" : "Configuration when JWTs used for authentication need to be fetched from the JWKS endpoint.",
          "text" : "jwt_jwks"
        },
        {
          "hash" : "T-authentication-S-scram",
          "fields" : [
            {
              "hash" : "V-authentication-S-scram-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"scram\")"
            },
            {
              "hash" : "V-authentication-S-scram-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"built_in_database\")"
            },
            {
              "hash" : "V-authentication-S-scram-algorithm",
              "doc" : "Hashing algorithm.",
              "text" : "algorithm",
              "type" : "Enum(sha256,sha512)",
              "default" : "sha256"
            },
            {
              "hash" : "V-authentication-S-scram-iteration_count",
              "doc" : "Iteration count.",
              "text" : "iteration_count",
              "type" : "Integer(0..+inf)",
              "default" : "4096"
            },
            {
              "hash" : "V-authentication-S-scram-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "doc" : "Settings for Salted Challenge Response Authentication Mechanism\n(SCRAM) authentication.",
          "text" : "scram"
        },
        {
          "hash" : "T-authentication-S-ldap",
          "fields" : [
            {
              "hash" : "V-authentication-S-ldap-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"password_based\")"
            },
            {
              "hash" : "V-authentication-S-ldap-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"ldap\")"
            },
            {
              "hash" : "V-authentication-S-ldap-query_timeout",
              "doc" : "Timeout for the LDAP query.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "query_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "hash" : "V-authentication-S-ldap-base_dn",
              "doc" : "The name of the base object entry (or possibly the root) relative to\nwhich the Search is to be performed.",
              "text" : "base_dn",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-ldap-filter",
              "doc" : "The filter that defines the conditions that must be fulfilled in order\nfor the Search to match a given entry.<br>\nThe syntax of the filter follows RFC 4515 and also supports placeholders.",
              "text" : "filter",
              "type" : "String",
              "default" : "\"(objectClass=mqttUser)\""
            },
            {
              "hash" : "V-authentication-S-ldap-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-ldap-server",
              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe LDAP default port 389 is used if `[:Port]` is not specified.",
              "text" : "server",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-ldap-pool_size",
              "doc" : "Size of the connection pool towards the bridge target service.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-ldap-username",
              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
              "text" : "username",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-ldap-password",
              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "password",
              "type" : "Secret"
            },
            {
              "hash" : "V-authentication-S-ldap-request_timeout",
              "doc" : "Sets the maximum time in milliseconds that is used for each individual request.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-ldap-ssl-S-ssl",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-ssl-S-ssl-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "SSL connection settings.",
                  "text" : "ssl"
                }
              ],
              "hash" : "V-authentication-S-ldap-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl)",
              "default" : "{enable = false}"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-ldap-method-S-hash_method",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-ldap-method-S-hash_method-type",
                      "doc" : "Authentication method type.",
                      "text" : "type",
                      "type" : "Enum(hash)",
                      "default" : "hash"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-method-S-hash_method-password_attribute",
                      "doc" : "Indicates which attribute is used to represent the user's password.",
                      "text" : "password_attribute",
                      "type" : "String",
                      "default" : "userPassword"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-method-S-hash_method-is_superuser_attribute",
                      "doc" : "Indicates which attribute is used to represent whether the user is a superuser.",
                      "text" : "is_superuser_attribute",
                      "type" : "String",
                      "default" : "isSuperuser"
                    }
                  ],
                  "doc" : "Authenticate by comparing the hashed password which was provided by the `password attribute`.",
                  "text" : "hash_method"
                },
                {
                  "hash" : "T-authentication-S-ldap-method-S-bind_method",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-ldap-method-S-bind_method-type",
                      "doc" : "Authentication method type.",
                      "text" : "type",
                      "type" : "Enum(bind)",
                      "default" : "bind"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-method-S-bind_method-is_superuser_attribute",
                      "doc" : "Indicates which attribute is used to represent whether the user is a superuser.",
                      "text" : "is_superuser_attribute",
                      "type" : "String",
                      "default" : "isSuperuser"
                    },
                    {
                      "hash" : "V-authentication-S-ldap-method-S-bind_method-bind_password",
                      "doc" : "The template for password to bind.",
                      "text" : "bind_password",
                      "type" : "String",
                      "default" : "\"${password}\""
                    }
                  ],
                  "doc" : "Authenticate by the LDAP bind operation.",
                  "text" : "bind_method"
                }
              ],
              "hash" : "V-authentication-S-ldap-method",
              "doc" : "Authentication method.",
              "text" : "method",
              "type" : "OneOf(Struct(hash_method),Struct(bind_method))"
            }
          ],
          "doc" : "Configuration of authenticator using LDAP as authentication data source.",
          "text" : "ldap"
        },
        {
          "hash" : "T-authentication-S-gcp_device",
          "fields" : [
            {
              "hash" : "V-authentication-S-gcp_device-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"gcp_device\")"
            },
            {
              "hash" : "V-authentication-S-gcp_device-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "doc" : "Configuration of authenticator using GCP Device as authentication data source.",
          "text" : "gcp_device"
        },
        {
          "hash" : "T-authentication-S-scram_restapi_get",
          "fields" : [
            {
              "hash" : "V-authentication-S-scram_restapi_get-method",
              "doc" : "HTTP request method.",
              "text" : "method",
              "type" : "String(\"get\")"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-headers",
              "doc" : "List of HTTP headers (without <code>content-type</code>).",
              "text" : "headers",
              "type" : "Map",
              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", keep-alive = \"timeout=30, max=1000\"}"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"scram\")"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"http\")"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-algorithm",
              "doc" : "Hashing algorithm.",
              "text" : "algorithm",
              "type" : "Enum(sha256,sha512)",
              "default" : "sha256"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-iteration_count",
              "doc" : "Iteration count.",
              "text" : "iteration_count",
              "type" : "Integer(0..+inf)",
              "default" : "4096"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-url",
              "doc" : "URL of the HTTP server.",
              "text" : "url",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-body",
              "doc" : "HTTP request body.",
              "text" : "body",
              "type" : "Map"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-request_timeout",
              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-connect_timeout",
              "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-max_retries",
              "doc" : "Deprecated since 5.0.4.",
              "text" : "max_retries",
              "type" : "Integer(0..+inf)"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-retry_interval",
              "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "retry_interval",
              "type" : "Duration"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-pool_size",
              "doc" : "The pool size.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-enable_pipelining",
              "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
              "text" : "enable_pipelining",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_get-max_inactive",
              "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "max_inactive",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-scram_restapi_get-request-S-request",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-request-S-request-method",
                      "doc" : "HTTP method.",
                      "text" : "method",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-request-S-request-path",
                      "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "text" : "path",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-request-S-request-body",
                      "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "text" : "body",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-request-S-request-headers",
                      "doc" : "List of HTTP headers.",
                      "text" : "headers",
                      "type" : "Map"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-request-S-request-max_retries",
                      "doc" : "Max retry times if error on sending request.",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-request-S-request-request_timeout",
                      "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    }
                  ],
                  "doc" : "",
                  "text" : "request"
                }
              ],
              "hash" : "V-authentication-S-scram_restapi_get-request",
              "doc" : "Configure HTTP request parameters.",
              "text" : "request",
              "type" : "Struct(request)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_get-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-scram_restapi_get-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using HTTP Server as authentication service (Using GET request).",
          "text" : "scram_restapi_get"
        },
        {
          "hash" : "T-authentication-S-scram_restapi_post",
          "fields" : [
            {
              "hash" : "V-authentication-S-scram_restapi_post-method",
              "doc" : "HTTP request method.",
              "text" : "method",
              "type" : "String(\"post\")"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-headers",
              "doc" : "List of HTTP Headers.",
              "text" : "headers",
              "type" : "Map",
              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=30, max=1000\"}"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"scram\")"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"http\")"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-algorithm",
              "doc" : "Hashing algorithm.",
              "text" : "algorithm",
              "type" : "Enum(sha256,sha512)",
              "default" : "sha256"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-iteration_count",
              "doc" : "Iteration count.",
              "text" : "iteration_count",
              "type" : "Integer(0..+inf)",
              "default" : "4096"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-url",
              "doc" : "URL of the HTTP server.",
              "text" : "url",
              "type" : "String"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-body",
              "doc" : "HTTP request body.",
              "text" : "body",
              "type" : "Map"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-request_timeout",
              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "request_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-connect_timeout",
              "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-max_retries",
              "doc" : "Deprecated since 5.0.4.",
              "text" : "max_retries",
              "type" : "Integer(0..+inf)"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-retry_interval",
              "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "retry_interval",
              "type" : "Duration"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-pool_size",
              "doc" : "The pool size.",
              "text" : "pool_size",
              "type" : "Integer(1..+inf)",
              "default" : "8"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-enable_pipelining",
              "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
              "text" : "enable_pipelining",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            },
            {
              "hash" : "V-authentication-S-scram_restapi_post-max_inactive",
              "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "max_inactive",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-scram_restapi_post-request-S-request",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-request-S-request-method",
                      "doc" : "HTTP method.",
                      "text" : "method",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-request-S-request-path",
                      "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "text" : "path",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-request-S-request-body",
                      "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                      "text" : "body",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-request-S-request-headers",
                      "doc" : "List of HTTP headers.",
                      "text" : "headers",
                      "type" : "Map"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-request-S-request-max_retries",
                      "doc" : "Max retry times if error on sending request.",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-request-S-request-request_timeout",
                      "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    }
                  ],
                  "doc" : "",
                  "text" : "request"
                }
              ],
              "hash" : "V-authentication-S-scram_restapi_post-request",
              "doc" : "Configure HTTP request parameters.",
              "text" : "request",
              "type" : "Struct(request)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-cacertfile",
                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                      "text" : "cacertfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-cacerts",
                      "doc" : "Deprecated since 5.1.4.",
                      "text" : "cacerts",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-certfile",
                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                      "text" : "certfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-keyfile",
                      "doc" : "PEM format private key file.",
                      "text" : "keyfile",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-verify",
                      "doc" : "Enable or disable peer verification.",
                      "text" : "verify",
                      "type" : "Enum(verify_peer,verify_none)",
                      "default" : "verify_none"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-reuse_sessions",
                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                      "text" : "reuse_sessions",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-depth",
                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                      "text" : "depth",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-password",
                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-versions",
                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                      "text" : "versions",
                      "type" : "Array(String)",
                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-ciphers",
                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                      "text" : "ciphers",
                      "type" : "Array(String)",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-secure_renegotiate",
                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                      "text" : "secure_renegotiate",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-log_level",
                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                      "text" : "log_level",
                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                      "default" : "notice"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-hibernate_after",
                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "hibernate_after",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-partial_chain",
                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                      "text" : "partial_chain",
                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                      "text" : "verify_peer_ext_key_usage",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-enable",
                      "doc" : "Enable TLS.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-middlebox_comp_mode",
                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                      "text" : "middlebox_comp_mode",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-authentication-S-scram_restapi_post-ssl-S-ssl_client_opts-server_name_indication",
                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                      "text" : "server_name_indication",
                      "type" : "OneOf(String(\"disable\"),String)"
                    }
                  ],
                  "doc" : "Socket options for SSL clients.",
                  "text" : "ssl_client_opts"
                }
              ],
              "hash" : "V-authentication-S-scram_restapi_post-ssl",
              "doc" : "SSL connection settings.",
              "text" : "ssl",
              "type" : "Struct(ssl_client_opts)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Configuration of authenticator using HTTP Server as authentication service (Using POST request).",
          "text" : "scram_restapi_post"
        },
        {
          "hash" : "T-authentication-S-kerberos",
          "fields" : [
            {
              "hash" : "V-authentication-S-kerberos-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            },
            {
              "hash" : "V-authentication-S-kerberos-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"gssapi\")"
            },
            {
              "hash" : "V-authentication-S-kerberos-backend",
              "doc" : "Backend type.",
              "text" : "backend",
              "type" : "String(\"kerberos\")"
            },
            {
              "hash" : "V-authentication-S-kerberos-principal",
              "doc" : "Server Kerberos principal.\nFor example <code>mqtt/emqx-cluster-1.example.com@MY_REALM.EXAMPLE.COM</code>.\nNOTE: The realm in use has to be configured in /etc/krb5.conf in EMQX nodes.",
              "text" : "principal",
              "type" : "String"
            }
          ],
          "doc" : "Settings for Kerberos authentication.",
          "text" : "kerberos"
        },
        {
          "hash" : "T-authentication-S-cinfo",
          "fields" : [
            {
              "hash" : "V-authentication-S-cinfo-mechanism",
              "doc" : "Authentication mechanism.",
              "text" : "mechanism",
              "type" : "String(\"cinfo\")"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authentication-S-cinfo-checks-S-cinfo_check",
                  "fields" : [
                    {
                      "hash" : "V-authentication-S-cinfo-checks-S-cinfo_check-is_match",
                      "doc" : "One Variform expression or an array of expressions to evaluate with a set of pre-bound variables derived from the client information.\nSupported variables:\n- `username`: the username of the client.\n- `password`: the password of the client.\n- `clientid`: the client ID of the client.\n- `client_attrs.*`: the client attributes of the client.\n- `peerhost`: the IP address of the client.\n- `cert_subject`: the subject of the TLS certificate.\n- `cert_common_name`: the issuer of the TLS certificate.\n- `zone`: the config zone associated with the listener from which the client is accepted.\n\nIf the expression(s) all yields the string value `'true'`, then the associated `result` is returned from this authenticator.\nIf any expression yields a value other than `'true'`, then the current check is skipped.\nFor example, to ensure client ID is always the same as TLS certificate CN, the expression can be `str_eq(clientid, cert_common_name)`.",
                      "text" : "is_match",
                      "type" : "OneOf(String,Array(String))"
                    },
                    {
                      "hash" : "V-authentication-S-cinfo-checks-S-cinfo_check-result",
                      "doc" : "The result to return if the match condition is `true`.\nSupported results:\n- `ignore`: defer the authentication to the next authenticator in the chain.\n- `allow`: allow the client to connect.\n- `deny`: deny the client to connect.",
                      "text" : "result",
                      "type" : "Enum(allow,deny,ignore)"
                    }
                  ],
                  "doc" : "A check to perform on the client information.\nIt defines a match-condition and a result to return if the condition is `true`.\nIf all checks are skipped, the default result `ignore` is returned.",
                  "text" : "cinfo_check"
                }
              ],
              "hash" : "V-authentication-S-cinfo-checks",
              "doc" : "A list of checks to perform on the client information.\nIf all checks are skipped, the default result `ignore` is returned.\nThe `ignore` result means to defer the authentication to the next authenticator in the chain.",
              "text" : "checks",
              "type" : "Array(Struct(cinfo_check))"
            },
            {
              "hash" : "V-authentication-S-cinfo-precondition",
              "doc" : "A Variform expression to evaluate with a set of pre-bound variables derived from the client information.\n\nSupported variables:\n- `username`: The username of the client\n- `password`: The password of the client\n- `clientid`: The client ID of the client\n- `client_attrs.*`: The client attributes of the client\n- `cert_common_name`: The subject field from the client's TLS certificate\n- `cert_subject`: The common name (CN) from the client's TLS certificate\n- `peersni`: The SNI (Server Name Indication) sent by TLS client\n- `listener`: The listener ID (e.g. `tcp:default`)\n- `zone`: The associated config zone.\n\nThe expression must evaluate to a string value of 'true' for this authenticator to be invoked.\nIf the expression evaluates to any other value, this authenticator will be skipped.\n\nExamples:\n- Only invoke if the client is connected from listener `ssl:letsencryt`:\n  `str_eq(listener, 'ssl:letsencryt')`\n- Skip if username is empty:\n  `not(is_empty_val(username))`\n- Only invoke if password exists and zone is 'zone1':\n  `iif(is_empty_val(password), false, str_eq(zone, 'zone1'))`\n\nFind more information about Variform expressions in EMQX doc.",
              "text" : "precondition",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "doc" : "Authenticate clients based on the client information such as username, client ID,\nclient attributes, and data extracted from TLS certificate.",
          "text" : "cinfo"
        }
      ],
      "hash" : "V-authentication",
      "doc" : "Default authentication configs for all MQTT listeners.\n\nFor per-listener overrides see <code>authentication</code> in listener configs\n\nThis option can be configured with:\n<ul>\n  <li><code>[]</code>: The default value, it allows *ALL* logins</li>\n  <li>one: For example <code>{enable:true,backend:\"built_in_database\",mechanism=\"password_based\"}</code></li>\n  <li>chain: An array of structs.</li>\n</ul>\n\nWhen a chain is configured, the login credentials are checked against the backends per the configured order, until an 'allow' or 'deny' decision can be made.\n\nIf there is no decision after a full chain exhaustion, the login is rejected.",
      "text" : "authentication",
      "type" : "Array(OneOf(Struct(builtin_db),Struct(mysql),Struct(postgresql),Struct(mongo_single),Struct(mongo_rs),Struct(mongo_sharded),Struct(redis_single),Struct(redis_cluster),Struct(redis_sentinel),Struct(http_get),Struct(http_post),Struct(jwt_hmac),Struct(jwt_public_key),Struct(jwt_jwks),Struct(scram),Struct(ldap),Struct(gcp_device),Struct(scram_restapi_get),Struct(scram_restapi_post),Struct(kerberos),Struct(cinfo)))",
      "default" : "[]"
    },
    {
      "refs" : [
        {
          "hash" : "T-authentication_settings-S-settings",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-authentication_settings-S-settings-node_cache-S-config",
                  "fields" : [
                    {
                      "hash" : "V-authentication_settings-S-settings-node_cache-S-config-enable",
                      "doc" : "Enable or disable the cache.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authentication_settings-S-settings-node_cache-S-config-cache_ttl",
                      "doc" : "Time after which the cached authentication/authorization result will expire.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "cache_ttl",
                      "type" : "Duration",
                      "default" : "\"1m\""
                    },
                    {
                      "hash" : "V-authentication_settings-S-settings-node_cache-S-config-max_count",
                      "doc" : "Maximum number of cached results.",
                      "text" : "max_count",
                      "type" : "OneOf(String(\"unlimited\"),Integer(0..+inf))",
                      "default" : "1000000"
                    },
                    {
                      "hash" : "V-authentication_settings-S-settings-node_cache-S-config-max_memory",
                      "doc" : "Maximum memory usage of the cache.",
                      "text" : "max_memory",
                      "type" : "OneOf(String(\"unlimited\"),Bytesize)",
                      "default" : "\"100MB\""
                    }
                  ],
                  "doc" : "Configuration of authentication/authorization cache.",
                  "text" : "config"
                }
              ],
              "hash" : "V-authentication_settings-S-settings-node_cache",
              "text" : "node_cache",
              "type" : "Struct(config)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Global settings for authentication",
          "text" : "settings"
        }
      ],
      "hash" : "V-authentication_settings",
      "doc" : "Authentication global settings.",
      "text" : "authentication_settings",
      "type" : "Struct(settings)"
    },
    {
      "refs" : [
        {
          "hash" : "T-authorization-S-authorization",
          "fields" : [
            {
              "hash" : "V-authorization-S-authorization-no_match",
              "doc" : "Default access control action if the user or client matches no ACL rules,\nor if no such user or client is found by the configurable authorization\nsources such as built_in_database, an HTTP API, or a query against PostgreSQL.\nFind more details in 'authorization.sources' config.",
              "text" : "no_match",
              "type" : "Enum(allow,deny)",
              "default" : "allow"
            },
            {
              "hash" : "V-authorization-S-authorization-deny_action",
              "doc" : "The action when the authorization check rejects an operation.",
              "text" : "deny_action",
              "type" : "Enum(ignore,disconnect)",
              "default" : "ignore"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authorization-S-authorization-cache-S-authz_cache",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-max_size",
                      "doc" : "Maximum number of cached items.",
                      "text" : "max_size",
                      "type" : "Integer(1..1048576)",
                      "default" : "32"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-ttl",
                      "doc" : "Time to live for the cached data.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "ttl",
                      "type" : "Duration",
                      "default" : "\"1m\""
                    },
                    {
                      "hash" : "V-authorization-S-authorization-cache-S-authz_cache-excludes",
                      "doc" : "Exclude caching ACL check results for topics matching the given patterns.",
                      "text" : "excludes",
                      "type" : "Array(String)",
                      "default" : "[]"
                    }
                  ],
                  "doc" : "Settings for the authorization cache.",
                  "text" : "authz_cache"
                }
              ],
              "hash" : "V-authorization-S-authorization-cache",
              "text" : "cache",
              "type" : "Struct(authz_cache)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authorization-S-authorization-sources-S-file",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-file-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"file\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-file-path",
                      "doc" : "Path to the file which contains the ACL rules.\nIf the file provisioned before starting EMQX node,\nit can be placed anywhere as long as EMQX has read access to it.\nThat is, EMQX will treat it as read only.\n\nIn case the rule-set is created or updated from EMQX Dashboard or HTTP API,\na new file will be created and placed in `authz` subdirectory inside EMQX's `data_dir`,\nand the old file will not be used anymore.",
                      "text" : "path",
                      "type" : "String"
                    }
                  ],
                  "doc" : "Authorization using a static file.",
                  "text" : "file"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-builtin_db",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-builtin_db-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"built_in_database\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-builtin_db-max_rules",
                      "doc" : "Maximum number of rules per client/user. Note that performance may decrease as number of rules increases.",
                      "text" : "max_rules",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    }
                  ],
                  "doc" : "Authorization using a built-in database (mnesia).",
                  "text" : "builtin_db"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-http_get",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"http\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-url",
                      "doc" : "URL of the auth server.",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-request_timeout",
                      "doc" : "HTTP request timeout.",
                      "text" : "request_timeout",
                      "type" : "String",
                      "default" : "\"30s\""
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-body",
                      "doc" : "HTTP request body.",
                      "text" : "body",
                      "type" : "Map($name->String)"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-connect_timeout",
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-max_retries",
                      "doc" : "Deprecated since 5.0.4.",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-retry_interval",
                      "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "retry_interval",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-enable_pipelining",
                      "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-http_get-request-S-request",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-method",
                              "doc" : "HTTP method.",
                              "text" : "method",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-path",
                              "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "path",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-body",
                              "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "body",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-headers",
                              "doc" : "List of HTTP headers.",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-max_retries",
                              "doc" : "Max retry times if error on sending request.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-request-S-request-request_timeout",
                              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "doc" : "",
                          "text" : "request"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-request",
                      "doc" : "Configure HTTP request parameters.",
                      "text" : "request",
                      "type" : "Struct(request)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-method",
                      "doc" : "HTTP method.",
                      "text" : "method",
                      "type" : "String(\"get\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_get-headers",
                      "doc" : "List of HTTP headers (without <code>content-type</code>).",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", keep-alive = \"timeout=30, max=1000\"}"
                    }
                  ],
                  "doc" : "Authorization using an external HTTP server (via GET requests).",
                  "text" : "http_get"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-http_post",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"http\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-url",
                      "doc" : "URL of the auth server.",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-request_timeout",
                      "doc" : "HTTP request timeout.",
                      "text" : "request_timeout",
                      "type" : "String",
                      "default" : "\"30s\""
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-body",
                      "doc" : "HTTP request body.",
                      "text" : "body",
                      "type" : "Map($name->String)"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-connect_timeout",
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-max_retries",
                      "doc" : "Deprecated since 5.0.4.",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-retry_interval",
                      "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "retry_interval",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-enable_pipelining",
                      "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-http_post-request-S-request",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-method",
                              "doc" : "HTTP method.",
                              "text" : "method",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-path",
                              "doc" : "URL path.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "path",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-body",
                              "doc" : "HTTP request body.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "body",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-headers",
                              "doc" : "List of HTTP headers.",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-max_retries",
                              "doc" : "Max retry times if error on sending request.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-request-S-request-request_timeout",
                              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "doc" : "",
                          "text" : "request"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-request",
                      "doc" : "Configure HTTP request parameters.",
                      "text" : "request",
                      "type" : "Struct(request)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-method",
                      "doc" : "HTTP method.",
                      "text" : "method",
                      "type" : "String(\"post\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-http_post-headers",
                      "doc" : "List of HTTP Headers.",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=30, max=1000\"}"
                    }
                  ],
                  "doc" : "Authorization using an external HTTP server (via POST requests).",
                  "text" : "http_post"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-redis_single",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"redis\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-redis_type",
                      "doc" : "Single mode. Must be set to 'single' when Redis server is running in single mode.",
                      "text" : "redis_type",
                      "type" : "String(\"single\")",
                      "default" : "single"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-database",
                      "doc" : "Redis database ID.",
                      "text" : "database",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_single-cmd",
                      "doc" : "Database query used to retrieve authorization data.",
                      "text" : "cmd",
                      "type" : "String"
                    }
                  ],
                  "doc" : "Authorization using a single Redis instance.",
                  "text" : "redis_single"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-redis_sentinel",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"redis\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-servers",
                      "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-redis_type",
                      "doc" : "Sentinel mode. Must be set to 'sentinel' when Redis server is running in sentinel mode.",
                      "text" : "redis_type",
                      "type" : "String(\"sentinel\")",
                      "default" : "sentinel"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-sentinel",
                      "doc" : "The cluster name in Redis sentinel mode.",
                      "text" : "sentinel",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-database",
                      "doc" : "Redis database ID.",
                      "text" : "database",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_sentinel-cmd",
                      "doc" : "Database query used to retrieve authorization data.",
                      "text" : "cmd",
                      "type" : "String"
                    }
                  ],
                  "doc" : "Authorization using a Redis Sentinel.",
                  "text" : "redis_sentinel"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-redis_cluster",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"redis\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-servers",
                      "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-redis_type",
                      "doc" : "Cluster mode. Must be set to 'cluster' when Redis server is running in clustered mode.",
                      "text" : "redis_type",
                      "type" : "String(\"cluster\")",
                      "default" : "cluster"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-redis_cluster-cmd",
                      "doc" : "Database query used to retrieve authorization data.",
                      "text" : "cmd",
                      "type" : "String"
                    }
                  ],
                  "doc" : "Authorization using a Redis cluster.",
                  "text" : "redis_cluster"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-mysql",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"mysql\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MySQL default port 3306 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String",
                      "default" : "root"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-prepare_statement",
                      "doc" : "Key-value list of SQL prepared statements.",
                      "text" : "prepare_statement",
                      "type" : "Map"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mysql-query",
                      "doc" : "Database query used to retrieve authorization data.",
                      "text" : "query",
                      "type" : "String"
                    }
                  ],
                  "doc" : "Authorization using a MySQL database.",
                  "text" : "mysql"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-postgresql",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"postgresql\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe PostgreSQL default port 5432 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-disable_prepared_statements",
                      "doc" : "Disables the usage of prepared statements in the connections.\nSome endpoints, like PGBouncer or Supabase in Transaction mode, do not\nsupport session features such as prepared statements.  For such connections,\nthis option should be enabled.",
                      "text" : "disable_prepared_statements",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-prepare_statement",
                      "doc" : "Key-value list of SQL prepared statements.",
                      "text" : "prepare_statement",
                      "type" : "Map"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-postgresql-query",
                      "doc" : "Database query used to retrieve authorization data.",
                      "text" : "query",
                      "type" : "String"
                    }
                  ],
                  "doc" : "Authorization using a PostgreSQL database.",
                  "text" : "postgresql"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-mongo_single",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"mongodb\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-collection",
                      "doc" : "`MongoDB` collection containing the authorization data.",
                      "text" : "collection",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-filter",
                      "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders<br/>\n - <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting<br/>\n - <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
                      "text" : "filter",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-limit",
                      "doc" : "Limit the number of records to fetch.",
                      "text" : "limit",
                      "type" : "Integer(1..+inf)",
                      "default" : "1000"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-skip",
                      "doc" : "Number of authorization records to skip.",
                      "text" : "skip",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-mongo_type",
                      "doc" : "Standalone instance. Must be set to 'single' when MongoDB server is running in standalone mode.",
                      "text" : "mongo_type",
                      "type" : "String(\"single\")",
                      "default" : "single"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-w_mode",
                      "doc" : "Write mode.",
                      "text" : "w_mode",
                      "type" : "Enum(unsafe,safe)",
                      "default" : "unsafe"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-srv_record",
                      "doc" : "Use DNS SRV record.",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-use_legacy_protocol",
                      "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-auth_source",
                      "doc" : "Database name associated with the user's credentials.",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_single-topology-S-topology",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-max_overflow",
                              "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-overflow_ttl",
                              "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-overflow_check_period",
                              "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-local_threshold_ms",
                              "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-connect_timeout_ms",
                              "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-socket_timeout_ms",
                              "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-server_selection_timeout_ms",
                              "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-wait_queue_timeout_ms",
                              "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-heartbeat_frequency_ms",
                              "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology-S-topology-min_heartbeat_frequency_ms",
                              "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "doc" : "Topology of MongoDB.",
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_single-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "doc" : "Authorization using a single MongoDB instance.",
                  "text" : "mongo_single"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-mongo_rs",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"mongodb\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-collection",
                      "doc" : "`MongoDB` collection containing the authorization data.",
                      "text" : "collection",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-filter",
                      "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders<br/>\n - <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting<br/>\n - <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
                      "text" : "filter",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-limit",
                      "doc" : "Limit the number of records to fetch.",
                      "text" : "limit",
                      "type" : "Integer(1..+inf)",
                      "default" : "1000"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-skip",
                      "doc" : "Number of authorization records to skip.",
                      "text" : "skip",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-mongo_type",
                      "doc" : "Replica set. Must be set to 'rs' when MongoDB server is running in 'replica set' mode.",
                      "text" : "mongo_type",
                      "type" : "String(\"rs\")",
                      "default" : "rs"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-servers",
                      "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-w_mode",
                      "doc" : "Write mode.",
                      "text" : "w_mode",
                      "type" : "Enum(unsafe,safe)",
                      "default" : "unsafe"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-r_mode",
                      "doc" : "Read mode.",
                      "text" : "r_mode",
                      "type" : "Enum(master,slave_ok)",
                      "default" : "master"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-replica_set_name",
                      "doc" : "Name of the replica set.",
                      "text" : "replica_set_name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-srv_record",
                      "doc" : "Use DNS SRV record.",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-use_legacy_protocol",
                      "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-auth_source",
                      "doc" : "Database name associated with the user's credentials.",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-max_overflow",
                              "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-overflow_ttl",
                              "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-overflow_check_period",
                              "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-local_threshold_ms",
                              "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-connect_timeout_ms",
                              "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-socket_timeout_ms",
                              "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-server_selection_timeout_ms",
                              "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-wait_queue_timeout_ms",
                              "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-heartbeat_frequency_ms",
                              "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology-S-topology-min_heartbeat_frequency_ms",
                              "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "doc" : "Topology of MongoDB.",
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_rs-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "doc" : "Authorization using a MongoDB replica set.",
                  "text" : "mongo_rs"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-mongo_sharded",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"mongodb\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-collection",
                      "doc" : "`MongoDB` collection containing the authorization data.",
                      "text" : "collection",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-filter",
                      "doc" : "Conditional expression that defines the filter condition in the query.\nFilter supports the following placeholders<br/>\n - <code>${username}</code>: Will be replaced at runtime with <code>Username</code> used by the client when connecting<br/>\n - <code>${clientid}</code>: Will be replaced at runtime with <code>Client ID</code> used by the client when connecting",
                      "text" : "filter",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-limit",
                      "doc" : "Limit the number of records to fetch.",
                      "text" : "limit",
                      "type" : "Integer(1..+inf)",
                      "default" : "1000"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-skip",
                      "doc" : "Number of authorization records to skip.",
                      "text" : "skip",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-mongo_type",
                      "doc" : "Sharded cluster. Must be set to 'sharded' when MongoDB server is running in 'sharded' mode.",
                      "text" : "mongo_type",
                      "type" : "String(\"sharded\")",
                      "default" : "sharded"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-servers",
                      "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-w_mode",
                      "doc" : "Write mode.",
                      "text" : "w_mode",
                      "type" : "Enum(unsafe,safe)",
                      "default" : "unsafe"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-srv_record",
                      "doc" : "Use DNS SRV record.",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-use_legacy_protocol",
                      "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-auth_source",
                      "doc" : "Database name associated with the user's credentials.",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-max_overflow",
                              "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-overflow_ttl",
                              "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-overflow_check_period",
                              "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-local_threshold_ms",
                              "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-connect_timeout_ms",
                              "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-socket_timeout_ms",
                              "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-server_selection_timeout_ms",
                              "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-wait_queue_timeout_ms",
                              "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-heartbeat_frequency_ms",
                              "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology-S-topology-min_heartbeat_frequency_ms",
                              "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "doc" : "Topology of MongoDB.",
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-mongo_sharded-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "doc" : "Authorization using a sharded MongoDB cluster.",
                  "text" : "mongo_sharded"
                },
                {
                  "hash" : "T-authorization-S-authorization-sources-S-ldap",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"ldap\")"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-publish_attribute",
                      "doc" : "Indicates which attribute is used to represent the allowed topics list of the `publish`.",
                      "text" : "publish_attribute",
                      "type" : "String",
                      "default" : "mqttPublishTopic"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-subscribe_attribute",
                      "doc" : "Indicates which attribute is used to represent the allowed topics list of the `subscribe`.",
                      "text" : "subscribe_attribute",
                      "type" : "String",
                      "default" : "mqttSubscriptionTopic"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-all_attribute",
                      "doc" : "Indicates which attribute is used to represent the both allowed topics list of  `publish` and `subscribe`.",
                      "text" : "all_attribute",
                      "type" : "String",
                      "default" : "mqttPubSubTopic"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-query_timeout",
                      "doc" : "Timeout for the LDAP query.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "query_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-base_dn",
                      "doc" : "The name of the base object entry (or possibly the root) relative to\nwhich the Search is to be performed.",
                      "text" : "base_dn",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-filter",
                      "doc" : "The filter that defines the conditions that must be fulfilled in order\nfor the Search to match a given entry.<br>\nThe syntax of the filter follows RFC 4515 and also supports placeholders.",
                      "text" : "filter",
                      "type" : "String",
                      "default" : "\"(objectClass=mqttUser)\""
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe LDAP default port 389 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-request_timeout",
                      "doc" : "Sets the maximum time in milliseconds that is used for each individual request.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "request_timeout",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-authorization-S-authorization-sources-S-ldap-ssl-S-ssl",
                          "fields" : [
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl-S-ssl-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "SSL connection settings.",
                          "text" : "ssl"
                        }
                      ],
                      "hash" : "V-authorization-S-authorization-sources-S-ldap-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "doc" : "LDAP Authorization settings",
                  "text" : "ldap"
                }
              ],
              "hash" : "V-authorization-S-authorization-sources",
              "doc" : "Authorization data sources.<br/>\nAn array of authorization (ACL) data providers.\nIt is designed as an array, not a hash-map, so the sources can be\nordered to form a chain of access controls.<br/>\n\nWhen authorizing a 'publish' or 'subscribe' action, the configured\nsources are checked in order. When checking an ACL source,\nin case the client (identified by username or client ID) is not found,\nit moves on to the next source. And it stops immediately\nonce an 'allow' or 'deny' decision is returned.<br/>\n\nIf the client is not found in any of the sources,\nthe default action configured in 'authorization.no_match' is applied.<br/>\n\nNOTE:\nThe source elements are identified by their 'type'.\nIt is NOT allowed to configure two or more sources of the same type.",
              "text" : "sources",
              "type" : "Array(OneOf(Struct(file),Struct(builtin_db),Struct(http_get),Struct(http_post),Struct(redis_single),Struct(redis_sentinel),Struct(redis_cluster),Struct(mysql),Struct(postgresql),Struct(mongo_single),Struct(mongo_rs),Struct(mongo_sharded),Struct(ldap)))",
              "default" : "[{enable = true, path = \"${EMQX_ETC_DIR}/acl.conf\", type = file}]"
            },
            {
              "refs" : [
                {
                  "hash" : "T-authorization-S-authorization-node_cache-S-config",
                  "fields" : [
                    {
                      "hash" : "V-authorization-S-authorization-node_cache-S-config-enable",
                      "doc" : "Enable or disable the cache.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-node_cache-S-config-cache_ttl",
                      "doc" : "Time after which the cached authentication/authorization result will expire.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "cache_ttl",
                      "type" : "Duration",
                      "default" : "\"1m\""
                    },
                    {
                      "hash" : "V-authorization-S-authorization-node_cache-S-config-max_count",
                      "doc" : "Maximum number of cached results.",
                      "text" : "max_count",
                      "type" : "OneOf(String(\"unlimited\"),Integer(0..+inf))",
                      "default" : "1000000"
                    },
                    {
                      "hash" : "V-authorization-S-authorization-node_cache-S-config-max_memory",
                      "doc" : "Maximum memory usage of the cache.",
                      "text" : "max_memory",
                      "type" : "OneOf(String(\"unlimited\"),Bytesize)",
                      "default" : "\"100MB\""
                    }
                  ],
                  "doc" : "Configuration of authentication/authorization cache.",
                  "text" : "config"
                }
              ],
              "hash" : "V-authorization-S-authorization-node_cache",
              "text" : "node_cache",
              "type" : "Struct(config)",
              "default" : "{enable = false}"
            }
          ],
          "doc" : "Settings that control client authorization.",
          "text" : "authorization"
        }
      ],
      "hash" : "V-authorization",
      "doc" : "Authorization a.k.a. ACL.<br/>\nIn EMQX, MQTT client access control is extremely flexible.<br/>\nAn out-of-the-box set of authorization data sources are supported.\nFor example,<br/>\n'file' source is to support concise and yet generic ACL rules in a file;<br/>\n'built_in_database' source can be used to store per-client customizable rule sets,\nnatively in the EMQX node;<br/>\n'http' source to make EMQX call an external HTTP API to make the decision;<br/>\n'PostgreSQL' etc. to look up clients or rules from external databases",
      "text" : "authorization",
      "type" : "Struct(authorization)"
    },
    {
      "refs" : [
        {
          "hash" : "T-node-S-node",
          "fields" : [
            {
              "hash" : "V-node-S-node-name",
              "doc" : "Unique name of the EMQX node. It must follow <code>%name%@FQDN</code> or\n<code>%name%@IPv4</code> format.",
              "text" : "name",
              "type" : "String",
              "default" : "\"emqx@127.0.0.1\""
            },
            {
              "hash" : "V-node-S-node-cookie",
              "doc" : "Secret cookie is a random string that should be the same on all nodes in\nthe given EMQX cluster, but unique per EMQX cluster. It is used to prevent EMQX nodes that\nbelong to different clusters from accidentally connecting to each other.",
              "text" : "cookie",
              "type" : "String"
            },
            {
              "hash" : "V-node-S-node-max_ports",
              "doc" : "Maximum number of simultaneously open files and sockets for this Erlang system.\nFor more information, see: https://www.erlang.org/doc/man/erl.html",
              "text" : "max_ports",
              "type" : "Integer(1024..134217727)",
              "default" : "1048576"
            },
            {
              "hash" : "V-node-S-node-dist_buffer_size",
              "doc" : "Erlang's distribution buffer busy limit in kilobytes.",
              "text" : "dist_buffer_size",
              "type" : "Integer(1..2097151)",
              "default" : "8192"
            },
            {
              "hash" : "V-node-S-node-data_dir",
              "doc" : "Path to the persistent data directory.<br/>\nPossible auto-created subdirectories are:<br/>\n- `mnesia/<node_name>`: EMQX's built-in database directory.<br/>\nFor example, `mnesia/emqx@127.0.0.1`.<br/>\nThere should be only one such subdirectory.<br/>\nMeaning, in case the node is to be renamed (to e.g. `emqx@10.0.1.1`),<br/>\nthe old dir should be deleted first.<br/>\n- `configs`: Generated configs at boot time, and cluster/local override configs.<br/>\n- `patches`: Hot-patch beam files are to be placed here.<br/>\n- `trace`: Trace log files.<br/>\n\n**NOTE**: One data dir cannot be shared by two or more EMQX nodes.",
              "text" : "data_dir",
              "type" : "String"
            },
            {
              "hash" : "V-node-S-node-global_gc_interval",
              "doc" : "Periodic garbage collection interval. Set to <code>disabled</code> to have it disabled.",
              "text" : "global_gc_interval",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "\"15m\""
            },
            {
              "hash" : "V-node-S-node-role",
              "aliases" : [
                "db_role"
              ],
              "doc" : "Select a node role.<br/>\n<code>core</code> nodes provide durability of the data, and take care of writes.\nIt is recommended to place core nodes in different racks or different availability zones.<br/>\n<code>replicant</code> nodes are ephemeral worker nodes. Removing them from the cluster\ndoesn't affect database redundancy<br/>\nIt is recommended to have more replicant nodes than core nodes.<br/>\nNote: this parameter only takes effect when the <code>backend</code> is set\nto <code>rlog</code>.",
              "text" : "role",
              "type" : "Enum(core,replicant)",
              "default" : "core"
            }
          ],
          "doc" : "Node name, cookie, config & data directories and the Erlang virtual machine (BEAM) boot parameters.",
          "text" : "node"
        }
      ],
      "hash" : "V-node",
      "text" : "node",
      "type" : "Struct(node)"
    },
    {
      "refs" : [
        {
          "hash" : "T-cluster-S-cluster",
          "fields" : [
            {
              "hash" : "V-cluster-S-cluster-name",
              "doc" : "Human-friendly name of the EMQX cluster.",
              "text" : "name",
              "type" : "String",
              "default" : "emqxcl"
            },
            {
              "hash" : "V-cluster-S-cluster-discovery_strategy",
              "doc" : "Service discovery method for the cluster nodes. Possible values are:\n- manual: Use <code>emqx ctl cluster</code> command to manage cluster.<br/>\n- static: Configure static nodes list by setting <code>seeds</code> in config file.<br/>\n- dns: Use DNS A record to discover peer nodes.<br/>\n- etcd: Use etcd to discover peer nodes.<br/>\n- k8s: Use Kubernetes API to discover peer pods.",
              "text" : "discovery_strategy",
              "type" : "Enum(manual,static,singleton,dns,etcd,k8s)",
              "default" : "manual"
            },
            {
              "hash" : "V-cluster-S-cluster-autoclean",
              "doc" : "Remove disconnected nodes from the cluster after this interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "autoclean",
              "type" : "Duration",
              "default" : "\"24h\""
            },
            {
              "hash" : "V-cluster-S-cluster-autoheal",
              "doc" : "If <code>true</code>, the node will try to heal network partitions automatically.",
              "text" : "autoheal",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-cluster-S-cluster-proto_dist",
              "doc" : "The Erlang distribution protocol for the cluster.<br/>\n- inet_tcp: IPv4 TCP <br/>\n- inet_tls: IPv4 TLS, works together with <code>etc/ssl_dist.conf</code> <br/>\n- inet6_tcp: IPv6 TCP <br/>\n- inet6_tls: IPv6 TLS, works together with <code>etc/ssl_dist.conf</code>",
              "text" : "proto_dist",
              "type" : "Enum(inet_tcp,inet6_tcp,inet_tls,inet6_tls)",
              "default" : "inet_tcp"
            },
            {
              "refs" : [
                {
                  "hash" : "T-cluster-S-cluster-static-S-cluster_static",
                  "fields" : [
                    {
                      "hash" : "V-cluster-S-cluster-static-S-cluster_static-seeds",
                      "doc" : "List EMQX node names in the static cluster. See <code>node.name</code>.",
                      "text" : "seeds",
                      "type" : "OneOf(String,Array(String))",
                      "default" : "[]"
                    }
                  ],
                  "doc" : "Service discovery via static nodes.\nThe new node joins the cluster by connecting to one of the bootstrap nodes.",
                  "text" : "cluster_static"
                }
              ],
              "hash" : "V-cluster-S-cluster-static",
              "text" : "static",
              "type" : "Struct(cluster_static)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-cluster-S-cluster-dns-S-cluster_dns",
                  "fields" : [
                    {
                      "hash" : "V-cluster-S-cluster-dns-S-cluster_dns-name",
                      "doc" : "The domain name from which to discover peer EMQX nodes' IP addresses.\nApplicable when <code>cluster.discovery_strategy = dns</code>",
                      "text" : "name",
                      "type" : "String",
                      "default" : "localhost"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-dns-S-cluster_dns-record_type",
                      "doc" : "DNS record type.",
                      "text" : "record_type",
                      "type" : "Enum(a,aaaa,srv)",
                      "default" : "a"
                    }
                  ],
                  "doc" : "Service discovery via DNS SRV records.",
                  "text" : "cluster_dns"
                }
              ],
              "hash" : "V-cluster-S-cluster-dns",
              "text" : "dns",
              "type" : "Struct(cluster_dns)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-cluster-S-cluster-etcd-S-cluster_etcd",
                  "fields" : [
                    {
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-server",
                      "doc" : "List of endpoint URLs of the etcd cluster",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-prefix",
                      "doc" : "Key prefix used for EMQX service discovery.",
                      "text" : "prefix",
                      "type" : "String",
                      "default" : "emqxcl"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-node_ttl",
                      "doc" : "Expiration time of the etcd key associated with the node.\nIt is refreshed automatically, as long as the node is alive.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "node_ttl",
                      "type" : "Duration",
                      "default" : "\"1m\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-cluster-S-cluster-etcd-S-cluster_etcd-ssl_options",
                      "aliases" : [
                        "ssl"
                      ],
                      "doc" : "Options for the TLS connection to the etcd cluster.",
                      "text" : "ssl_options",
                      "type" : "Struct(ssl_client_opts)"
                    }
                  ],
                  "doc" : "Service discovery using 'etcd' service.",
                  "text" : "cluster_etcd"
                }
              ],
              "hash" : "V-cluster-S-cluster-etcd",
              "text" : "etcd",
              "type" : "Struct(cluster_etcd)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-cluster-S-cluster-k8s-S-cluster_k8s",
                  "fields" : [
                    {
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-apiserver",
                      "doc" : "Kubernetes API endpoint URL.",
                      "text" : "apiserver",
                      "type" : "String",
                      "default" : "\"https://kubernetes.default.svc:443\""
                    },
                    {
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-service_name",
                      "doc" : "EMQX broker service name.",
                      "text" : "service_name",
                      "type" : "String",
                      "default" : "emqx"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-address_type",
                      "doc" : "Address type used for connecting to the discovered nodes.\nSetting <code>cluster.k8s.address_type</code> to <code>ip</code> will\nmake EMQX to discover IP addresses of peer nodes from Kubernetes API.",
                      "text" : "address_type",
                      "type" : "Enum(ip,dns,hostname)",
                      "default" : "ip"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-namespace",
                      "doc" : "Kubernetes namespace.",
                      "text" : "namespace",
                      "type" : "String",
                      "default" : "default"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-k8s-S-cluster_k8s-suffix",
                      "doc" : "Node name suffix.<br/>\nNote: this parameter is only relevant when <code>address_type</code> is <code>dns</code>\nor <code>hostname</code>.",
                      "text" : "suffix",
                      "type" : "String",
                      "default" : "\"pod.local\""
                    }
                  ],
                  "doc" : "Service discovery via Kubernetes API server.",
                  "text" : "cluster_k8s"
                }
              ],
              "hash" : "V-cluster-S-cluster-k8s",
              "text" : "k8s",
              "type" : "Struct(cluster_k8s)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-cluster-S-cluster-links-S-link",
                  "fields" : [
                    {
                      "hash" : "V-cluster-S-cluster-links-S-link-name",
                      "doc" : "Linked (remote) cluster name. Must be exactly equal to the value of `cluster.name` configured at the remote cluster. Must not be equal to the local cluster.name. All configured cluster link names must be unique.",
                      "text" : "name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-links-S-link-server",
                      "doc" : "MQTT host and port of the remote EMQX broker.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-links-S-link-clientid",
                      "doc" : "Optional Base MQTT client ID for connecting to the remote EMQX cluster. If omitted, local `cluster.name` is used. EMQX maintains several connections between linked clusters, so distinct suffixes are automatically appended to the base client ID.",
                      "text" : "clientid",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-links-S-link-username",
                      "doc" : "Optional MQTT username for connecting to the remote EMQX cluster.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-links-S-link-password",
                      "doc" : "Optional MQTT username for connecting to the remote EMQX cluster.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-cluster-S-cluster-links-S-link-ssl",
                      "doc" : "SSL configuration for connecting to the remote EMQX cluster.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-links-S-link-topics",
                      "doc" : "MQTT topics to be forwarded by the linked remote EMQX broker to the local broker. Messages are only forwarded if the local EMQX broker has matching subscriber(s).\nWildcards are supported. Setting empty topics list on one side of the link can be used to establish unidirectional links: the side with the empty topics won't receive remote messages, but it can forward relevant messages to its linked counterpart (according to the topics configured on that side of the link).",
                      "text" : "topics",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-links-S-link-pool_size",
                      "doc" : "Size of the pool of MQTT clients that will publish messages to the linked EMQX broker.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-cluster-S-cluster-links-S-link-retry_interval",
                      "doc" : "Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received.",
                      "text" : "retry_interval",
                      "type" : "String",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-cluster-S-cluster-links-S-link-max_inflight",
                      "doc" : "Max inflight (sent, but un-acked) messages of the MQTT protocol",
                      "text" : "max_inflight",
                      "type" : "Integer(0..+inf)",
                      "default" : "32"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts",
                          "fields" : [
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts-auto_restart_interval",
                              "doc" : "Deprecated since 5.1.0.",
                              "text" : "auto_restart_interval",
                              "type" : "OneOf(String(\"infinity\"),Duration)"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts-enable_queue",
                              "doc" : "Deprecated since v5.0.14.",
                              "text" : "enable_queue",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-cluster-S-cluster-links-S-link-resource_opts-S-creation_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "creation_opts"
                        }
                      ],
                      "hash" : "V-cluster-S-cluster-links-S-link-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(creation_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Cluster link configuration",
                  "text" : "link"
                }
              ],
              "hash" : "V-cluster-S-cluster-links",
              "doc" : "The list of the linked EMQX clusters.",
              "text" : "links",
              "type" : "Array(Struct(link))",
              "default" : "[]"
            }
          ],
          "doc" : "EMQX nodes can form a cluster to scale up the total capacity.<br/>\n      Here holds the configs to instruct how individual nodes can discover each other.",
          "text" : "cluster"
        }
      ],
      "hash" : "V-cluster",
      "text" : "cluster",
      "type" : "Struct(cluster)"
    },
    {
      "refs" : [
        {
          "hash" : "T-log-S-log",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-log-S-log-console-S-console_handler",
                  "fields" : [
                    {
                      "hash" : "V-log-S-log-console-S-console_handler-level",
                      "doc" : "The log level for the current log handler.\nDefaults to warning.",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "hash" : "V-log-S-log-console-S-console_handler-enable",
                      "doc" : "Enable this log handler.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-log-S-log-console-S-console_handler-formatter",
                      "aliases" : [
                        "format"
                      ],
                      "doc" : "Choose log formatter. <code>text</code> for free text, and <code>json</code> for structured logging.",
                      "text" : "formatter",
                      "type" : "Enum(text,json)",
                      "default" : "text"
                    },
                    {
                      "hash" : "V-log-S-log-console-S-console_handler-timestamp_format",
                      "doc" : "Pick a timestamp format:\n- `auto`: automatically choose the best format based on log formatter. `epoch` for JSON and `rfc3339` for text.\n- `epoch`: Unix epoch time in microseconds.\n- `rfc3339`: RFC3339 format.",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "hash" : "V-log-S-log-console-S-console_handler-time_offset",
                      "doc" : "The time offset to be used when formatting the timestamp.\nCan be one of:\n  - <code>system</code>: the time offset used by the local system\n  - <code>utc</code>: the UTC time offset\n  - <code>+-[hh]:[mm]</code>: user specified time offset, such as \"-02:00\" or \"+00:00\"\nDefaults to: <code>system</code>.\nThis config has no effect for when formatter is <code>json</code> as the timestamp in JSON is milliseconds since epoch.",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    },
                    {
                      "hash" : "V-log-S-log-console-S-console_handler-payload_encode",
                      "doc" : "Determine the format of the payload format in the trace file.<br/>\n`text`: Text-based protocol or plain text protocol.\n It is recommended when payload is JSON encoded.<br/>\n`hex`: Binary hexadecimal encode. It is recommended when payload is a custom binary protocol.<br/>\n`hidden`: payload is obfuscated as `******`",
                      "text" : "payload_encode",
                      "type" : "Enum(hex,text,hidden)",
                      "default" : "text"
                    }
                  ],
                  "doc" : "Log handler that prints log events to the EMQX console.",
                  "text" : "console_handler"
                }
              ],
              "hash" : "V-log-S-log-console",
              "aliases" : [
                "console_handler"
              ],
              "text" : "console",
              "type" : "Struct(console_handler)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-log-S-log-file-S-log_file_handler",
                  "fields" : [
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-path",
                      "aliases" : [
                        "file",
                        "to"
                      ],
                      "doc" : "Name the log file.",
                      "text" : "path",
                      "type" : "String",
                      "default" : "\"${EMQX_LOG_DIR}/emqx.log\""
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_count",
                      "aliases" : [
                        "rotation"
                      ],
                      "doc" : "Maximum number of log files.",
                      "text" : "rotation_count",
                      "type" : "Integer(1..128)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_size",
                      "aliases" : [
                        "max_size"
                      ],
                      "doc" : "This parameter controls log file rotation. The value `infinity` means the log file will grow indefinitely, otherwise the log file will be rotated once it reaches `rotation_size` in bytes.",
                      "text" : "rotation_size",
                      "type" : "OneOf(String(\"infinity\"),Bytesize)",
                      "default" : "\"50MB\""
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-level",
                      "doc" : "The log level for the current log handler.\nDefaults to warning.",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-formatter",
                      "aliases" : [
                        "format"
                      ],
                      "doc" : "Choose log formatter. <code>text</code> for free text, and <code>json</code> for structured logging.",
                      "text" : "formatter",
                      "type" : "Enum(text,json)",
                      "default" : "text"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-timestamp_format",
                      "doc" : "Pick a timestamp format:\n- `auto`: automatically choose the best format based on log formatter. `epoch` for JSON and `rfc3339` for text.\n- `epoch`: Unix epoch time in microseconds.\n- `rfc3339`: RFC3339 format.",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-time_offset",
                      "doc" : "The time offset to be used when formatting the timestamp.\nCan be one of:\n  - <code>system</code>: the time offset used by the local system\n  - <code>utc</code>: the UTC time offset\n  - <code>+-[hh]:[mm]</code>: user specified time offset, such as \"-02:00\" or \"+00:00\"\nDefaults to: <code>system</code>.\nThis config has no effect for when formatter is <code>json</code> as the timestamp in JSON is milliseconds since epoch.",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-payload_encode",
                      "doc" : "Determine the format of the payload format in the trace file.<br/>\n`text`: Text-based protocol or plain text protocol.\n It is recommended when payload is JSON encoded.<br/>\n`hex`: Binary hexadecimal encode. It is recommended when payload is a custom binary protocol.<br/>\n`hidden`: payload is obfuscated as `******`",
                      "text" : "payload_encode",
                      "type" : "Enum(hex,text,hidden)",
                      "default" : "text"
                    }
                  ],
                  "doc" : "Log handler that prints log events to files.",
                  "text" : "log_file_handler"
                },
                {
                  "hash" : "T-log-S-log-file-S-log_file_handler",
                  "fields" : [
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-path",
                      "aliases" : [
                        "file",
                        "to"
                      ],
                      "doc" : "Name the log file.",
                      "text" : "path",
                      "type" : "String",
                      "default" : "\"${EMQX_LOG_DIR}/emqx.log\""
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_count",
                      "aliases" : [
                        "rotation"
                      ],
                      "doc" : "Maximum number of log files.",
                      "text" : "rotation_count",
                      "type" : "Integer(1..128)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-rotation_size",
                      "aliases" : [
                        "max_size"
                      ],
                      "doc" : "This parameter controls log file rotation. The value `infinity` means the log file will grow indefinitely, otherwise the log file will be rotated once it reaches `rotation_size` in bytes.",
                      "text" : "rotation_size",
                      "type" : "OneOf(String(\"infinity\"),Bytesize)",
                      "default" : "\"50MB\""
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-level",
                      "doc" : "The log level for the current log handler.\nDefaults to warning.",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-formatter",
                      "aliases" : [
                        "format"
                      ],
                      "doc" : "Choose log formatter. <code>text</code> for free text, and <code>json</code> for structured logging.",
                      "text" : "formatter",
                      "type" : "Enum(text,json)",
                      "default" : "text"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-timestamp_format",
                      "doc" : "Pick a timestamp format:\n- `auto`: automatically choose the best format based on log formatter. `epoch` for JSON and `rfc3339` for text.\n- `epoch`: Unix epoch time in microseconds.\n- `rfc3339`: RFC3339 format.",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-time_offset",
                      "doc" : "The time offset to be used when formatting the timestamp.\nCan be one of:\n  - <code>system</code>: the time offset used by the local system\n  - <code>utc</code>: the UTC time offset\n  - <code>+-[hh]:[mm]</code>: user specified time offset, such as \"-02:00\" or \"+00:00\"\nDefaults to: <code>system</code>.\nThis config has no effect for when formatter is <code>json</code> as the timestamp in JSON is milliseconds since epoch.",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    },
                    {
                      "hash" : "V-log-S-log-file-S-log_file_handler-payload_encode",
                      "doc" : "Determine the format of the payload format in the trace file.<br/>\n`text`: Text-based protocol or plain text protocol.\n It is recommended when payload is JSON encoded.<br/>\n`hex`: Binary hexadecimal encode. It is recommended when payload is a custom binary protocol.<br/>\n`hidden`: payload is obfuscated as `******`",
                      "text" : "payload_encode",
                      "type" : "Enum(hex,text,hidden)",
                      "default" : "text"
                    }
                  ],
                  "doc" : "Log handler that prints log events to files.",
                  "text" : "log_file_handler"
                }
              ],
              "hash" : "V-log-S-log-file",
              "aliases" : [
                "file_handlers"
              ],
              "doc" : "File-based log handlers.",
              "text" : "file",
              "type" : "OneOf(Struct(log_file_handler),Map($handler_name->Struct(log_file_handler)))",
              "default" : "{level = warning}"
            },
            {
              "refs" : [
                {
                  "hash" : "T-log-S-log-throttling-S-log_throttling",
                  "fields" : [
                    {
                      "hash" : "V-log-S-log-throttling-S-log_throttling-time_window",
                      "doc" : "This configuration setting controls the logging behavior for throttled messages,\nincluding, but not limited to messages like 'authorization_permission_denied'.\nWithin each defined time window, only one instance of a throttled message will be logged to prevent log flooding.\nAt the conclusion of each time window, a summary log will be generated, detailing the occurrence of any throttled messages during that period.\nIt's important to note that the shortest effective time window for this setting is 1 second (`1s`).\nShould a value lower than `1s` be specified, it will automatically be adjusted to `1s`.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "time_window",
                      "type" : "Duration(s)",
                      "default" : "\"1m\""
                    }
                  ],
                  "doc" : "Log throttling feature reduces the number of potentially flooding logged events by\ndropping all but the first event within a configured time window.\nThe throttling is automatically disabled if `console` or `file` log level is set to debug.",
                  "text" : "log_throttling"
                }
              ],
              "hash" : "V-log-S-log-throttling",
              "text" : "throttling",
              "type" : "Struct(log_throttling)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-log-S-log-audit-S-log_audit_handler",
                  "fields" : [
                    {
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-path",
                      "doc" : "Name the audit log file.",
                      "text" : "path",
                      "type" : "String",
                      "default" : "\"${EMQX_LOG_DIR}/audit.log\""
                    },
                    {
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-rotation_count",
                      "doc" : "Maximum number of log files.",
                      "text" : "rotation_count",
                      "type" : "Integer(1..128)",
                      "default" : "10"
                    },
                    {
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-rotation_size",
                      "doc" : "This parameter controls log file rotation. The value `infinity` means the log file will grow indefinitely, otherwise the log file will be rotated once it reaches `rotation_size` in bytes.",
                      "text" : "rotation_size",
                      "type" : "OneOf(String(\"infinity\"),Bytesize)",
                      "default" : "\"50MB\""
                    },
                    {
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-max_filter_size",
                      "doc" : "Store the latest N log entries in a database for allow `/audit` HTTP API to filter and retrieval of log data.\nThe interval for purging redundant log records is maintained within a range of 10~20 seconds.",
                      "text" : "max_filter_size",
                      "type" : "Integer(10..30000)",
                      "default" : "5000"
                    },
                    {
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-ignore_high_frequency_request",
                      "doc" : "Ignore high frequency requests to avoid flooding the audit log,\nsuch as publish/subscribe kick out http api requests are ignored.",
                      "text" : "ignore_high_frequency_request",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-timestamp_format",
                      "doc" : "Pick a timestamp format:\n- `auto`: automatically choose the best format based on log formatter. `epoch` for JSON and `rfc3339` for text.\n- `epoch`: Unix epoch time in microseconds.\n- `rfc3339`: RFC3339 format.",
                      "text" : "timestamp_format",
                      "type" : "Enum(auto,epoch,rfc3339)",
                      "default" : "auto"
                    },
                    {
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-time_offset",
                      "doc" : "The time offset to be used when formatting the timestamp.\nCan be one of:\n  - <code>system</code>: the time offset used by the local system\n  - <code>utc</code>: the UTC time offset\n  - <code>+-[hh]:[mm]</code>: user specified time offset, such as \"-02:00\" or \"+00:00\"\nDefaults to: <code>system</code>.\nThis config has no effect for when formatter is <code>json</code> as the timestamp in JSON is milliseconds since epoch.",
                      "text" : "time_offset",
                      "type" : "String",
                      "default" : "system"
                    },
                    {
                      "hash" : "V-log-S-log-audit-S-log_audit_handler-payload_encode",
                      "doc" : "Determine the format of the payload format in the trace file.<br/>\n`text`: Text-based protocol or plain text protocol.\n It is recommended when payload is JSON encoded.<br/>\n`hex`: Binary hexadecimal encode. It is recommended when payload is a custom binary protocol.<br/>\n`hidden`: payload is obfuscated as `******`",
                      "text" : "payload_encode",
                      "type" : "Enum(hex,text,hidden)",
                      "default" : "text"
                    }
                  ],
                  "doc" : "Audit log handler that prints log events to files.",
                  "text" : "log_audit_handler"
                }
              ],
              "hash" : "V-log-S-log-audit",
              "doc" : "Audit file-based log handler.",
              "text" : "audit",
              "type" : "Struct(log_audit_handler)",
              "default" : "{enable = false, level = info}"
            }
          ],
          "doc" : "EMQX supports multiple log handlers, one console handler and multiple file handlers.\nEMQX by default logs to console when running in docker or in console/foreground mode,\notherwise it logs to file `${EMQX_LOG_DIR}/emqx.log.N`.\nFor advanced configuration, you can find more parameters in this section.",
          "text" : "log"
        }
      ],
      "hash" : "V-log",
      "doc" : "EMQX provides support for two primary log handlers: `file` and `console`, with an additional `audit` handler specifically designed to always direct logs to files.\nThe system's default log handling behavior can be configured via the environment variable `EMQX_DEFAULT_LOG_HANDLER`, which accepts the following settings:\n\n- `file`: Directs log output exclusively to files.\n- `console`: Channels log output solely to the console.\n\nIt's noteworthy that `EMQX_DEFAULT_LOG_HANDLER` is set to `file` when EMQX is initiated via systemd's `emqx.service` file.\nIn scenarios outside systemd initiation, `console` serves as the default log handler.",
      "text" : "log",
      "type" : "Struct(log)"
    },
    {
      "refs" : [
        {
          "hash" : "T-rpc-S-rpc",
          "fields" : [
            {
              "hash" : "V-rpc-S-rpc-mode",
              "doc" : "In <code>sync</code> mode the sending side waits for the ack from the receiving side.",
              "text" : "mode",
              "type" : "Enum(sync,async)",
              "default" : "async"
            },
            {
              "hash" : "V-rpc-S-rpc-protocol",
              "aliases" : [
                "driver"
              ],
              "doc" : "Transport protocol used for inter-broker communication",
              "text" : "protocol",
              "type" : "Enum(tcp,ssl)",
              "default" : "tcp"
            },
            {
              "hash" : "V-rpc-S-rpc-async_batch_size",
              "doc" : "The maximum number of batch messages sent in asynchronous mode.\n      Note that this configuration does not work in synchronous mode.",
              "text" : "async_batch_size",
              "type" : "Integer",
              "default" : "256"
            },
            {
              "hash" : "V-rpc-S-rpc-port_discovery",
              "doc" : "<code>manual</code>: discover ports by <code>server_port</code>.<br/>\n<code>stateless</code>: discover ports in a stateless manner, using the following algorithm.\nIf node name is <code>emqxN@127.0.0.1</code>, where the N is an integer,\nthen the listening port will be 5370 + N.\nNOTE: when `port_discovery` is `manual`, `server_port` configuration has no effect.",
              "text" : "port_discovery",
              "type" : "Enum(manual,stateless)",
              "default" : "stateless"
            },
            {
              "hash" : "V-rpc-S-rpc-server_port",
              "aliases" : [
                "tcp_server_port",
                "ssl_server_port"
              ],
              "doc" : "Listening port used by RPC local service.<br/>\nNote that this config only takes effect when rpc.port_discovery is set to manual.",
              "text" : "server_port",
              "type" : "Integer(1..+inf)",
              "default" : "5369"
            },
            {
              "hash" : "V-rpc-S-rpc-client_num",
              "aliases" : [
                "tcp_client_num"
              ],
              "doc" : "Set the maximum number of RPC communication channels initiated by this node to each remote node.",
              "text" : "client_num",
              "type" : "Integer(1..256)",
              "default" : "10"
            },
            {
              "hash" : "V-rpc-S-rpc-connect_timeout",
              "doc" : "Timeout for establishing an RPC connection.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "connect_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "hash" : "V-rpc-S-rpc-certfile",
              "doc" : "Path to TLS certificate file used to validate identity of the cluster nodes.\nNote that this config only takes effect when <code>rpc.driver</code> is set to <code>ssl</code>.",
              "text" : "certfile",
              "type" : "String"
            },
            {
              "hash" : "V-rpc-S-rpc-keyfile",
              "doc" : "Path to the private key file for the <code>rpc.certfile</code>.<br/>\nNote: contents of this file are secret, so it's necessary to set permissions to 600.",
              "text" : "keyfile",
              "type" : "String"
            },
            {
              "hash" : "V-rpc-S-rpc-cacertfile",
              "doc" : "Path to certification authority TLS certificate file used to validate <code>rpc.certfile</code>.<br/>\nNote: certificates of all nodes in the cluster must be signed by the same CA.",
              "text" : "cacertfile",
              "type" : "String"
            },
            {
              "hash" : "V-rpc-S-rpc-send_timeout",
              "doc" : "Timeout for sending the RPC request.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "send_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "hash" : "V-rpc-S-rpc-authentication_timeout",
              "doc" : "Timeout for the remote node authentication.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "authentication_timeout",
              "type" : "Duration",
              "default" : "\"5s\""
            },
            {
              "hash" : "V-rpc-S-rpc-call_receive_timeout",
              "doc" : "Timeout for the reply to a synchronous RPC.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "call_receive_timeout",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "hash" : "V-rpc-S-rpc-socket_keepalive_idle",
              "doc" : "Corresponds to the `TCP_KEEPIDLE` socket option. The time (in seconds) the connection needs to remain idle before TCP starts sending keepalive probes.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "socket_keepalive_idle",
              "type" : "Duration(s)",
              "default" : "\"15m\""
            },
            {
              "hash" : "V-rpc-S-rpc-socket_keepalive_interval",
              "doc" : "Corresponds to the `TCP_KEEPINTVL` socket option. The time (in seconds) between individual keepalive probes.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "socket_keepalive_interval",
              "type" : "Duration(s)",
              "default" : "\"75s\""
            },
            {
              "hash" : "V-rpc-S-rpc-socket_keepalive_count",
              "doc" : "Corresponds to the `TCP_KEEPCNT` socket option. The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end.",
              "text" : "socket_keepalive_count",
              "type" : "Integer",
              "default" : "9"
            },
            {
              "hash" : "V-rpc-S-rpc-socket_sndbuf",
              "doc" : "TCP tuning parameters. TCP sending buffer size.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "text" : "socket_sndbuf",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "hash" : "V-rpc-S-rpc-socket_recbuf",
              "doc" : "TCP tuning parameters. TCP receiving buffer size.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "text" : "socket_recbuf",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "hash" : "V-rpc-S-rpc-socket_buffer",
              "doc" : "TCP tuning parameters. Socket buffer size in user mode.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "text" : "socket_buffer",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "hash" : "V-rpc-S-rpc-insecure_fallback",
              "doc" : "Enable compatibility with old RPC authentication.",
              "text" : "insecure_fallback",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-rpc-S-rpc-ciphers",
              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
              "text" : "ciphers",
              "type" : "Array(String)",
              "default" : "[]"
            },
            {
              "hash" : "V-rpc-S-rpc-tls_versions",
              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
              "text" : "tls_versions",
              "type" : "Array(String)",
              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
            },
            {
              "hash" : "V-rpc-S-rpc-listen_address",
              "doc" : "Indicates the IP address for the RPC server to listen on. For example, use <code>\"0.0.0.0\"</code> for IPv4 or <code>\"::\"</code> for IPv6.",
              "text" : "listen_address",
              "type" : "String",
              "default" : "\"0.0.0.0\""
            },
            {
              "hash" : "V-rpc-S-rpc-ipv6_only",
              "doc" : "This setting is effective only when <code>rpc.listen_address</code> is assigned an IPv6 address.\nIf set to <code>true</code>, the RPC client will exclusively use IPv6 for connections.\nOtherwise, the client might opt for IPv4, even if the server is on IPv6.",
              "text" : "ipv6_only",
              "type" : "Boolean",
              "default" : "false"
            }
          ],
          "doc" : "EMQX uses a library called <code>gen_rpc</code> for inter-broker communication.<br/>\nMost of the time the default config should work,\nbut in case you need to do performance fine-tuning or experiment a bit,\nthis is where to look.",
          "text" : "rpc"
        }
      ],
      "hash" : "V-rpc",
      "text" : "rpc",
      "type" : "Struct(rpc)"
    },
    {
      "refs" : [
        {
          "hash" : "T-sys_topics-S-sys_topics",
          "fields" : [
            {
              "hash" : "V-sys_topics-S-sys_topics-sys_msg_interval",
              "doc" : "Time interval for publishing following system messages:\n  - `$SYS/brokers`\n  - `$SYS/brokers/<node>/version`\n  - `$SYS/brokers/<node>/sysdescr`\n  - `$SYS/brokers/<node>/stats/<name>`\n  - `$SYS/brokers/<node>/metrics/<name>`",
              "text" : "sys_msg_interval",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "\"1m\""
            },
            {
              "hash" : "V-sys_topics-S-sys_topics-sys_heartbeat_interval",
              "doc" : "Time interval for publishing following heartbeat messages:\n  - `$SYS/brokers/<node>/uptime`\n  - `$SYS/brokers/<node>/datetime`",
              "text" : "sys_heartbeat_interval",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "\"30s\""
            },
            {
              "refs" : [
                {
                  "hash" : "T-sys_topics-S-sys_topics-sys_event_messages-S-event_names",
                  "fields" : [
                    {
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_connected",
                      "doc" : "Enable to publish client connected event messages",
                      "text" : "client_connected",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_disconnected",
                      "doc" : "Enable to publish client disconnected event messages.",
                      "text" : "client_disconnected",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_subscribed",
                      "doc" : "Enable to publish event message that client subscribed a topic successfully.",
                      "text" : "client_subscribed",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-sys_topics-S-sys_topics-sys_event_messages-S-event_names-client_unsubscribed",
                      "doc" : "Enable to publish event message that client unsubscribed a topic successfully.",
                      "text" : "client_unsubscribed",
                      "type" : "Boolean",
                      "default" : "false"
                    }
                  ],
                  "doc" : "Enable or disable client lifecycle event publishing.\n\nThe following options affect MQTT clients as well as\ngateway clients. The types of the clients\nare distinguished by the topic prefix:\n\n- For the MQTT clients, the format is:\n`$SYS/broker/<node>/clients/<clientid>/<event>`\n- For the Gateway clients, it is\n`$SYS/broker/<node>/gateway/<gateway-name>/clients/<clientid>/<event>`\n",
                  "text" : "event_names"
                }
              ],
              "hash" : "V-sys_topics-S-sys_topics-sys_event_messages",
              "doc" : "Client events messages.",
              "text" : "sys_event_messages",
              "type" : "Struct(event_names)"
            }
          ],
          "doc" : "The EMQX Broker periodically publishes its own status, message statistics,\nclient online and offline events to the system topic starting with `$SYS/`.\n\nThe following options control the behavior of `$SYS` topics.",
          "text" : "sys_topics"
        }
      ],
      "hash" : "V-sys_topics",
      "doc" : "System topics configuration.",
      "text" : "sys_topics",
      "type" : "Struct(sys_topics)"
    },
    {
      "refs" : [
        {
          "hash" : "T-force_shutdown-S-force_shutdown",
          "fields" : [
            {
              "hash" : "V-force_shutdown-S-force_shutdown-max_mailbox_size",
              "aliases" : [
                "max_message_queue_len"
              ],
              "doc" : "EMQX creates at least one lightweight process for each client connection.\n\nEach process has its own message queue (aka mailbox) to hold messages from other processes (e.g. MQTT messages) so that the process can read messages from the message queue (mailbox) at any time.\n\nIf the system is busy or the process hangs due to a busy socket (see `high_watermark`), the message queue can accumulate many messages.\n\nTo avoid excessive memory usage, EMQX will force a process to shut down when the length of its message queue exceeds `max_mailbox_size`.",
              "text" : "max_mailbox_size",
              "type" : "Integer(0..inf)",
              "default" : "1000"
            },
            {
              "hash" : "V-force_shutdown-S-force_shutdown-max_heap_size",
              "doc" : "The maximum heap size of the process. If the `force_shutdown` is enabled, processes that exceed this limit will automatically exit or be forcibly killed. Messages in the process message queue (mailbox) are also part of the heap. The shutdown of a process can be divided into the following two situations:\n\n- The process actively checks the current heap size during its own operation, and actively exits after finding that it exceeds the limit.\n- The underlying scheduling system checks the current heap size after performing garbage collection for the process, and forcibly kills the process after finding that it exceeds the limit.\n\nNote: The Error logs generated by the above two will be different. The log generated by the former is similar to `...errorContext: connection_shutdown, reason: #{max => 2097152, reason => proc_heap_too_large, value => 2787348}..`,\nand the log generated by the latter is similar to `...Context: maximum heap size reached...`.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "text" : "max_heap_size",
              "type" : "Bytesize",
              "default" : "\"32MB\""
            }
          ],
          "doc" : "When the process message queue length, or the memory bytes\nreaches a certain value, the process is forced to close.\n\nNote: \"message queue\" here refers to the \"message mailbox\"\nof the Erlang process, not the `mqueue` of QoS 1 and QoS 2.",
          "text" : "force_shutdown"
        }
      ],
      "hash" : "V-force_shutdown",
      "text" : "force_shutdown",
      "type" : "Struct(force_shutdown)"
    },
    {
      "refs" : [
        {
          "hash" : "T-durable_storage-S-durable_storage",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_raft",
                  "fields" : [
                    {
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-backend",
                      "doc" : "Backend type.",
                      "text" : "backend",
                      "type" : "String(\"builtin_raft\")",
                      "default" : "builtin_raft"
                    },
                    {
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-replication_factor",
                      "doc" : "Number of identical replicas each shard should have.\nIncreasing this number improves durability and availability at the expense of greater resource consumption.\nQuorum of replicas is needed to be healthy for the replication to work, hence an odd number of replicas is a good pick in general.\nPlease note that it takes effect only during the initialization of the durable storage database.\nChanging this configuration parameter after the database has been already created won't take any effect.",
                      "text" : "replication_factor",
                      "type" : "Integer(1..+inf)",
                      "default" : "3"
                    },
                    {
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-n_sites",
                      "doc" : "Number of storage sites that need to share responsibility over the set of storage shards.\nIn this context, sites are EMQX nodes with message durability enabled.\nPlease note that it takes effect only during the initialization of the durable storage database.\nDuring this phase at least that many sites should come online to distribute shards between them, otherwise message storage will be unavailable until then.\nAfter the initialization is complete, sites may be offline, which will affect availability depending on the number of offline sites and replication factor.",
                      "text" : "n_sites",
                      "type" : "Integer(1..+inf)",
                      "default" : "1"
                    },
                    {
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-data_dir",
                      "doc" : "File system directory where the database is located.\n\nBy default, it is equal to `node.data_dir`.",
                      "text" : "data_dir",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-n_shards",
                      "doc" : "The built-in durable storage partitions data into shards.\nThis configuration parameter defines the number of shards.\nPlease note that it takes effect only during the initialization of the durable storage database.\nChanging this configuration parameter after the database has been already created won't take any effect.",
                      "text" : "n_shards",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_raft-transaction-S-optimistic_transaction",
                          "fields" : [
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-transaction-S-optimistic_transaction-flush_interval",
                              "doc" : "Specifies the maximum time operations may linger in the buffer before they are committed to the storage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "flush_interval",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-transaction-S-optimistic_transaction-idle_flush_interval",
                              "doc" : "If shard doesn't receive new transactions within this period, the buffer is flushed early.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "idle_flush_interval",
                              "type" : "Duration",
                              "default" : "\"1ms\""
                            },
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-transaction-S-optimistic_transaction-conflict_window",
                              "doc" : "Builtin durable storage backends track recent updates over a period of time known as the conflict tracking window.\n\nTransactions that started earlier than the beginning of the window are automatically rejected.\nSo, effectively, this parameter limits the time the transactions can run.\n\nHigher values reduce the risk of rejecting transactions due to long run time, but may increase RAM demands.\n\nThis value should be greater than the flush interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "conflict_window",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Transaction settings for built-in durable storage backends.",
                          "text" : "optimistic_transaction"
                        }
                      ],
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-transaction",
                      "doc" : "Transaction settings.",
                      "text" : "transaction",
                      "type" : "Struct(optimistic_transaction)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_raft-layout-S-layout_builtin_wildcard_optimized_v2",
                          "fields" : [
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-layout-S-layout_builtin_wildcard_optimized_v2-type",
                              "doc" : "Wildcard-optimized layout type.",
                              "text" : "type",
                              "type" : "String(\"wildcard_optimized_v2\")",
                              "default" : "wildcard_optimized_v2"
                            }
                          ],
                          "doc" : "_Wildcard-optimized_ layout is designed to maximize the throughput of wildcard subscriptions covering large numbers of topics.\n\nFor example, it can handle scenarios where a very large number of clients publish data to the topics containing their client ID, such as: `sensor/%device-version%/%clientid%/temperature`, `sensor/%device-version%/%clientid%/pressure`, etc.\nThis layout will automatically group such topics into a single stream, so a client subscribing to a topic filter containing wildcards (such as `sensor/+/+/temperature`) will be able to consume messages published by all devices as a single batch.\n\nThis layout is efficient for non-wildcard subscriptions as well.",
                          "text" : "layout_builtin_wildcard_optimized_v2"
                        },
                        {
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_raft-layout-S-layout_builtin_wildcard_optimized",
                          "fields" : [
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-layout-S-layout_builtin_wildcard_optimized-type",
                              "doc" : "Wildcard-optimized layout type.",
                              "text" : "type",
                              "type" : "String(\"wildcard_optimized\")",
                              "default" : "wildcard_optimized"
                            }
                          ],
                          "doc" : "_Wildcard-optimized_ layout is designed to maximize the throughput of wildcard subscriptions covering large numbers of topics.\n\nFor example, it can handle scenarios where a very large number of clients publish data to the topics containing their client ID, such as: `sensor/%device-version%/%clientid%/temperature`, `sensor/%device-version%/%clientid%/pressure`, etc.\nThis layout will automatically group such topics into a single stream, so a client subscribing to a topic filter containing wildcards (such as `sensor/+/+/temperature`) will be able to consume messages published by all devices as a single batch.\n\nThis layout is efficient for non-wildcard subscriptions as well.",
                          "text" : "layout_builtin_wildcard_optimized"
                        },
                        {
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_raft-layout-S-layout_builtin_reference",
                          "fields" : [
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-layout-S-layout_builtin_reference-type",
                              "doc" : "Reference layout type.",
                              "text" : "type",
                              "type" : "String(\"reference\")",
                              "default" : "reference"
                            }
                          ],
                          "doc" : "A simplistic layout type that stores all messages from all topics in chronological order in a single stream.\n\nNot recommended for production use.",
                          "text" : "layout_builtin_reference"
                        }
                      ],
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_raft-layout",
                      "doc" : "Storage layout is a method of arranging messages from various topics and clients on disc.\n\nDepending on the type of workload and the topic structure, different types of strategies for storing the data can be employed to maximize efficiency of reading messages from the durable storage.",
                      "text" : "layout",
                      "type" : "OneOf(Struct(layout_builtin_wildcard_optimized_v2),Struct(layout_builtin_wildcard_optimized),Struct(layout_builtin_reference))",
                      "default" : "{type = wildcard_optimized_v2}"
                    }
                  ],
                  "doc" : "Builtin storage backend utilizing embedded RocksDB key-value store.",
                  "text" : "builtin_raft"
                },
                {
                  "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_local",
                  "fields" : [
                    {
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-backend",
                      "doc" : "Backend type.",
                      "text" : "backend",
                      "type" : "String(\"builtin_local\")",
                      "default" : "builtin_local"
                    },
                    {
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-data_dir",
                      "doc" : "File system directory where the database is located.\n\nBy default, it is equal to `node.data_dir`.",
                      "text" : "data_dir",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-n_shards",
                      "doc" : "The built-in durable storage partitions data into shards.\nThis configuration parameter defines the number of shards.\nPlease note that it takes effect only during the initialization of the durable storage database.\nChanging this configuration parameter after the database has been already created won't take any effect.",
                      "text" : "n_shards",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_local-transaction-S-optimistic_transaction",
                          "fields" : [
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-transaction-S-optimistic_transaction-flush_interval",
                              "doc" : "Specifies the maximum time operations may linger in the buffer before they are committed to the storage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "flush_interval",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-transaction-S-optimistic_transaction-idle_flush_interval",
                              "doc" : "If shard doesn't receive new transactions within this period, the buffer is flushed early.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "idle_flush_interval",
                              "type" : "Duration",
                              "default" : "\"1ms\""
                            },
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-transaction-S-optimistic_transaction-conflict_window",
                              "doc" : "Builtin durable storage backends track recent updates over a period of time known as the conflict tracking window.\n\nTransactions that started earlier than the beginning of the window are automatically rejected.\nSo, effectively, this parameter limits the time the transactions can run.\n\nHigher values reduce the risk of rejecting transactions due to long run time, but may increase RAM demands.\n\nThis value should be greater than the flush interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "conflict_window",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Transaction settings for built-in durable storage backends.",
                          "text" : "optimistic_transaction"
                        }
                      ],
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-transaction",
                      "doc" : "Transaction settings.",
                      "text" : "transaction",
                      "type" : "Struct(optimistic_transaction)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_wildcard_optimized_v2",
                          "fields" : [
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_wildcard_optimized_v2-type",
                              "doc" : "Wildcard-optimized layout type.",
                              "text" : "type",
                              "type" : "String(\"wildcard_optimized_v2\")",
                              "default" : "wildcard_optimized_v2"
                            }
                          ],
                          "doc" : "_Wildcard-optimized_ layout is designed to maximize the throughput of wildcard subscriptions covering large numbers of topics.\n\nFor example, it can handle scenarios where a very large number of clients publish data to the topics containing their client ID, such as: `sensor/%device-version%/%clientid%/temperature`, `sensor/%device-version%/%clientid%/pressure`, etc.\nThis layout will automatically group such topics into a single stream, so a client subscribing to a topic filter containing wildcards (such as `sensor/+/+/temperature`) will be able to consume messages published by all devices as a single batch.\n\nThis layout is efficient for non-wildcard subscriptions as well.",
                          "text" : "layout_builtin_wildcard_optimized_v2"
                        },
                        {
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_wildcard_optimized",
                          "fields" : [
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_wildcard_optimized-type",
                              "doc" : "Wildcard-optimized layout type.",
                              "text" : "type",
                              "type" : "String(\"wildcard_optimized\")",
                              "default" : "wildcard_optimized"
                            }
                          ],
                          "doc" : "_Wildcard-optimized_ layout is designed to maximize the throughput of wildcard subscriptions covering large numbers of topics.\n\nFor example, it can handle scenarios where a very large number of clients publish data to the topics containing their client ID, such as: `sensor/%device-version%/%clientid%/temperature`, `sensor/%device-version%/%clientid%/pressure`, etc.\nThis layout will automatically group such topics into a single stream, so a client subscribing to a topic filter containing wildcards (such as `sensor/+/+/temperature`) will be able to consume messages published by all devices as a single batch.\n\nThis layout is efficient for non-wildcard subscriptions as well.",
                          "text" : "layout_builtin_wildcard_optimized"
                        },
                        {
                          "hash" : "T-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_reference",
                          "fields" : [
                            {
                              "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-layout-S-layout_builtin_reference-type",
                              "doc" : "Reference layout type.",
                              "text" : "type",
                              "type" : "String(\"reference\")",
                              "default" : "reference"
                            }
                          ],
                          "doc" : "A simplistic layout type that stores all messages from all topics in chronological order in a single stream.\n\nNot recommended for production use.",
                          "text" : "layout_builtin_reference"
                        }
                      ],
                      "hash" : "V-durable_storage-S-durable_storage-messages-S-builtin_local-layout",
                      "doc" : "Storage layout is a method of arranging messages from various topics and clients on disc.\n\nDepending on the type of workload and the topic structure, different types of strategies for storing the data can be employed to maximize efficiency of reading messages from the durable storage.",
                      "text" : "layout",
                      "type" : "OneOf(Struct(layout_builtin_wildcard_optimized_v2),Struct(layout_builtin_wildcard_optimized),Struct(layout_builtin_reference))",
                      "default" : "{type = wildcard_optimized_v2}"
                    }
                  ],
                  "doc" : "Builtin storage backend utilizing embedded RocksDB key-value store.\nThis backend doesn't support clustering.",
                  "text" : "builtin_local"
                }
              ],
              "hash" : "V-durable_storage-S-durable_storage-messages",
              "doc" : "Configuration related to the durable storage of MQTT messages.",
              "text" : "messages",
              "type" : "OneOf(Struct(builtin_raft),Struct(builtin_local))",
              "default" : "{backend = builtin_raft}"
            }
          ],
          "doc" : "Configuration related to the EMQX durable storages.\n\nEMQX uses durable storages to offload various data, such as MQTT messages, to disc.",
          "text" : "durable_storage"
        }
      ],
      "hash" : "V-durable_storage",
      "doc" : "Configuration related to the EMQX durable storages.\n\nEMQX uses durable storages to offload various data, such as MQTT messages, to disc.",
      "text" : "durable_storage",
      "type" : "Struct(durable_storage)"
    },
    {
      "refs" : [
        {
          "hash" : "T-force_gc-S-force_gc",
          "fields" : [
            {
              "hash" : "V-force_gc-S-force_gc-count",
              "doc" : "GC the process after this many received messages.",
              "text" : "count",
              "type" : "Integer(0..inf)",
              "default" : "16000"
            },
            {
              "hash" : "V-force_gc-S-force_gc-bytes",
              "doc" : "GC the process after specified number of bytes have passed through.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "text" : "bytes",
              "type" : "Bytesize",
              "default" : "\"16MB\""
            }
          ],
          "doc" : "Force garbage collection in MQTT connection process after\n they process certain number of messages or bytes of data.",
          "text" : "force_gc"
        }
      ],
      "hash" : "V-force_gc",
      "text" : "force_gc",
      "type" : "Struct(force_gc)"
    },
    {
      "refs" : [
        {
          "hash" : "T-sysmon-S-sysmon",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-sysmon-S-sysmon-vm-S-sysmon_vm",
                  "fields" : [
                    {
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_check_interval",
                      "doc" : "The time interval for the periodic process count limit check, used together with `process_high_watermark` and `process_low_watermark`.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "process_check_interval",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_high_watermark",
                      "doc" : "The threshold, as percentage of processes, for how many\n processes can simultaneously exist at the local node before the corresponding\n alarm is raised.",
                      "text" : "process_high_watermark",
                      "type" : "String",
                      "default" : "\"80%\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-process_low_watermark",
                      "doc" : "The threshold, as percentage of processes, for how many\n processes can simultaneously exist at the local node before the corresponding\n alarm is cleared.",
                      "text" : "process_low_watermark",
                      "type" : "String",
                      "default" : "\"60%\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-long_gc",
                      "doc" : "When an Erlang process spends long time to perform garbage collection, a warning level <code>long_gc</code> log is emitted,\nand an MQTT message is published to the system topic <code>$SYS/sysmon/long_gc</code>.",
                      "text" : "long_gc",
                      "type" : "OneOf(String(\"disabled\"),Duration)",
                      "default" : "disabled"
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-long_schedule",
                      "doc" : "When the Erlang VM detect a task scheduled for too long, a warning level 'long_schedule' log is emitted,\nand an MQTT message is published to the system topic <code>$SYS/sysmon/long_schedule</code>.",
                      "text" : "long_schedule",
                      "type" : "OneOf(String(\"disabled\"),Duration)",
                      "default" : "\"240ms\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-large_heap",
                      "doc" : "When the heap memory occupied by a process exceeds the size specified by `large_heap`, the system will write a warning level `large_heap` log, and an MQTT message will be published to the system topic `$SYS/sysmon/large_heap`.",
                      "text" : "large_heap",
                      "type" : "OneOf(String(\"disabled\"),Bytesize)",
                      "default" : "\"32MB\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-busy_dist_port",
                      "doc" : "When the RPC connection used to communicate with other nodes in the cluster is overloaded,\nthere will be a <code>busy_dist_port</code> warning log,\nand an MQTT message is published to system topic <code>$SYS/sysmon/busy_dist_port</code>.",
                      "text" : "busy_dist_port",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-vm-S-sysmon_vm-busy_port",
                      "doc" : "When a port (e.g. TCP socket) is overloaded, there will be a <code>busy_port</code> warning log,\nand an MQTT message is published to the system topic <code>$SYS/sysmon/busy_port</code>.",
                      "text" : "busy_port",
                      "type" : "Boolean",
                      "default" : "true"
                    }
                  ],
                  "doc" : "This part of the configuration is responsible for collecting\n BEAM VM events, such as long garbage collection, traffic congestion in the inter-broker\n communication, etc.",
                  "text" : "sysmon_vm"
                }
              ],
              "hash" : "V-sysmon-S-sysmon-vm",
              "text" : "vm",
              "type" : "Struct(sysmon_vm)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-sysmon-S-sysmon-os-S-sysmon_os",
                  "fields" : [
                    {
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_check_interval",
                      "doc" : "The time interval for the periodic CPU check. Disabled on Windows platform.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "cpu_check_interval",
                      "type" : "Duration",
                      "default" : "\"60s\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_high_watermark",
                      "doc" : "The threshold, as percentage of system CPU load,\n for how much system cpu can be used before the corresponding alarm is raised. Disabled on Windows platform",
                      "text" : "cpu_high_watermark",
                      "type" : "String",
                      "default" : "\"80%\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-cpu_low_watermark",
                      "doc" : "The threshold, as percentage of system CPU load,\n for how much system cpu can be used before the corresponding alarm is cleared. Disabled on Windows platform",
                      "text" : "cpu_low_watermark",
                      "type" : "String",
                      "default" : "\"60%\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-mem_check_interval",
                      "doc" : "The time interval for the periodic memory check. Disabled on Windows platform.",
                      "text" : "mem_check_interval",
                      "type" : "OneOf(String(\"disabled\"),Duration)",
                      "default" : "\"60s\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-sysmem_high_watermark",
                      "doc" : "The threshold, as percentage of system memory,\n for how much system memory can be allocated before the corresponding alarm is raised. Disabled on Windows platform",
                      "text" : "sysmem_high_watermark",
                      "type" : "String",
                      "default" : "\"70%\""
                    },
                    {
                      "hash" : "V-sysmon-S-sysmon-os-S-sysmon_os-procmem_high_watermark",
                      "doc" : "The threshold, as percentage of system memory,\n for how much system memory can be allocated by one Erlang process before\n the corresponding alarm is raised. Disabled on Windows platform.",
                      "text" : "procmem_high_watermark",
                      "type" : "String",
                      "default" : "\"5%\""
                    }
                  ],
                  "doc" : "This part of the configuration is responsible for monitoring\n the host OS health, such as free memory, disk space, CPU load, etc.",
                  "text" : "sysmon_os"
                }
              ],
              "hash" : "V-sysmon-S-sysmon-os",
              "text" : "os",
              "type" : "Struct(sysmon_os)"
            },
            {
              "hash" : "V-sysmon-S-sysmon-mnesia_tm_mailbox_size_alarm_threshold",
              "doc" : "The threshold above which an alarm is raised for the mailbox size of the mnesia transaction manager.  This process handles all transactions in EMQX's internal database mnesia.\n\nThere are several reasons that could give raise to this alarm.  A few things to check for or consider:\n- Lower `max_conn_rate`, so that clients join at a slower pace;\n- Increase CPU / RAM resources for EMQX;\n- Lower retained message rate from the client side;\n- Check if intra-cluster network bandwidth is reaching a maximum.",
              "text" : "mnesia_tm_mailbox_size_alarm_threshold",
              "type" : "Integer(1..+inf)",
              "default" : "500"
            },
            {
              "hash" : "V-sysmon-S-sysmon-broker_pool_mailbox_size_alarm_threshold",
              "doc" : "The threshold above which an alarm is raised for the maximum mailbox size among the broker pool workers.  Broker pool workers handle adding and removing subscriptions, and replication of routing information.\n\nThere are several reasons that could give raise to this alarm.  A few things to check for or consider:\n- Increase CPU / RAM resources for EMQX;\n- Review the subscriptions that clients are doing, for example, try to compact topic filters;\n- Check if intra-cluster network bandwidth is reaching a maximum.",
              "text" : "broker_pool_mailbox_size_alarm_threshold",
              "type" : "Integer(1..+inf)",
              "default" : "500"
            }
          ],
          "doc" : "Features related to system monitoring and introspection.",
          "text" : "sysmon"
        }
      ],
      "hash" : "V-sysmon",
      "text" : "sysmon",
      "type" : "Struct(sysmon)"
    },
    {
      "refs" : [
        {
          "hash" : "T-alarm-S-alarm",
          "fields" : [
            {
              "hash" : "V-alarm-S-alarm-actions",
              "doc" : "The actions triggered when the alarm is activated.<br/>Currently, the following actions are supported: <code>log</code> and <code>publish</code>.\n<code>log</code> is to write the alarm to log (console or file).\n<code>publish</code> is to publish the alarm as an MQTT message to the system topics:\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/activate</code> and\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/deactivate</code>",
              "text" : "actions",
              "type" : "Array(Enum(log,publish))",
              "default" : "[log, publish]"
            },
            {
              "hash" : "V-alarm-S-alarm-size_limit",
              "doc" : "The maximum number of historical alarms that can be stored.\n\nWhen the maximum number is reached, the oldest historical alarms will be deleted to store new historical alarms.",
              "text" : "size_limit",
              "type" : "Integer(1..3000)",
              "default" : "1000"
            },
            {
              "hash" : "V-alarm-S-alarm-validity_period",
              "doc" : "The validity period of historical alarms. Calculated from the time of activation of the historical alarm instead of the time of cancelation.\n\nIf it exists longer than the validity period, the alarm will be deleted.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "validity_period",
              "type" : "Duration",
              "default" : "\"24h\""
            }
          ],
          "doc" : "Settings for the alarms.",
          "text" : "alarm"
        }
      ],
      "hash" : "V-alarm",
      "text" : "alarm",
      "type" : "Struct(alarm)"
    },
    {
      "refs" : [
        {
          "hash" : "T-flapping_detect-S-flapping_detect",
          "fields" : [
            {
              "hash" : "V-flapping_detect-S-flapping_detect-enable",
              "doc" : "Enable flapping connection detection feature.",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-flapping_detect-S-flapping_detect-window_time",
              "doc" : "The time window for flapping detection.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "window_time",
              "type" : "Duration",
              "default" : "\"1m\""
            },
            {
              "hash" : "V-flapping_detect-S-flapping_detect-max_count",
              "doc" : "The maximum number of disconnects allowed for a MQTT Client in `window_time`",
              "text" : "max_count",
              "type" : "Integer(0..+inf)",
              "default" : "15"
            },
            {
              "hash" : "V-flapping_detect-S-flapping_detect-ban_time",
              "doc" : "How long the flapping clientid will be banned.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "ban_time",
              "type" : "Duration",
              "default" : "\"5m\""
            }
          ],
          "doc" : "This config controls the allowed maximum number of `CONNECT` packets received\nfrom the same clientid in a time frame defined by `window_time`.\nAfter the limit is reached, successive `CONNECT` requests are forbidden\n(banned) until the end of the time period defined by `ban_time`.",
          "text" : "flapping_detect"
        }
      ],
      "hash" : "V-flapping_detect",
      "text" : "flapping_detect",
      "type" : "Struct(flapping_detect)"
    },
    {
      "refs" : [
        {
          "hash" : "T-durable_sessions-S-durable_sessions",
          "fields" : [
            {
              "hash" : "V-durable_sessions-S-durable_sessions-enable",
              "doc" : "Use durable storage for client sessions persistence.\nIf enabled, sessions configured to outlive client connections, along with their corresponding messages, will be durably stored and survive broker downtime.\n\n::: warning\nMessages sent to the durable sessions are saved on disc.\nThis inevitably limits the overall throughput of the system.\n:::",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-durable_sessions-S-durable_sessions-batch_size",
              "doc" : "This value affects the flow control for the persistent sessions.\nPersistent session queries the durable message storage in batches.\nThis value specifies size of the batch.\n\nNote: larger batches generally improve the throughput and overall performance of the system, but increase RAM usage per client.",
              "text" : "batch_size",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            },
            {
              "hash" : "V-durable_sessions-S-durable_sessions-idle_poll_interval",
              "doc" : "Expiry interval for poll requests sent by durable sessions to the storage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "idle_poll_interval",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "hash" : "V-durable_sessions-S-durable_sessions-heartbeat_interval",
              "doc" : "Durable sessions back up their state on disc every heartbeat interval.\n\nHeartbeat interval is also taken into account during garbage collection of expired sessions.\nIt is added to the session expiry time as a safety margin when precise time of session termination is not precisely known.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "heartbeat_interval",
              "type" : "Duration",
              "default" : "\"5000ms\""
            },
            {
              "hash" : "V-durable_sessions-S-durable_sessions-session_gc_interval",
              "doc" : "The interval at which session garbage collection is executed for persistent sessions.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "session_gc_interval",
              "type" : "Duration",
              "default" : "\"10m\""
            },
            {
              "hash" : "V-durable_sessions-S-durable_sessions-session_gc_batch_size",
              "doc" : "The size of each batch of expired persistent sessions to be garbage collected per iteration.",
              "text" : "session_gc_batch_size",
              "type" : "Integer(1..+inf)",
              "default" : "100"
            },
            {
              "hash" : "V-durable_sessions-S-durable_sessions-message_retention_period",
              "doc" : "Broker keeps messages sent to the durable sessions for this period of time.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "message_retention_period",
              "type" : "Duration",
              "default" : "\"1d\""
            }
          ],
          "doc" : "Settings related to the durable session feature.",
          "text" : "durable_sessions"
        }
      ],
      "hash" : "V-durable_sessions",
      "text" : "durable_sessions",
      "type" : "Struct(durable_sessions)"
    },
    {
      "hash" : "V-config_backup_interval",
      "doc" : "Interval at which backups to `cluster.hocon` are made.  Even if multiple configuration updates are made withing this interval, only one backup will be made with the current configuration.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
      "text" : "config_backup_interval",
      "type" : "Duration",
      "default" : "\"5m\""
    },
    {
      "refs" : [
        {
          "hash" : "T-connectors-S-connectors",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-rabbitmq-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-server",
                      "doc" : "The RabbitMQ server address that you want to connect to (for example, localhost).",
                      "text" : "server",
                      "type" : "String",
                      "default" : "localhost"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-port",
                      "doc" : "The RabbitMQ server address that you want to connect to (for example, localhost).",
                      "text" : "port",
                      "type" : "Integer(1..65535)",
                      "default" : "5672"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-username",
                      "doc" : "The username used to authenticate with the RabbitMQ server.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-pool_size",
                      "doc" : "The size of the connection pool.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-timeout",
                      "doc" : "The timeout for waiting on the connection to be established.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-virtual_host",
                      "doc" : "The virtual host to use when connecting to the RabbitMQ server.",
                      "text" : "virtual_host",
                      "type" : "String",
                      "default" : "\"/\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-heartbeat",
                      "doc" : "The interval for sending heartbeat messages to the RabbitMQ server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "heartbeat",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Connector resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-rabbitmq-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "The configuration for the RabbitMQ connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-rabbitmq",
              "doc" : "RabbitMQ Connector Config",
              "text" : "rabbitmq",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-mqtt-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-pool_size",
                      "doc" : "Size of the pool of MQTT clients that will publish messages to the remote broker.<br/>\nEach MQTT client will be assigned 'clientid' of the form '${clientid_prefix}:${bridge_name}:egress:${node}:${n}'\nwhere 'n' is the number of a client inside the pool.\n\nThis option does not take effect if `static_clientids` is not empty. When static client IDs is in use, pool size is always derived from the number of assigned IDs for each node.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-mode",
                      "doc" : "Deprecated since v5.1.0 & e5.1.0.",
                      "text" : "mode",
                      "type" : "Enum(cluster_shareload)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-server",
                      "doc" : "The host and port of the remote MQTT broker",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-clientid_prefix",
                      "doc" : "Optional prefix to prepend to the clientid used by egress bridges.\nDoes not apply if `static_clientids` is used.",
                      "text" : "clientid_prefix",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-mqtt-S-config_connector-static_clientids-S-static_clientid_entry",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-static_clientids-S-static_clientid_entry-node",
                              "doc" : "Node name (e.g.: `emqx@10.0.0.1`).",
                              "text" : "node",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-static_clientids-S-static_clientid_entry-ids",
                              "doc" : "Array of static client IDs assigned to this node.",
                              "text" : "ids",
                              "type" : "Array(String)"
                            }
                          ],
                          "doc" : "Entries mapping EMQX node names to static client IDs.\n\nIf any entries are defined, then only EMQX nodes matching those entries will start MQTT clients with the corresponding clientids.",
                          "text" : "static_clientid_entry"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-static_clientids",
                      "doc" : "Entries mapping EMQX node names to static client IDs.\n\nIf any entries are defined, then only EMQX nodes matching those entries will start MQTT clients with the corresponding clientids.",
                      "text" : "static_clientids",
                      "type" : "Array(Struct(static_clientid_entry))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-reconnect_interval",
                      "doc" : "Deprecated since v5.0.16.",
                      "text" : "reconnect_interval",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-proto_ver",
                      "doc" : "The MQTT protocol version",
                      "text" : "proto_ver",
                      "type" : "Enum(v3,v4,v5)",
                      "default" : "v4"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-bridge_mode",
                      "doc" : "If enable bridge mode.\nNOTE: This setting is only for MQTT protocol version older than 5.0, and the remote MQTT\nbroker MUST support this feature.\nIf bridge_mode is set to true, the bridge will indicate to the remote broker that it is a bridge not an ordinary client.\nThis means that loop detection will be more effective and that retained messages will be propagated correctly.",
                      "text" : "bridge_mode",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-username",
                      "doc" : "The username of the MQTT protocol",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-password",
                      "doc" : "The password of the MQTT protocol<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-clean_start",
                      "doc" : "Whether to start a clean session when reconnecting a remote broker for ingress bridge",
                      "text" : "clean_start",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-keepalive",
                      "doc" : "Time interval is a string that contains a number followed by time unit:\n  - `ms` for milliseconds\n  - `s` for seconds\n  - `m` for minutes\n  - `h` for hours\nor combination of whereof: `1h5m0s`",
                      "text" : "keepalive",
                      "type" : "String",
                      "default" : "\"160s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-connect_timeout",
                      "doc" : "Timeout for connecting to the remote broker.  The connection worker process is blocked up to this amount of time when attempting the initial connection.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration(s)",
                      "default" : "\"10s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-retry_interval",
                      "doc" : "Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received.",
                      "text" : "retry_interval",
                      "type" : "String",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-max_inflight",
                      "doc" : "Max inflight (sent, but un-acked) messages of the MQTT protocol",
                      "text" : "max_inflight",
                      "type" : "Integer(0..+inf)",
                      "default" : "32"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mqtt-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "doc" : "Configurations for an MQTT connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-mqtt",
              "doc" : "MQTT Connector Config",
              "text" : "mqtt",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-s3-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-access_key_id",
                      "doc" : "The access key ID of the S3 bucket.",
                      "text" : "access_key_id",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-secret_access_key",
                      "doc" : "The secret access key of the S3 bucket.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "secret_access_key",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-host",
                      "doc" : "The host of the S3 endpoint.",
                      "text" : "host",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-port",
                      "doc" : "The port of the S3 endpoint.",
                      "text" : "port",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-access_method",
                      "doc" : "Method to be used to access the bucket through HTTP API.",
                      "text" : "access_method",
                      "type" : "Enum(path,vhost)",
                      "default" : "path"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ipv6_probe",
                              "doc" : "Whether to probe for IPv6 support.",
                              "text" : "ipv6_probe",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-connect_timeout",
                              "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "connect_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-pool_size",
                              "doc" : "The pool size.",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-enable_pipelining",
                              "doc" : "Deprecated since 5.8.2.",
                              "text" : "enable_pipelining",
                              "type" : "Integer(1..+inf)"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts",
                                  "fields" : [
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacertfile",
                                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                      "text" : "cacertfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacerts",
                                      "doc" : "Deprecated since 5.1.4.",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-certfile",
                                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                      "text" : "certfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-keyfile",
                                      "doc" : "PEM format private key file.",
                                      "text" : "keyfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-verify",
                                      "doc" : "Enable or disable peer verification.",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-reuse_sessions",
                                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-depth",
                                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-password",
                                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                      "text" : "password",
                                      "type" : "Secret"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-versions",
                                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-ciphers",
                                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-secure_renegotiate",
                                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-log_level",
                                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-hibernate_after",
                                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-partial_chain",
                                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                      "text" : "partial_chain",
                                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                      "text" : "verify_peer_ext_key_usage",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-enable",
                                      "doc" : "Enable TLS.",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-middlebox_comp_mode",
                                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                                      "text" : "middlebox_comp_mode",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl-S-ssl_client_opts-server_name_indication",
                                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                                      "text" : "server_name_indication",
                                      "type" : "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "doc" : "Socket options for SSL clients.",
                                  "text" : "ssl_client_opts"
                                }
                              ],
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-ssl",
                              "doc" : "SSL connection settings.",
                              "text" : "ssl",
                              "type" : "Struct(ssl_client_opts)",
                              "default" : "{enable = true}"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-headers",
                              "doc" : "List of HTTP headers.",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-max_retries",
                              "doc" : "Max retry times if error on sending request.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options-S-transport_options-request_timeout",
                              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "doc" : "Options for the HTTP transport layer used by the S3 client",
                          "text" : "transport_options"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-transport_options",
                      "doc" : "Options for the HTTP transport layer used by the S3 client.",
                      "text" : "transport_options",
                      "type" : "Struct(transport_options)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-s3-S-config_connector-resource_opts-S-s3_connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-resource_opts-S-s3_connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-resource_opts-S-s3_connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-resource_opts-S-s3_connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3-S-config_connector-resource_opts-S-s3_connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "s3_connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-s3-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(s3_connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a connector to S3 API compatible storage service.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-s3",
              "doc" : "S3 Connector Config",
              "text" : "s3",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-bootstrap_hosts",
                      "doc" : "A comma separated list of Azure Event Hubs Kafka <code>host[:port]</code> namespace endpoints to bootstrap the client.  Default port number is 9093.",
                      "text" : "bootstrap_hosts",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-connect_timeout",
                      "doc" : "Maximum wait time for TCP connection establishment (including authentication time if enabled).<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-min_metadata_refresh_interval",
                      "doc" : "Minimum time interval the client has to wait before refreshing Azure Event Hubs Kafka broker and topic metadata. Setting too small value may add extra load on Azure Event Hubs.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "min_metadata_refresh_interval",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-metadata_request_timeout",
                      "doc" : "Maximum wait time when fetching metadata from Azure Event Hubs.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "metadata_request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-authentication-S-auth_username_password",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-authentication-S-auth_username_password-password",
                              "doc" : "The Connection String for connecting to Azure Event Hubs.  Should be the \"connection string-primary key\" of a Namespace shared access policy.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Username/password based authentication.",
                          "text" : "auth_username_password"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-authentication",
                      "doc" : "Authentication configs.",
                      "text" : "authentication",
                      "type" : "Struct(auth_username_password)",
                      "default" : "{}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "doc" : "Fine tune the socket send buffer. The default value is tuned for high throughput.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "sndbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "doc" : "Fine tune the socket receive buffer. The default value is tuned for high throughput.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "recbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "doc" : "When set to 'true', TCP buffer is sent as soon as possible. Otherwise, the OS kernel may buffer small TCP packets for a while (40 ms by default).",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "doc" : "Enable TCP keepalive.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX will start sending probes after the connection is idle for 240 seconds, and the probes are sent every 30 seconds until a response is received, if it misses 5 consecutive responses, the connection should be closed.\nDefault: 'none'",
                              "text" : "tcp_keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "doc" : "Extra socket options.",
                          "text" : "socket_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-socket_opts",
                      "doc" : "Extra socket options.",
                      "text" : "socket_opts",
                      "type" : "Struct(socket_opts)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-health_check_topic",
                      "doc" : "Topic name used exclusively for more accurate connector health checks.",
                      "text" : "health_check_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "String(\"true\")",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Server Name Indication (SNI) setting for TLS handshake.<br/>\n- <code>auto</code>: The client will use <code>\"servicebus.windows.net\"</code> as SNI.<br/>\n- <code>disable</code>: If you wish to prevent the client from sending the SNI.<br/>\n- Other string values it will be sent as-is.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"auto\"),String(\"disable\"),String)",
                              "default" : "auto"
                            }
                          ],
                          "doc" : "TLS/SSL options for Azure Event Hubs client.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = true}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-azure_event_hub_producer-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an Azure Event Hubs bridge.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-azure_event_hub_producer",
              "doc" : "Azure Event Hub Connector Config",
              "text" : "azure_event_hub_producer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-bootstrap_hosts",
                      "doc" : "A comma separated list of Kafka <code>host:port</code> endpoints to bootstrap the client.",
                      "text" : "bootstrap_hosts",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-connect_timeout",
                      "doc" : "Maximum wait time for TCP connection establishment (including authentication time if enabled).<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-min_metadata_refresh_interval",
                      "doc" : "Minimum time interval the client has to wait before refreshing Kafka broker and topic metadata. Setting too small value may add extra load on Kafka.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "min_metadata_refresh_interval",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-metadata_request_timeout",
                      "doc" : "Maximum wait time when fetching topic metadata.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "metadata_request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_username_password",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_username_password-mechanism",
                              "doc" : "SASL authentication mechanism.",
                              "text" : "mechanism",
                              "type" : "Enum(plain,scram_sha_256,scram_sha_512)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_username_password-username",
                              "doc" : "SASL authentication username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_username_password-password",
                              "doc" : "SASL authentication password.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Username/password based authentication.",
                          "text" : "auth_username_password"
                        },
                        {
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_gssapi_kerberos",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_principal",
                              "doc" : "SASL GSSAPI authentication Kerberos principal. For example <code>kafka/node1.example.com@EXAMPLE.COM</code>, NOTE: The realm in use has to be configured in /etc/krb5.conf in EMQX nodes.",
                              "text" : "kerberos_principal",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_keytab_file",
                              "doc" : "SASL GSSAPI authentication Kerberos keytab file path. NOTE: This file has to be placed in EMQX nodes, and the EMQX service runner user requires read permission.",
                              "text" : "kerberos_keytab_file",
                              "type" : "String"
                            }
                          ],
                          "doc" : "Use GSSAPI/Kerberos authentication.",
                          "text" : "auth_gssapi_kerberos"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-authentication",
                      "doc" : "Authentication configs.\n- <code>none</code>: No authentication.\n- <code>msk_iam</code>: Use [MSK IAM authentication](https://docs.aws.amazon.com/msk/latest/developerguide/security-iam.html).  Note: This only works when EMQX is running on an EC2 instance.\n- <code>basic auth</code>: Simple username and password authentication.\n- <code>kerberos</code>: Use Kerberos GSSAPI authentication.",
                      "text" : "authentication",
                      "type" : "OneOf(String(\"none\"),String(\"msk_iam\"),Struct(auth_username_password),Struct(auth_gssapi_kerberos))",
                      "default" : "none"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "doc" : "Fine tune the socket send buffer. The default value is tuned for high throughput.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "sndbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "doc" : "Fine tune the socket receive buffer. The default value is tuned for high throughput.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "recbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "doc" : "When set to 'true', TCP buffer is sent as soon as possible. Otherwise, the OS kernel may buffer small TCP packets for a while (40 ms by default).",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "doc" : "Enable TCP keepalive.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX will start sending probes after the connection is idle for 240 seconds, and the probes are sent every 30 seconds until a response is received, if it misses 5 consecutive responses, the connection should be closed.\nDefault: 'none'",
                              "text" : "tcp_keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "doc" : "Extra socket options.",
                          "text" : "socket_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-socket_opts",
                      "doc" : "Extra socket options.",
                      "text" : "socket_opts",
                      "type" : "Struct(socket_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Server Name Indication (SNI) setting for TLS handshake.<br/>\n- <code>auto</code>: Allow the client to automatically determine the appropriate SNI.<br/>\n- <code>disable</code>: If you wish to prevent the client from sending the SNI.<br/>\n- Other string values will be sent as-is.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"auto\"),String(\"disable\"),String)",
                              "default" : "auto"
                            }
                          ],
                          "doc" : "TLS/SSL options for client.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_consumer-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Kafka Consumer Client.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-kafka_consumer",
              "doc" : "Kafka Consumer Connector Config",
              "text" : "kafka_consumer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-hstreamdb-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-url",
                      "doc" : "HStreamDB Server URL. This URL will be used as the gRPC HTTP server address.",
                      "text" : "url",
                      "type" : "String",
                      "default" : "\"http://127.0.0.1:6570\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-grpc_timeout",
                      "doc" : "The timeout for HStreamDB gRPC requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "grpc_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-hstreamdb-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an HStreamDB connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-hstreamdb",
              "doc" : "HStreamDB Connector Config",
              "text" : "hstreamdb",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-kinesis-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-aws_access_key_id",
                      "doc" : "Access Key ID for connecting to Amazon Kinesis.",
                      "text" : "aws_access_key_id",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-aws_secret_access_key",
                      "doc" : "AWS Secret Access Key for connecting to Amazon Kinesis.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "aws_secret_access_key",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-endpoint",
                      "doc" : "The url of Amazon Kinesis endpoint.",
                      "text" : "endpoint",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-max_retries",
                      "doc" : "Max retry times if an error occurs when sending a request.",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)",
                      "default" : "2"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-kinesis-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kinesis-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Kinesis Client.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-kinesis",
              "doc" : "Kinesis Connector Config",
              "text" : "kinesis",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-syskeeper_proxy-S-config",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-listen",
                      "doc" : "The listening address for this Syskeeper proxy server",
                      "text" : "listen",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-acceptors",
                      "doc" : "The number of the acceptors",
                      "text" : "acceptors",
                      "type" : "Integer(0..+inf)",
                      "default" : "16"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-handshake_timeout",
                      "doc" : "The maximum to wait for the handshake when a connection is created<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "handshake_timeout",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-syskeeper_proxy-S-config-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Syskeeper proxy connector",
                  "text" : "config"
                }
              ],
              "hash" : "V-connectors-S-connectors-syskeeper_proxy",
              "doc" : "Syskeeper Proxy Connector Config",
              "text" : "syskeeper_proxy",
              "type" : "Map($name->Struct(config))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-pgsql-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe PostgreSQL default port 5432 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-disable_prepared_statements",
                      "doc" : "Disables the usage of prepared statements in the connections.\nSome endpoints, like PGBouncer or Supabase in Transaction mode, do not\nsupport session features such as prepared statements.  For such connections,\nthis option should be enabled.",
                      "text" : "disable_prepared_statements",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-pgsql-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pgsql-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "The configuration for the PostgreSQL connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-pgsql",
              "doc" : "PostgreSQL Connector Config",
              "text" : "pgsql",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-rocketmq-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-servers",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe RocketMQ default port 9876 is used if `[:Port]` is not specified.",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-namespace",
                      "doc" : "The namespace field MUST be set if you are using the RocketMQ service in\naliyun cloud and also the namespace is enabled,\nor if you have configured a namespace in your RocketMQ server.\nFor RocketMQ in aliyun cloud, the namespace is the instance ID.",
                      "text" : "namespace",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-access_key",
                      "doc" : "RocketMQ server `accessKey`.",
                      "text" : "access_key",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-secret_key",
                      "doc" : "RocketMQ server `secretKey`.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "secret_key",
                      "type" : "Secret",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-security_token",
                      "doc" : "RocketMQ Server Security Token<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "security_token",
                      "type" : "Secret",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-rocketmq-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-rocketmq-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an RocketMQ Client.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-rocketmq",
              "doc" : "RocketMQ Connector Config",
              "text" : "rocketmq",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-mysql-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MySQL default port 3306 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String",
                      "default" : "root"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-mysql-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mysql-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mysql-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a MySQL action.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-mysql",
              "doc" : "MySQL Connector Config",
              "text" : "mysql",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-datalayers-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe Datalayers default port 8361 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String",
                      "default" : "\"127.0.0.1:8361\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer",
                      "default" : "8"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-datalayers-S-config_connector-parameters-S-datalayers_influxdb_v1_parameters",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-parameters-S-datalayers_influxdb_v1_parameters-driver_type",
                              "doc" : "The Driver used to communicate with Datalayers service.",
                              "text" : "driver_type",
                              "type" : "Enum(influxdb_v1)",
                              "default" : "influxdb_v1"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-parameters-S-datalayers_influxdb_v1_parameters-database",
                              "doc" : "Datalayers database.",
                              "text" : "database",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-parameters-S-datalayers_influxdb_v1_parameters-username",
                              "doc" : "Datalayers username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-parameters-S-datalayers_influxdb_v1_parameters-password",
                              "doc" : "Datalayers password.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Set of parameters specific for the given type of this Datalayers connector.",
                          "text" : "datalayers_influxdb_v1_parameters"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-parameters",
                      "doc" : "Set of parameters specific for the given type of this Datalayers connector.",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(datalayers_influxdb_v1_parameters))"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-datalayers-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-datalayers-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Datalayers bridge.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-datalayers",
              "doc" : "Datalayers Connector Config",
              "text" : "datalayers",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-bootstrap_hosts",
                      "doc" : "A comma separated list of Kafka <code>host:port</code> endpoints to bootstrap the client.",
                      "text" : "bootstrap_hosts",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-connect_timeout",
                      "doc" : "Maximum wait time for TCP connection establishment (including authentication time if enabled).<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-min_metadata_refresh_interval",
                      "doc" : "Minimum time interval the client has to wait before refreshing Kafka broker and topic metadata. Setting too small value may add extra load on Kafka.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "min_metadata_refresh_interval",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-metadata_request_timeout",
                      "doc" : "Maximum wait time when fetching topic metadata.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "metadata_request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password-mechanism",
                              "doc" : "SASL authentication mechanism.",
                              "text" : "mechanism",
                              "type" : "Enum(plain,scram_sha_256,scram_sha_512)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password-username",
                              "doc" : "SASL authentication username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_username_password-password",
                              "doc" : "SASL authentication password.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Username/password based authentication.",
                          "text" : "auth_username_password"
                        },
                        {
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_gssapi_kerberos",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_principal",
                              "doc" : "SASL GSSAPI authentication Kerberos principal. For example <code>kafka/node1.example.com@EXAMPLE.COM</code>, NOTE: The realm in use has to be configured in /etc/krb5.conf in EMQX nodes.",
                              "text" : "kerberos_principal",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication-S-auth_gssapi_kerberos-kerberos_keytab_file",
                              "doc" : "SASL GSSAPI authentication Kerberos keytab file path. NOTE: This file has to be placed in EMQX nodes, and the EMQX service runner user requires read permission.",
                              "text" : "kerberos_keytab_file",
                              "type" : "String"
                            }
                          ],
                          "doc" : "Use GSSAPI/Kerberos authentication.",
                          "text" : "auth_gssapi_kerberos"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-authentication",
                      "doc" : "Authentication configs.\n- <code>none</code>: No authentication.\n- <code>msk_iam</code>: Use [MSK IAM authentication](https://docs.aws.amazon.com/msk/latest/developerguide/security-iam.html).  Note: This only works when EMQX is running on an EC2 instance.\n- <code>basic auth</code>: Simple username and password authentication.\n- <code>kerberos</code>: Use Kerberos GSSAPI authentication.",
                      "text" : "authentication",
                      "type" : "OneOf(String(\"none\"),String(\"msk_iam\"),Struct(auth_username_password),Struct(auth_gssapi_kerberos))",
                      "default" : "none"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "doc" : "Fine tune the socket send buffer. The default value is tuned for high throughput.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "sndbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "doc" : "Fine tune the socket receive buffer. The default value is tuned for high throughput.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "recbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "doc" : "When set to 'true', TCP buffer is sent as soon as possible. Otherwise, the OS kernel may buffer small TCP packets for a while (40 ms by default).",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "doc" : "Enable TCP keepalive.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX will start sending probes after the connection is idle for 240 seconds, and the probes are sent every 30 seconds until a response is received, if it misses 5 consecutive responses, the connection should be closed.\nDefault: 'none'",
                              "text" : "tcp_keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "doc" : "Extra socket options.",
                          "text" : "socket_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-socket_opts",
                      "doc" : "Extra socket options.",
                      "text" : "socket_opts",
                      "type" : "Struct(socket_opts)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-health_check_topic",
                      "doc" : "Topic name used exclusively for more accurate connector health checks.",
                      "text" : "health_check_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Server Name Indication (SNI) setting for TLS handshake.<br/>\n- <code>auto</code>: Allow the client to automatically determine the appropriate SNI.<br/>\n- <code>disable</code>: If you wish to prevent the client from sending the SNI.<br/>\n- Other string values will be sent as-is.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"auto\"),String(\"disable\"),String)",
                              "default" : "auto"
                            }
                          ],
                          "doc" : "TLS/SSL options for client.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-kafka_producer-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Kafka Producer Client.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-kafka_producer",
              "doc" : "Kafka Producer Connector Config",
              "text" : "kafka_producer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-http-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-url",
                      "doc" : "The URL of the HTTP action.<br/>\nTemplate with variables is allowed in the path, but variables cannot be used in the scheme, host,\nor port part.<br/>\nFor example, <code> http://localhost:9901/${topic} </code> is allowed, but\n<code> http://${host}:9901/message </code> or <code> http://localhost:${port}/message </code>\nis not allowed.",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-headers",
                      "doc" : "The headers of the HTTP request.<br/>\nTemplate with variables is allowed.",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=5\"}"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-connect_timeout",
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-retry_interval",
                      "doc" : "Deprecated since 5.0.4.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "retry_interval",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-pool_type",
                      "doc" : "The type of the pool. Can be one of `random`, `hash`.",
                      "text" : "pool_type",
                      "type" : "Enum(random,hash)",
                      "default" : "random"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-enable_pipelining",
                      "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-request",
                      "doc" : "Deprecated since 5.3.2.",
                      "text" : "request",
                      "type" : "Map"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-http-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an HTTP action.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-http",
              "doc" : "HTTP Connector Config",
              "text" : "http",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-syskeeper_forwarder-S-config",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-server",
                      "doc" : "The address of the Syskeeper proxy server",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-ack_mode",
                      "doc" : "Specify whether the proxy server should reply with an acknowledgement for the message forwarding, can be:<br>- need_ack <br>- no_ack <br>",
                      "text" : "ack_mode",
                      "type" : "Enum(need_ack,no_ack)",
                      "default" : "no_ack"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-ack_timeout",
                      "doc" : "The maximum time to wait for an acknowledgement from the proxy server<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "ack_timeout",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "16"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-syskeeper_forwarder-S-config-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Syskeeper forwarder connector",
                  "text" : "config"
                }
              ],
              "hash" : "V-connectors-S-connectors-syskeeper_forwarder",
              "doc" : "Syskeeper Connector Config",
              "text" : "syskeeper_forwarder",
              "type" : "Map($name->Struct(config))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-greptimedb-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe GreptimeDB default port 8086 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String",
                      "default" : "\"127.0.0.1:4001\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-dbname",
                      "doc" : "GreptimeDB database.",
                      "text" : "dbname",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-username",
                      "doc" : "GreptimeDB username.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-password",
                      "doc" : "GreptimeDB password.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-greptimedb-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-greptimedb-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an GreptimeDB action.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-greptimedb",
              "doc" : "GreptimeDB Connector Config",
              "text" : "greptimedb",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-iotdb-S-config_restapi",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-connect_timeout",
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-pool_type",
                      "doc" : "The type of the pool. Can be one of `random`, `hash`.",
                      "text" : "pool_type",
                      "type" : "Enum(random,hash)",
                      "default" : "random"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-enable_pipelining",
                      "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-iotdb-S-config_restapi-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-driver",
                      "doc" : "The drivers for IoTDB connector, can be:\n- rest\n- thrift",
                      "text" : "driver",
                      "type" : "Enum(restapi)",
                      "default" : "restapi"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-base_url",
                      "doc" : "The base URL of the external IoTDB service's REST interface.",
                      "text" : "base_url",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-iotdb_version",
                      "doc" : "The version of the IoTDB system to connect to.",
                      "text" : "iotdb_version",
                      "type" : "Enum(v1.3.x,v1.1.x,v1.0.x,v0.13.x)",
                      "default" : "\"v1.3.x\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-iotdb-S-config_restapi-authentication-S-authentication",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-authentication-S-authentication-username",
                              "doc" : "The username as configured at the IoTDB REST/Thrift interface",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-authentication-S-authentication-password",
                              "doc" : "The password as configured at the IoTDB/Thrift REST interface<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Authentication configuration",
                          "text" : "authentication"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_restapi-authentication",
                      "doc" : "Authentication configuration",
                      "text" : "authentication",
                      "type" : "OneOf(Struct(authentication))",
                      "default" : "auth_basic"
                    }
                  ],
                  "doc" : "Configuration for Apache IoTDB bridge.",
                  "text" : "config_restapi"
                },
                {
                  "hash" : "T-connectors-S-connectors-iotdb-S-config_thrift",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-driver",
                      "doc" : "The drivers for IoTDB connector, can be:\n- rest\n- thrift",
                      "text" : "driver",
                      "type" : "Enum(thrift)",
                      "default" : "restapi"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-server",
                      "doc" : "The address of the IoTDB Thrift server (host:port)",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-protocol_version",
                      "doc" : "The version of IoTDB Thrift protocol",
                      "text" : "protocol_version",
                      "type" : "Enum(protocol_v1,protocol_v2,protocol_v3)",
                      "default" : "protocol_v3"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-zoneId",
                      "doc" : "Timezone for IoTDB Thrift session",
                      "text" : "zoneId",
                      "type" : "String",
                      "default" : "\"Asia/Shanghai\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-pool_size",
                      "doc" : "Size for the IoTDB Thrift connection pool",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-connect_timeout",
                      "doc" : "Timeout for connecting to the IoTDB Thrift server<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-recv_timeout",
                      "doc" : "Timeout for IoTDB Thrift server response<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "recv_timeout",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-username",
                      "doc" : "The username as configured at the IoTDB REST/Thrift interface",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-password",
                      "doc" : "The password as configured at the IoTDB/Thrift REST interface<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-iotdb-S-config_thrift-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Connector resource options",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-iotdb-S-config_thrift-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for Apache IoTDB bridge.",
                  "text" : "config_thrift"
                }
              ],
              "hash" : "V-connectors-S-connectors-iotdb",
              "doc" : "IoTDB Connector Config",
              "text" : "iotdb",
              "type" : "Map($name->OneOf(Struct(config_restapi),Struct(config_thrift)))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-pulsar-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-servers",
                      "doc" : "A comma separated list of Pulsar URLs in the form <code>scheme://host[:port]</code>\n for the client to connect to. The supported schemes are <code>pulsar://</code> (default)\n and <code>pulsar+ssl://</code>. The default port is 6650.",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_basic",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_basic-username",
                              "doc" : "Basic authentication username. The `username` part of the `username:password` authentication string.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_basic-password",
                              "doc" : "Basic authentication password. The `password` part of the `username:password` authentication string.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Parameters for basic authentication.",
                          "text" : "auth_basic"
                        },
                        {
                          "hash" : "T-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_token",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-authentication-S-auth_token-jwt",
                              "doc" : "JWT authentication token.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "jwt",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Parameters for token authentication.",
                          "text" : "auth_token"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-authentication",
                      "doc" : "Authentication configs.",
                      "text" : "authentication",
                      "type" : "OneOf(String(\"none\"),Struct(auth_basic),Struct(auth_token))",
                      "default" : "none"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-connect_timeout",
                      "doc" : "Maximum wait time for TCP connection establishment (including authentication time if enabled).<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-pulsar-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Pulsar connector resource options",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-pulsar-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Pulsar connector config",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-pulsar",
              "doc" : "Pulsar Connector Config",
              "text" : "pulsar",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-opents-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-server",
                      "doc" : "The URL of OpenTSDB endpoint.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-summary",
                      "doc" : "Whether to return summary information.",
                      "text" : "summary",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-details",
                      "doc" : "Whether to return detailed information.",
                      "text" : "details",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-opents-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-opents-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-opents-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-opents-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-opents-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-opents-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for OpenTSDB Connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-opents",
              "doc" : "OpenTSDB Connector Config",
              "text" : "opents",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-couchbase-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\n  A host entry has the following form: `Host[:Port]`.<br/>\n  The Couchbase default query service port 8093 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-connect_timeout",
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-pipelining",
                      "doc" : "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
                      "text" : "pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-username",
                      "doc" : "Username for Couchbase service.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-password",
                      "doc" : "Password for Couchbase service.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-couchbase-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-couchbase-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "doc" : "Configuration for a connector to Couchbase service.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-couchbase",
              "doc" : "Couchbase Connector Config",
              "text" : "couchbase",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-doris-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\n    A host entry has the following form: `Host[:Port]`.<br/>\n    The Doris default port 9030 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String",
                      "default" : "root"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl-S-ssl-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "SSL connection settings.",
                          "text" : "ssl"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-doris-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-doris-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-doris-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a connector to Doris tables.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-doris",
              "doc" : "Configuration for a connector to Doris tables.",
              "text" : "doris",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-s3tables-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-access_key_id",
                      "doc" : "The access key ID of the S3Tables bucket.",
                      "text" : "access_key_id",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-secret_access_key",
                      "doc" : "The secret access key of the S3Tables bucket.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "secret_access_key",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3tables_arn",
                      "doc" : "The ARN of the S3Tables bucket to be used.",
                      "text" : "s3tables_arn",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-request_timeout",
                      "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "request_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-access_method",
                              "doc" : "Method to be used to access the bucket through HTTP API.",
                              "text" : "access_method",
                              "type" : "Enum(path,vhost)",
                              "default" : "path"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options",
                                  "fields" : [
                                    {
                                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ipv6_probe",
                                      "doc" : "Whether to probe for IPv6 support.",
                                      "text" : "ipv6_probe",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-connect_timeout",
                                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "connect_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-pool_size",
                                      "doc" : "The pool size.",
                                      "text" : "pool_size",
                                      "type" : "Integer(1..+inf)",
                                      "default" : "8"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-enable_pipelining",
                                      "doc" : "Deprecated since 5.8.2.",
                                      "text" : "enable_pipelining",
                                      "type" : "Integer(1..+inf)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-enable",
                                              "doc" : "Enable TLS.",
                                              "text" : "enable",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-middlebox_comp_mode",
                                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                                              "text" : "middlebox_comp_mode",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl-S-ssl_client_opts-server_name_indication",
                                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                                              "text" : "server_name_indication",
                                              "type" : "OneOf(String(\"disable\"),String)"
                                            }
                                          ],
                                          "doc" : "Socket options for SSL clients.",
                                          "text" : "ssl_client_opts"
                                        }
                                      ],
                                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-ssl",
                                      "doc" : "SSL connection settings.",
                                      "text" : "ssl",
                                      "type" : "Struct(ssl_client_opts)",
                                      "default" : "{enable = true}"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-headers",
                                      "doc" : "List of HTTP headers.",
                                      "text" : "headers",
                                      "type" : "Map"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-max_retries",
                                      "doc" : "Max retry times if error on sending request.",
                                      "text" : "max_retries",
                                      "type" : "Integer(0..+inf)"
                                    },
                                    {
                                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options-S-transport_options-request_timeout",
                                      "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "request_timeout",
                                      "type" : "Duration"
                                    }
                                  ],
                                  "doc" : "Options for the HTTP transport layer used by the S3 client",
                                  "text" : "transport_options"
                                }
                              ],
                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client-S-s3_client_params-transport_options",
                              "doc" : "Options for the HTTP transport layer used by the S3 client.",
                              "text" : "transport_options",
                              "type" : "Struct(transport_options)"
                            }
                          ],
                          "doc" : "S3 connection parameters for reading and writing objects to S3Tables bucket.",
                          "text" : "s3_client_params"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-s3_client",
                      "doc" : "S3 connection parameters for reading and writing objects to S3Tables bucket.",
                      "text" : "s3_client",
                      "type" : "Struct(s3_client_params)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-s3tables-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-s3tables-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a connector to S3Tables tables.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-s3tables",
              "doc" : "S3Tables Connector Config",
              "text" : "s3tables",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-redis-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-server",
                              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                              "text" : "server",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-redis_type",
                              "doc" : "Single mode. Must be set to 'single' when Redis server is running in single mode.",
                              "text" : "redis_type",
                              "type" : "String(\"single\")",
                              "default" : "single"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-pool_size",
                              "doc" : "Size of the connection pool towards the bridge target service.",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-username",
                              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-password",
                              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-database",
                              "doc" : "Redis database ID.",
                              "text" : "database",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_single_connector-auto_reconnect",
                              "doc" : "Deprecated since v5.0.15.",
                              "text" : "auto_reconnect",
                              "type" : "Boolean"
                            }
                          ],
                          "doc" : "Redis connector in sentinel mode",
                          "text" : "redis_single_connector"
                        },
                        {
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-servers",
                              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                              "text" : "servers",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-redis_type",
                              "doc" : "Sentinel mode. Must be set to 'sentinel' when Redis server is running in sentinel mode.",
                              "text" : "redis_type",
                              "type" : "String(\"sentinel\")",
                              "default" : "sentinel"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-sentinel",
                              "doc" : "The cluster name in Redis sentinel mode.",
                              "text" : "sentinel",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-pool_size",
                              "doc" : "Size of the connection pool towards the bridge target service.",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-username",
                              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-password",
                              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-database",
                              "doc" : "Redis database ID.",
                              "text" : "database",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_sentinel_connector-auto_reconnect",
                              "doc" : "Deprecated since v5.0.15.",
                              "text" : "auto_reconnect",
                              "type" : "Boolean"
                            }
                          ],
                          "doc" : "Redis connector in sentinel mode",
                          "text" : "redis_sentinel_connector"
                        },
                        {
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-servers",
                              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Redis default port 6379 is used if `[:Port]` is not specified.",
                              "text" : "servers",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-redis_type",
                              "doc" : "Cluster mode. Must be set to 'cluster' when Redis server is running in clustered mode.",
                              "text" : "redis_type",
                              "type" : "String(\"cluster\")",
                              "default" : "cluster"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-pool_size",
                              "doc" : "Size of the connection pool towards the bridge target service.",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-username",
                              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-password",
                              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters-S-redis_cluster_connector-auto_reconnect",
                              "doc" : "Deprecated since v5.0.15.",
                              "text" : "auto_reconnect",
                              "type" : "Boolean"
                            }
                          ],
                          "doc" : "Redis connector in cluster mode",
                          "text" : "redis_cluster_connector"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-parameters",
                      "doc" : "Set of parameters specific for the given type of this Redis connector, `redis_type` can be one of `single`, `cluster` or `sentinel`.",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(redis_single_connector),Struct(redis_sentinel_connector),Struct(redis_cluster_connector))"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-redis-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "doc" : "Configuration for a Redis action.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-redis",
              "doc" : "Redis Connector Config",
              "text" : "redis",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-tdengine-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe TDengine default port 6041 is used if `[:Port]` is not specified.<br/>\nThis field also supports an HTTPS URLs to connect to the TDengine Cloud. For example: `https://gw.us-west-2.aws.cloud.tdengine.com `",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-token",
                      "doc" : "The token used when connecting to TDengine Cloud. <br/>\nIf this value is provided, it will override the authentication method of Username and Password.<br/>\nDefault is empty.",
                      "text" : "token",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-tdengine-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-tdengine-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for TDengine Connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-tdengine",
              "doc" : "TDengine Connector Config",
              "text" : "tdengine",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-cassandra-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-servers",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port][,Host2:Port]`.<br/>\nThe Cassandra default port 9042 is used if `[:Port]` is not specified.",
                      "text" : "servers",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-keyspace",
                      "doc" : "Keyspace name to connect to.",
                      "text" : "keyspace",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-cassandra-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-cassandra-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Cassandra bridge.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-cassandra",
              "doc" : "Cassandra Connector Config",
              "text" : "cassandra",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-connect_timeout",
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-pipelining",
                      "doc" : "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
                      "text" : "pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-max_retries",
                      "doc" : "Max retry times if an error occurs when sending a request.",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)",
                      "default" : "2"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-request_timeout",
                      "doc" : "Deprecated since e5.0.1.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-service_account_json",
                      "doc" : "JSON containing the GCP Service Account credentials to be used with PubSub.\nWhen a GCP Service Account is created (as described in https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount), you have the option of downloading the credentials in JSON form.  That's the file needed.",
                      "text" : "service_account_json",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a GCP PubSub Consumer Client.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-gcp_pubsub_consumer",
              "doc" : "GCP PubSub Consumer Connector Config",
              "text" : "gcp_pubsub_consumer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-influxdb-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe InfluxDB default port 8086 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String",
                      "default" : "\"127.0.0.1:8086\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1-influxdb_type",
                              "doc" : "InfluxDB's protocol. Support InfluxDB v1.8 and before.",
                              "text" : "influxdb_type",
                              "type" : "String(\"influxdb_api_v1\")",
                              "default" : "influxdb_api_v1"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1-database",
                              "doc" : "InfluxDB database.",
                              "text" : "database",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1-username",
                              "doc" : "InfluxDB username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v1-password",
                              "doc" : "InfluxDB password.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "InfluxDB's protocol. Support InfluxDB v1.8 and before.",
                          "text" : "connector_influxdb_api_v1"
                        },
                        {
                          "hash" : "T-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2-influxdb_type",
                              "doc" : "InfluxDB's protocol. Support InfluxDB v2.0 and after.",
                              "text" : "influxdb_type",
                              "type" : "String(\"influxdb_api_v2\")",
                              "default" : "influxdb_api_v2"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2-bucket",
                              "doc" : "InfluxDB bucket name.",
                              "text" : "bucket",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2-org",
                              "doc" : "Organization name of InfluxDB.",
                              "text" : "org",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters-S-connector_influxdb_api_v2-token",
                              "doc" : "InfluxDB token.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "token",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "InfluxDB's protocol. Support InfluxDB v2.0 and after.",
                          "text" : "connector_influxdb_api_v2"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-parameters",
                      "doc" : "Set of parameters specific for the given type of this InfluxDB connector, `influxdb_type` can be one of `influxdb_api_v1`, `influxdb_api_v1`.",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(connector_influxdb_api_v1),Struct(connector_influxdb_api_v2))"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-influxdb-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-influxdb-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an InfluxDB bridge.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-influxdb",
              "doc" : "InfluxDB Connector Config",
              "text" : "influxdb",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-elasticsearch-S-config",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-connect_timeout",
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-pool_type",
                      "doc" : "The type of the pool. Can be one of `random`, `hash`.",
                      "text" : "pool_type",
                      "type" : "Enum(random,hash)",
                      "default" : "random"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-enable_pipelining",
                      "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                      "text" : "enable_pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe Elasticsearch default port 9200 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String",
                      "default" : "\"127.0.0.1:9200\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-elasticsearch-S-config-authentication-S-auth_basic",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-authentication-S-auth_basic-username",
                              "doc" : "The username as configured at the ElasticSearch REST interface",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-elasticsearch-S-config-authentication-S-auth_basic-password",
                              "doc" : "The password as configured at the ElasticSearch REST interface<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Basic Authentication",
                          "text" : "auth_basic"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-elasticsearch-S-config-authentication",
                      "doc" : "Authentication configuration",
                      "text" : "authentication",
                      "type" : "OneOf(Struct(auth_basic))"
                    }
                  ],
                  "doc" : "Configuration for ElasticSearch bridge.",
                  "text" : "config"
                }
              ],
              "hash" : "V-connectors-S-connectors-elasticsearch",
              "doc" : "ElasticSearch Connector Config",
              "text" : "elasticsearch",
              "type" : "Map($name->Struct(config))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-mongodb-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_single",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_single-mongo_type",
                              "doc" : "Standalone instance. Must be set to 'single' when MongoDB server is running in standalone mode.",
                              "text" : "mongo_type",
                              "type" : "String(\"single\")",
                              "default" : "single"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_single-server",
                              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                              "text" : "server",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_single-w_mode",
                              "doc" : "Write mode.",
                              "text" : "w_mode",
                              "type" : "Enum(unsafe,safe)",
                              "default" : "unsafe"
                            }
                          ],
                          "doc" : "Settings for a single MongoDB instance.",
                          "text" : "connector_single"
                        },
                        {
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_sharded",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_sharded-mongo_type",
                              "doc" : "Sharded cluster. Must be set to 'sharded' when MongoDB server is running in 'sharded' mode.",
                              "text" : "mongo_type",
                              "type" : "String(\"sharded\")",
                              "default" : "sharded"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_sharded-servers",
                              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                              "text" : "servers",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_sharded-w_mode",
                              "doc" : "Write mode.",
                              "text" : "w_mode",
                              "type" : "Enum(unsafe,safe)",
                              "default" : "unsafe"
                            }
                          ],
                          "doc" : "Settings for sharded cluster.",
                          "text" : "connector_sharded"
                        },
                        {
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-mongo_type",
                              "doc" : "Replica set. Must be set to 'rs' when MongoDB server is running in 'replica set' mode.",
                              "text" : "mongo_type",
                              "type" : "String(\"rs\")",
                              "default" : "rs"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-servers",
                              "doc" : "A Node list for Cluster to connect to. The nodes should be separated with commas, such as: `Node[,Node].`\nFor each Node should be: The IPv4 or IPv6 address or the hostname to connect to.\nA host entry has the following form: `Host[:Port]`.\nThe MongoDB default port 27017 is used if `[:Port]` is not specified.",
                              "text" : "servers",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-w_mode",
                              "doc" : "Write mode.",
                              "text" : "w_mode",
                              "type" : "Enum(unsafe,safe)",
                              "default" : "unsafe"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-r_mode",
                              "doc" : "Read mode.",
                              "text" : "r_mode",
                              "type" : "Enum(master,slave_ok)",
                              "default" : "master"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters-S-connector_rs-replica_set_name",
                              "doc" : "Name of the replica set.",
                              "text" : "replica_set_name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "Settings for replica set.",
                          "text" : "connector_rs"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-parameters",
                      "doc" : "Set of parameters specific for the given type of this MongoDB connector, `mongo_type` can be one of `single` (Standalone), `sharded` (Sharded) or `rs` (Replica Set).",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(connector_single),Struct(connector_sharded),Struct(connector_rs))"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-srv_record",
                      "doc" : "Use DNS SRV record.",
                      "text" : "srv_record",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-use_legacy_protocol",
                      "doc" : "Whether to use MongoDB's legacy protocol for communicating with the database.  The default is to attempt to automatically determine if the newer protocol is supported.",
                      "text" : "use_legacy_protocol",
                      "type" : "Enum(auto,true,false)",
                      "default" : "auto"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-auth_source",
                      "doc" : "Database name associated with the user's credentials.",
                      "text" : "auth_source",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-max_overflow",
                              "doc" : "The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.",
                              "text" : "max_overflow",
                              "type" : "Integer(0..+inf)",
                              "default" : "0"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-overflow_ttl",
                              "doc" : "Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "overflow_ttl",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-overflow_check_period",
                              "doc" : "Period for checking if there are more workers than configured (\"overflow\").<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "overflow_check_period",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-local_threshold_ms",
                              "doc" : "The size of the latency window for selecting among multiple suitable MongoDB instances.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "local_threshold_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-connect_timeout_ms",
                              "doc" : "The duration to attempt a connection before timing out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "connect_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-socket_timeout_ms",
                              "doc" : "The duration to attempt to send or to receive on a socket before the attempt times out.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "socket_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-server_selection_timeout_ms",
                              "doc" : "Specifies how long to block for server selection before throwing an exception.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "server_selection_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-wait_queue_timeout_ms",
                              "doc" : "The maximum duration that a worker can wait for a connection to become available.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "wait_queue_timeout_ms",
                              "type" : "Duration"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-heartbeat_frequency_ms",
                              "doc" : "Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "heartbeat_frequency_ms",
                              "type" : "Duration",
                              "default" : "\"200s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology-S-topology-min_heartbeat_frequency_ms",
                              "doc" : "Controls the minimum amount of time to wait between heartbeats.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "min_heartbeat_frequency_ms",
                              "type" : "Duration"
                            }
                          ],
                          "doc" : "Topology of MongoDB.",
                          "text" : "topology"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-topology",
                      "text" : "topology",
                      "type" : "Struct(topology)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-mongodb-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-mongodb-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for MongoDB action",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-mongodb",
              "doc" : "MongoDB Connector Config",
              "text" : "mongodb",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-tablestore-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-storage_model_type",
                      "doc" : "Storage model type. Can be one of `timeseries` or `order`.",
                      "text" : "storage_model_type",
                      "type" : "Enum(timeseries)",
                      "default" : "timeseries"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-endpoint",
                      "doc" : "Endpoint for the Tablestore. e.g. https://myinstance.cn-hangzhou.ots.aliyuncs.com",
                      "text" : "endpoint",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-instance_name",
                      "doc" : "Instance name.",
                      "text" : "instance_name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-access_key_id",
                      "doc" : "Key ID. e.g. NTS**********************<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "access_key_id",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-access_key_secret",
                      "doc" : "Key secret. e.g. 7NR2****************************************<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "access_key_secret",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer",
                      "default" : "8"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-tablestore-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-tablestore-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Tablestore bridge.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-tablestore",
              "doc" : "Tablestore Connector Config",
              "text" : "tablestore",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-matrix-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe PostgreSQL default port 5432 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-disable_prepared_statements",
                      "doc" : "Disables the usage of prepared statements in the connections.\nSome endpoints, like PGBouncer or Supabase in Transaction mode, do not\nsupport session features such as prepared statements.  For such connections,\nthis option should be enabled.",
                      "text" : "disable_prepared_statements",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-matrix-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-matrix-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-matrix-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "The configuration for the PostgreSQL connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-matrix",
              "doc" : "Matrix Connector Config",
              "text" : "matrix",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-snowflake-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-server",
                      "doc" : "The address of Snowflake computing server to connect to.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-account",
                      "doc" : "Account ID for Snowflake.",
                      "text" : "account",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-dsn",
                      "doc" : "Data Source Name (DSN) associated with the installed Snowflake ODBC driver.",
                      "text" : "dsn",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-private_key_path",
                      "doc" : "Full file path to the private key to be used for the ODBC connection.  This path must be the same on all nodes of the cluster.",
                      "text" : "private_key_path",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-private_key_password",
                      "doc" : "Password to decrypt the private key.  Do not set this value if the private key is not encrypted.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "private_key_password",
                      "type" : "Secret"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-snowflake-S-config_connector-proxy-S-proxy_config",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-proxy-S-proxy_config-host",
                              "doc" : "Proxy host address to connect to.",
                              "text" : "host",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-proxy-S-proxy_config-port",
                              "doc" : "Proxy port to use when connecting.",
                              "text" : "port",
                              "type" : "Integer(1..65535)"
                            }
                          ],
                          "doc" : "Proxy configuration.  Only plain HTTP proxies are currently supported (no HTTPS).",
                          "text" : "proxy_config"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-proxy",
                      "doc" : "Proxy configuration.  Only plain HTTP proxies are currently supported (no HTTPS).",
                      "text" : "proxy",
                      "type" : "OneOf(String(\"none\"),Struct(proxy_config))",
                      "default" : "none"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-snowflake-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-snowflake-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "doc" : "Configuration for a connector to Snowflake service.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-snowflake",
              "doc" : "Snowflake Connector Config",
              "text" : "snowflake",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-clickhouse-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-url",
                      "doc" : "The HTTP URL to the Clickhouse server that you want to connect to (for example http://myhostname:8123)",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-connect_timeout",
                      "doc" : "The timeout when connecting to the Clickhouse server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-clickhouse-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-clickhouse-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Clickhouse bridge.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-clickhouse",
              "doc" : "ClickHouse Connector Config",
              "text" : "clickhouse",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-gcp_pubsub_producer-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-connect_timeout",
                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-pool_size",
                      "doc" : "The pool size.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-pipelining",
                      "doc" : "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
                      "text" : "pipelining",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-max_retries",
                      "doc" : "Max retry times if an error occurs when sending a request.",
                      "text" : "max_retries",
                      "type" : "Integer(0..+inf)",
                      "default" : "2"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-max_inactive",
                      "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "max_inactive",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-request_timeout",
                      "doc" : "Deprecated since e5.0.1.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "request_timeout",
                      "type" : "Duration"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-service_account_json",
                      "doc" : "JSON containing the GCP Service Account credentials to be used with PubSub.\nWhen a GCP Service Account is created (as described in https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount), you have the option of downloading the credentials in JSON form.  That's the file needed.",
                      "text" : "service_account_json",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-gcp_pubsub_producer-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a GCP PubSub Producer Client.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-gcp_pubsub_producer",
              "doc" : "GCP PubSub Producer Connector Config",
              "text" : "gcp_pubsub_producer",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-oracle-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>A host entry has the following form: `Host[:Port]`.<br/>The Oracle Database default port 1521 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-sid",
                      "doc" : "Sid for Oracle Database.",
                      "text" : "sid",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-service_name",
                      "doc" : "Service Name for Oracle Database.",
                      "text" : "service_name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-role",
                      "doc" : "Select which role to use to link to the Oracle database.<br/>- <code>normal</code>: Does not use any special roles<br/>- <code>sysdba</code>: System database administrator role with advanced privileges",
                      "text" : "role",
                      "type" : "Enum(normal,sysdba)",
                      "default" : "normal"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-oracle-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-oracle-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-oracle-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-oracle-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-oracle-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-oracle-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an Oracle Client.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-oracle",
              "doc" : "Oracle Connector Config",
              "text" : "oracle",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-timescale-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe PostgreSQL default port 5432 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-disable_prepared_statements",
                      "doc" : "Disables the usage of prepared statements in the connections.\nSome endpoints, like PGBouncer or Supabase in Transaction mode, do not\nsupport session features such as prepared statements.  For such connections,\nthis option should be enabled.",
                      "text" : "disable_prepared_statements",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-ssl",
                      "doc" : "SSL connection settings.",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-timescale-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-timescale-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-timescale-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "The configuration for the PostgreSQL connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-timescale",
              "doc" : "Timescale Connector Config",
              "text" : "timescale",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-disk_log-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-filepath",
                      "doc" : "Base file path to the log file to be written to.  Actual log files will have the format `filepath.N`, where `N` is `1..max_file_number`.  The currently used file can be found by taking the file with the most recent modification date.  Note that the directory containing it must also be writable by the EMQX application user, as it'll also contain extra files for internal use (ending in `.siz` and `.idx`).",
                      "text" : "filepath",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-max_file_size",
                      "doc" : "Maximum size for the currently active log file.  At least one entry is written to each log, so the final file size may exceed this maximum if a single log entry exceeds this value.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                      "text" : "max_file_size",
                      "type" : "Bytesize"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-max_file_number",
                      "doc" : "Maximum number of log files to be used.  Once the maximum number of files is reached and a new rotation is required, the oldest such file is truncated and used as the new current file.",
                      "text" : "max_file_number",
                      "type" : "Integer(1..+inf)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-disk_log-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-disk_log-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Disk Logging connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-disk_log",
              "doc" : "Disk Log Connector Config",
              "text" : "disk_log",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-azure_blob_storage-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-azure_blob_storage-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-azure_blob_storage-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-azure_blob_storage-S-config_connector-account_name",
                      "doc" : "Account name for Azure Blob Storage service.",
                      "text" : "account_name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-azure_blob_storage-S-config_connector-account_key",
                      "doc" : "Account key for Azure Blob Storage service.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "account_key",
                      "type" : "Secret"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-azure_blob_storage-S-config_connector-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-azure_blob_storage-S-config_connector-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_blob_storage-S-config_connector-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_blob_storage-S-config_connector-resource_opts-S-resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-azure_blob_storage-S-config_connector-resource_opts-S-resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-azure_blob_storage-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a connector to Azure Blob Storage service.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-azure_blob_storage",
              "doc" : "Azure Blob Storage Connector Config",
              "text" : "azure_blob_storage",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-dynamo-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-url",
                      "doc" : "The url of DynamoDB endpoint.",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-region",
                      "doc" : "Region of AWS Dynamo",
                      "text" : "region",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-aws_access_key_id",
                      "doc" : "Access Key ID for connecting to DynamoDB.",
                      "text" : "aws_access_key_id",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-aws_secret_access_key",
                      "doc" : "AWS Secret Access Key for connecting to DynamoDB.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "aws_secret_access_key",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-dynamo-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-dynamo-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an DynamoDB connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-dynamo",
              "doc" : "DynamoDB Connector Config",
              "text" : "dynamo",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-sqlserver-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-driver",
                      "doc" : "SQL Server Driver Name",
                      "text" : "driver",
                      "type" : "String",
                      "default" : "\"ms-sql\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-server",
                      "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe SQL Server default port 1433 is used if `[:Port]` is not specified.",
                      "text" : "server",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-database",
                      "doc" : "Database name.",
                      "text" : "database",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-pool_size",
                      "doc" : "Size of the connection pool towards the bridge target service.",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-username",
                      "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                      "text" : "username",
                      "type" : "String",
                      "default" : "sa"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-password",
                      "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "password",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-auto_reconnect",
                      "doc" : "Deprecated since v5.0.15.",
                      "text" : "auto_reconnect",
                      "type" : "Boolean"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-sqlserver-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-sqlserver-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Microsoft SOL Server connector.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-sqlserver",
              "doc" : "Microsoft SQL Server Connector Config",
              "text" : "sqlserver",
              "type" : "Map($name->Struct(config_connector))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector",
                  "fields" : [
                    {
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-bootstrap_hosts",
                      "doc" : "A comma separated list of Confluent Kafka <code>host[:port]</code> namespace endpoints to bootstrap the client.  Default port number is 9092.",
                      "text" : "bootstrap_hosts",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-connect_timeout",
                      "doc" : "Maximum wait time for TCP connection establishment (including authentication time if enabled).<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "connect_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-min_metadata_refresh_interval",
                      "doc" : "Minimum time interval the client has to wait before refreshing Confluent Kafka broker and topic metadata. Setting too small value may add extra load on Confluent.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "min_metadata_refresh_interval",
                      "type" : "Duration",
                      "default" : "\"3s\""
                    },
                    {
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-metadata_request_timeout",
                      "doc" : "Maximum wait time when fetching metadata from Confluent.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "metadata_request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector-authentication-S-auth_username_password",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-authentication-S-auth_username_password-username",
                              "doc" : "Confluent Key.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-authentication-S-auth_username_password-password",
                              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Username/password based authentication.",
                          "text" : "auth_username_password"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-authentication",
                      "doc" : "Authentication configs.",
                      "text" : "authentication",
                      "type" : "Struct(auth_username_password)",
                      "default" : "{}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts-sndbuf",
                              "doc" : "Fine tune the socket send buffer. The default value is tuned for high throughput.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "sndbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts-recbuf",
                              "doc" : "Fine tune the socket receive buffer. The default value is tuned for high throughput.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "recbuf",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts-nodelay",
                              "doc" : "When set to 'true', TCP buffer is sent as soon as possible. Otherwise, the OS kernel may buffer small TCP packets for a while (40 ms by default).",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts-S-socket_opts-tcp_keepalive",
                              "doc" : "Enable TCP keepalive.\nThe value is three comma separated numbers in the format of 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX will start sending probes after the connection is idle for 240 seconds, and the probes are sent every 30 seconds until a response is received, if it misses 5 consecutive responses, the connection should be closed.\nDefault: 'none'",
                              "text" : "tcp_keepalive",
                              "type" : "String",
                              "default" : "none"
                            }
                          ],
                          "doc" : "Extra socket options.",
                          "text" : "socket_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-socket_opts",
                      "doc" : "Extra socket options.",
                      "text" : "socket_opts",
                      "type" : "Struct(socket_opts)"
                    },
                    {
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-health_check_topic",
                      "doc" : "Topic name used exclusively for more accurate connector health checks.",
                      "text" : "health_check_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl-S-ssl_client_opts-server_name_indication",
                              "doc" : "Server Name Indication (SNI) setting for TLS handshake.<br/>\n- <code>auto</code>: The client will use <code>\"servicebus.windows.net\"</code> as SNI.<br/>\n- <code>disable</code>: If you wish to prevent the client from sending the SNI.<br/>\n- Other string values it will be sent as-is.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"auto\"),String(\"disable\"),String)",
                              "default" : "auto"
                            }
                          ],
                          "doc" : "TLS/SSL options for Confluent client.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = true}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts-S-connector_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts-S-connector_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts-S-connector_resource_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "connector_resource_opts"
                        }
                      ],
                      "hash" : "V-connectors-S-connectors-confluent_producer-S-config_connector-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(connector_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Confluent action.",
                  "text" : "config_connector"
                }
              ],
              "hash" : "V-connectors-S-connectors-confluent_producer",
              "doc" : "Confluent Connector Config",
              "text" : "confluent_producer",
              "type" : "Map($name->Struct(config_connector))"
            }
          ],
          "doc" : "Connectors that are used to connect to external systems",
          "text" : "connectors"
        }
      ],
      "hash" : "V-connectors",
      "text" : "connectors",
      "type" : "Struct(connectors)"
    },
    {
      "refs" : [
        {
          "hash" : "T-actions-S-actions",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-wait_for_publish_confirmations",
                              "doc" : "A boolean value that indicates whether to wait for RabbitMQ to confirm message publication when using publisher confirms.",
                              "text" : "wait_for_publish_confirmations",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-publish_confirmation_timeout",
                              "doc" : "The timeout for waiting on the connection to be established.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "publish_confirmation_timeout",
                              "type" : "Duration",
                              "default" : "\"30s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-exchange",
                              "doc" : "The name of the RabbitMQ exchange where the messages will be sent. Supports templates (e.g.: `e-${payload.e}`). Leave blank and configure `routing_key` to the specified Queue to use RabbitMQ's default Exchange.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "exchange",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-routing_key",
                              "doc" : "The routing key used to route messages to the correct queue in the RabbitMQ exchange. Supports templates (e.g.: `k-${payload.r}`).<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "routing_key",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-delivery_mode",
                              "doc" : "The delivery mode for messages published to RabbitMQ. Delivery mode non_persistent (1) is suitable for messages that don't require persistence across RabbitMQ restarts, whereas delivery mode persistent (2) is designed for messages that must survive RabbitMQ restarts.",
                              "text" : "delivery_mode",
                              "type" : "Enum(non_persistent,persistent)",
                              "default" : "non_persistent"
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters-S-action_parameters-payload_template",
                              "doc" : "The template for formatting the payload of the message before sending it to RabbitMQ. Template placeholders, such as ${field1.sub_field}, will be substituted with the respective field's value. When left empty, the entire input message will be used as the payload, formatted as a JSON text. This behavior is equivalent to specifying ${.} as the payload template.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "payload_template",
                              "type" : "String",
                              "default" : "\"\""
                            }
                          ],
                          "doc" : "The action config defines how this bridge send messages to the remote RabbitMQ broker",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-parameters",
                      "doc" : "The action config defines how this bridge send messages to the remote RabbitMQ broker",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rabbitmq-S-publisher_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action configs.",
                  "text" : "publisher_action"
                }
              ],
              "hash" : "V-actions-S-actions-rabbitmq",
              "doc" : "RabbitMQ Action Config",
              "text" : "rabbitmq",
              "type" : "Map($name->Struct(publisher_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-topic",
                              "doc" : "Forward to which topic of the remote broker.<br/>\nTemplate with variables is allowed.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-qos",
                              "doc" : "The QoS of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                              "text" : "qos",
                              "type" : "OneOf(Integer(0..2),String)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-retain",
                              "doc" : "The 'retain' flag of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.",
                              "text" : "retain",
                              "type" : "OneOf(Boolean,String)",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters-S-action_parameters-payload",
                              "doc" : "The payload of the MQTT message to be sent.<br/>\nTemplate with variables is allowed.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "payload",
                              "type" : "String"
                            }
                          ],
                          "doc" : "Action specific configs.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-parameters",
                      "doc" : "Action specific configs.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mqtt-S-mqtt_publisher_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action configs.",
                  "text" : "mqtt_publisher_action"
                }
              ],
              "hash" : "V-actions-S-actions-mqtt",
              "doc" : "MQTT Publisher Action Config",
              "text" : "mqtt",
              "type" : "Map($name->Struct(mqtt_publisher_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-s3-S-s3",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-s3-S-s3-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-mode",
                              "doc" : "Enables time-based aggregation of incoming events and uploading them to the S3 service as a single object.",
                              "text" : "mode",
                              "type" : "String(\"aggregated\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container-S-container_csv",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container-S-container_csv-type",
                                      "doc" : "Records (events) will be aggregated and uploaded as a CSV file.",
                                      "text" : "type",
                                      "type" : "String(\"csv\")"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container-S-container_csv-column_order",
                                      "doc" : "Event fields that will be ordered first as columns in the resulting CSV file.<br/>\nRegardless of this setting, resulting CSV will contain all the fields of aggregated events, but all the columns not explicitly mentioned here will be ordered after the ones listed here in the lexicographical order.",
                                      "text" : "column_order",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Records (events) will be aggregated and uploaded as a CSV file.",
                                  "text" : "container_csv"
                                },
                                {
                                  "hash" : "T-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container-S-container_json_lines",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container-S-container_json_lines-type",
                                      "doc" : "Records (events) will be aggregated and uploaded as a [JSON Lines](https://jsonlines.org/) file.",
                                      "text" : "type",
                                      "type" : "String(\"json_lines\")"
                                    }
                                  ],
                                  "doc" : "Records (events) will be aggregated and uploaded as a [JSON Lines](https://jsonlines.org/) file.",
                                  "text" : "container_json_lines"
                                }
                              ],
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-container",
                              "doc" : "Settings governing the file format of an upload containing aggregated events.",
                              "text" : "container",
                              "type" : "OneOf(Struct(container_csv),Struct(container_json_lines))",
                              "default" : "{type = csv}"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-aggregation-S-s3_aggregation",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-aggregation-S-s3_aggregation-time_interval",
                                      "doc" : "Amount of time events will be aggregated in a single object before uploading.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "time_interval",
                                      "type" : "Duration(s)",
                                      "default" : "\"30m\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-aggregation-S-s3_aggregation-max_records",
                                      "doc" : "Number of records (events) allowed per each aggregated object. Each aggregated upload will contain no more than that number of events, but may contain less.<br/>\nIf event rate is high enough, there obviously may be more than one aggregated upload during the same time interval. These uploads will have different, but consecutive sequence numbers, which will be a part of S3 object key.",
                                      "text" : "max_records",
                                      "type" : "Integer(1..+inf)",
                                      "default" : "\"100000\""
                                    }
                                  ],
                                  "doc" : "Set of parameters governing the aggregation process.",
                                  "text" : "s3_aggregation"
                                }
                              ],
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-aggregation",
                              "doc" : "Set of parameters governing the aggregation process.",
                              "text" : "aggregation",
                              "type" : "Struct(s3_aggregation)"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-bucket",
                              "doc" : "The name of the S3 bucket.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "bucket",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-key",
                              "doc" : "Template for the S3 object key of an aggregated upload.<br/>\nTemplate may contain placeholders for the following variables:\n<ul>\n<li><code>${action}</code>: name of the action (required).</li>\n<li><code>${node}</code>: name of the EMQX node conducting the upload (required).</li>\n<li><code>${datetime.{format}}</code>: date and time when aggregation started, formatted according to the <code>{format}</code> string (required):\n    <ul>\n    <li><code>${datetime.rfc3339utc}</code>: RFC3339-formatted date and time in UTC,</li>\n    <li><code>${datetime.rfc3339}</code>: RFC3339-formatted date and time in local timezone,</li>\n    <li><code>${datetime.unix}</code>: Unix timestamp.</li>\n    </ul>\n</li>\n<li><code>${datetime_until.{format}}</code>: date and time when aggregation ended, with the same formatting options.</li>\n<li><code>${sequence}</code>: sequence number of the aggregated upload within the same time interval (required).</li>\n</ul>\nAll other placeholders are considered invalid. Note that placeholders marked as required will be added as a path suffix to the S3 object key if they are missing from the template.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "key",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-acl",
                              "doc" : "The ACL to use for the uploaded objects.",
                              "text" : "acl",
                              "type" : "Enum(private,public_read,public_read_write,authenticated_read,bucket_owner_read,bucket_owner_full_control)"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-headers",
                              "doc" : "HTTP headers to include in the S3 object upload request.<br/>\nUseful to specify content type, content encoding, etc. of the S3 object.",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-min_part_size",
                              "doc" : "The minimum part size for multipart uploads.<br/>\nUploaded data will be accumulated in memory until this size is reached.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "min_part_size",
                              "type" : "Bytesize",
                              "default" : "\"5mb\""
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_aggregated_upload_parameters-max_part_size",
                              "doc" : "The maximum part size for multipart uploads.<br/>\nS3 uploader won't try to upload parts larger than this size.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_part_size",
                              "type" : "Bytesize",
                              "default" : "\"5gb\""
                            }
                          ],
                          "doc" : "Set of parameters for the aggregated upload action.",
                          "text" : "s3_aggregated_upload_parameters"
                        },
                        {
                          "hash" : "T-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-bucket",
                              "doc" : "The name of the S3 bucket.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "bucket",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-key",
                              "doc" : "Key of the S3 object.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "key",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-acl",
                              "doc" : "The ACL to use for the uploaded objects.",
                              "text" : "acl",
                              "type" : "Enum(private,public_read,public_read_write,authenticated_read,bucket_owner_read,bucket_owner_full_control)"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-headers",
                              "doc" : "HTTP headers to include in the S3 object upload request.<br/>\nUseful to specify content type, content encoding, etc. of the S3 object.",
                              "text" : "headers",
                              "type" : "Map"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-mode",
                              "doc" : "Enables uploading of events to the S3 service as separate objects.",
                              "text" : "mode",
                              "type" : "String(\"direct\")",
                              "default" : "direct"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-parameters-S-s3_direct_upload_parameters-content",
                              "doc" : "Content of the S3 object being uploaded. Supports templates.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "content",
                              "type" : "String",
                              "default" : "\"${.}\""
                            }
                          ],
                          "doc" : "Set of parameters for the upload action. Action supports templates in S3 bucket name, object key and object content.",
                          "text" : "s3_direct_upload_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-s3-S-s3-parameters",
                      "doc" : "Action that takes incoming events and uploads them to the S3 API compatible service.",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(s3_aggregated_upload_parameters),Struct(s3_direct_upload_parameters))"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-s3-S-s3-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-s3-S-s3-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-s3-S-s3-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-s3-S-s3-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"10ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-s3-S-s3-resource_opts-S-s3_upload_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "s3_upload_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-s3-S-s3-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(s3_upload_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action that takes incoming events and uploads them to the S3 API compatible service.",
                  "text" : "s3"
                }
              ],
              "hash" : "V-actions-S-actions-s3",
              "doc" : "S3 Upload Action Config",
              "text" : "s3",
              "type" : "Map($name->Struct(s3))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in Azure Event Hubs.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-topic",
                              "doc" : "Event Hubs name.  Supports templates (e.g.: `t-${payload.t}`).<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "doc" : "Template for rendering message key. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then <code>NULL</code> (but not empty string) is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "key",
                                      "type" : "String",
                                      "default" : "\"${.clientid}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "doc" : "Template to render Azure Event Hubs message value. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then Azure Event Hubs' <code>NULL</code> (but not empty string) is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "value",
                                      "type" : "String",
                                      "default" : "\"${.}\""
                                    }
                                  ],
                                  "doc" : "Template for rendering a message.",
                                  "text" : "kafka_message"
                                }
                              ],
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-message",
                              "doc" : "Template for rendering a message.",
                              "text" : "message",
                              "type" : "Struct(kafka_message)"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-max_linger_time",
                              "doc" : "Maximum duration for a per-partition producer to wait for messages in order to collect a batch to buffer.\nThe default value `0` means no wait. For non-memory buffer mode, it's advised to configure at least `5ms` for less IOPS.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "max_linger_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-max_linger_bytes",
                              "doc" : "Maximum number of bytes for a per-partition producer to wait for messages in order to collect a batch to buffer.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_linger_bytes",
                              "type" : "Bytesize",
                              "default" : "\"10MB\""
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "doc" : "Maximum bytes to collect in an Azure Event Hubs message batch.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"896KB\""
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-partition_strategy",
                              "doc" : "Partition strategy is to tell the producer how to dispatch messages to partitions.\n\n<code>random</code>: Randomly pick a partition for each message.\n<code>key_dispatch</code>: Assigns messages to partitions based on a hash of the message key,\nensuring consistent partition for messages with the same key.",
                              "text" : "partition_strategy",
                              "type" : "Enum(random,key_dispatch)",
                              "default" : "random"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-required_acks",
                              "doc" : "The acknowledgement criteria for the partition leader. It determines the level of confirmation required from partition replicas before sending an acknowledgement back to the producer.\n\n<code>all_isr</code>: Require all in-sync replicas to acknowledge.\n<code>leader_only</code>: Require only the partition-leader's acknowledgement.\n<code>none</code>: No need for Kafka to acknowledge at all.",
                              "text" : "required_acks",
                              "type" : "Enum(all_isr,leader_only)",
                              "default" : "all_isr"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_headers",
                              "doc" : "Provide a placeholder for message headers<br/>\ne.g. <code>${pub_props}</code><br/>\nNote that the value of the placeholder must be either an object:\n<code>{\"foo\": \"bar\"}</code>\nor an array of key-value pairs:\n<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code><br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "kafka_headers",
                              "type" : "String"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "doc" : "Key of the header. Placeholders in format of ${var} are supported.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "kafka_ext_header_key",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "doc" : "Value of the header. Placeholders in format of ${var} are supported.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "kafka_ext_header_value",
                                      "type" : "String"
                                    }
                                  ],
                                  "doc" : "Provide more key-value pairs for message headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending producing.",
                                  "text" : "producer_kafka_ext_headers"
                                }
                              ],
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "doc" : "Please provide more key-value pairs for Azure Event Hubs headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending to Azure Event Hubs.",
                              "text" : "kafka_ext_headers",
                              "type" : "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "doc" : "The encoding mode for headers.\n\n - `none`: Add only strings are added as header values\n - `json`: Encode header values as JSON string",
                              "text" : "kafka_header_value_encode_mode",
                              "type" : "Enum(none,json)",
                              "default" : "none"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "doc" : "The time interval for Azure Event Hubs producer to discover increased number of partitions.\nAfter the number of partitions is increased in Azure Event Hubs, EMQX will start taking the\ndiscovered partitions into account when dispatching messages per <code>partition_strategy</code>.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "partition_count_refresh_interval",
                              "type" : "Duration(s)",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-partitions_limit",
                              "doc" : "Limit the number of partitions to produce data for the given topic.\nThe special value `all_partitions` is to utilize all partitions for the topic.\nSetting this to a value which is greater than the total number of partitions in has no effect.",
                              "text" : "partitions_limit",
                              "type" : "OneOf(String(\"all_partitions\"),Integer(1..+inf))",
                              "default" : "all_partitions"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-max_inflight",
                              "doc" : "The maximum number of message batches that the producer can send to each partition before it must wait for an acknowledgement.\nSetting a higher number can enhance throughput. However, value above 1 may lead to potential message reordering risks.",
                              "text" : "max_inflight",
                              "type" : "Integer(1..+inf)",
                              "default" : "10"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "doc" : "Message buffer mode.\n\n<code>memory</code>: Buffer all messages in memory. The messages will be lost in case of EMQX node restart\n<code>disk</code>: Buffer all messages on disk. The messages on disk are able to survive EMQX node restart.\n<code>hybrid</code>: Buffer message in memory first, when up to certain limit (see <code>segment_bytes</code> config for more information), then start offloading messages to disk, Like <code>memory</code> mode, the messages will be lost in case of EMQX node restart.",
                                      "text" : "mode",
                                      "type" : "Enum(memory,disk,hybrid)",
                                      "default" : "memory"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "doc" : "Number of bytes allowed to buffer for each partition. When this limit is exceeded, older messages will be discarded to make room for new messages to be buffered.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "per_partition_limit",
                                      "type" : "Bytesize",
                                      "default" : "\"256MB\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "doc" : "Applicable when buffer mode is set to <code>disk</code> or <code>hybrid</code>.\nThis setting specifies the size of each buffer file stored on disk.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "segment_bytes",
                                      "type" : "Bytesize",
                                      "default" : "\"10MB\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "doc" : "Applicable when buffer mode is set to <code>memory</code>\nEMQX will drop old buffered messages under high memory pressure. The high memory threshold is defined in config <code>sysmon.os.sysmem_high_watermark</code>. NOTE: This config only works on Linux.",
                                      "text" : "memory_overload_protection",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    }
                                  ],
                                  "doc" : "Configure producer message buffer.\n\nTell Kafka producer how to buffer messages when EMQX has more messages to send than Kafka can keep up, or when Kafka is down.",
                                  "text" : "producer_buffer"
                                }
                              ],
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-buffer",
                              "doc" : "Configure producer message buffer.\n\nTell Azure Event Hubs producer how to buffer messages when EMQX has more messages to send than Azure Event Hubs can keep up, or when Azure Event Hubs is down.",
                              "text" : "buffer",
                              "type" : "Struct(producer_buffer)"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(async,sync)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "doc" : "This parameter defines the timeout limit for synchronous queries. It applies only when the bridge query mode is configured to 'sync'.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "sync_query_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Azure Event Hubs producer configs.",
                          "text" : "producer_kafka_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-parameters",
                      "aliases" : [
                        "kafka"
                      ],
                      "doc" : "Azure Event Hubs producer configs.",
                      "text" : "parameters",
                      "type" : "Struct(producer_kafka_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-azure_event_hub_producer-S-actions-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "doc" : "The configuration for an action.",
                  "text" : "actions"
                }
              ],
              "hash" : "V-actions-S-actions-azure_event_hub_producer",
              "doc" : "Azure Event Hub Actions Config",
              "text" : "azure_event_hub_producer",
              "type" : "Map($name->Struct(actions))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-stream",
                              "doc" : "HStreamDB Stream Name.",
                              "text" : "stream",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-partition_key",
                              "doc" : "HStreamDB Partition Key. Placeholders supported.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "partition_key",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-grpc_flush_timeout",
                              "doc" : "Time interval for flushing gRPC calls to the HStreamDB server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "grpc_flush_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-record_template",
                              "doc" : "The HStream Record template to be forwarded to the HStreamDB. Placeholders supported.<br>\nNOTE: When you use `raw record` template (which means the data is not a valid JSON), you should use `read` or `subscription` in HStream to get the data.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "record_template",
                              "type" : "String",
                              "default" : "\"${payload}\""
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-aggregation_pool_size",
                              "doc" : "The size of the record aggregation pool. A larger aggregation pool size can lead to enhanced parallelization but may also result in reduced efficiency due to smaller batch sizes.",
                              "text" : "aggregation_pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-max_batches",
                              "doc" : "Maximum number of unconfirmed batches in the flush queue.",
                              "text" : "max_batches",
                              "type" : "Integer(1..+inf)",
                              "default" : "500"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-writer_pool_size",
                              "doc" : "The size of the writer pool. A larger pool may increase parallelization and concurrent write operations, potentially boosting throughput. Trade-offs include greater memory consumption and possible resource contention.",
                              "text" : "writer_pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-batch_size",
                              "doc" : "Maximum number of insert data clauses that can be sent in a single request.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters-S-action_parameters-batch_interval",
                              "doc" : "Maximum interval that is allowed between two successive (batch) request.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_interval",
                              "type" : "Duration",
                              "default" : "\"500ms\""
                            }
                          ],
                          "doc" : "Action specific configuration.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-parameters",
                      "doc" : "Action specific configuration.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-hstreamdb-S-hstreamdb_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for HStreamDB action.",
                  "text" : "hstreamdb_action"
                }
              ],
              "hash" : "V-actions-S-actions-hstreamdb",
              "doc" : "HStreamDB Action Config",
              "text" : "hstreamdb",
              "type" : "Map($name->Struct(hstreamdb_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-kinesis-S-kinesis_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-kinesis-S-kinesis_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-parameters-S-action_parameters-payload_template",
                              "doc" : "The template for formatting the outgoing messages.  If undefined, will send all the available context in JSON format.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "payload_template",
                              "type" : "String",
                              "default" : "\"${.}\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-parameters-S-action_parameters-stream_name",
                              "doc" : "The Amazon Kinesis Stream to publish messages to.",
                              "text" : "stream_name",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-parameters-S-action_parameters-partition_key",
                              "doc" : "The Amazon Kinesis Partition Key associated to published message. Placeholders in format of ${var} are supported.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "partition_key",
                              "type" : "String"
                            }
                          ],
                          "doc" : "Action specific configuration.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-parameters",
                      "doc" : "Action specific configuration.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..500)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kinesis-S-kinesis_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for Kinesis Action",
                  "text" : "kinesis_action"
                }
              ],
              "hash" : "V-actions-S-actions-kinesis",
              "doc" : "Kinesis Action Config",
              "text" : "kinesis",
              "type" : "Map($name->Struct(kinesis_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-pgsql-S-pgsql_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-pgsql-S-pgsql_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-parameters-S-action_parameters-sql",
                              "doc" : "SQL Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))\""
                            }
                          ],
                          "doc" : "Configuration Parameters Specific to the PostgreSQL Action",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-parameters",
                      "doc" : "Configuration Parameters Specific to the PostgreSQL Action",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pgsql-S-pgsql_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for PostgreSQL Action",
                  "text" : "pgsql_action"
                }
              ],
              "hash" : "V-actions-S-actions-pgsql",
              "doc" : "PostgreSQL Action Config",
              "text" : "pgsql",
              "type" : "Map($name->Struct(pgsql_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-template",
                              "doc" : "Template, the default value is empty. When this value is empty the whole message will be stored in the RocketMQ.<br>\n            The template can be any valid string with placeholders, example:<br>\n            - ${id}, ${username}, ${clientid}, ${timestamp}<br>\n            - {\"id\" : ${id}, \"username\" : ${username}}<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "template",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-strategy",
                              "doc" : "Producer key dispatch strategy, the default is `roundrobin`, also supports placeholders, such as: `clientid`, `messageid`, `username`.",
                              "text" : "strategy",
                              "type" : "OneOf(String(\"roundrobin\"),String)",
                              "default" : "roundrobin"
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-topic",
                              "doc" : "RocketMQ Topic<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "topic",
                              "type" : "String",
                              "default" : "TopicTest"
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-sync_timeout",
                              "doc" : "Timeout of RocketMQ driver synchronous call.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "sync_timeout",
                              "type" : "Duration",
                              "default" : "\"3s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-refresh_interval",
                              "doc" : "RocketMQ Topic Route Refresh Interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "refresh_interval",
                              "type" : "Duration",
                              "default" : "\"3s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters-S-action_parameters-send_buffer",
                              "doc" : "The socket send buffer size of the RocketMQ driver client.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "send_buffer",
                              "type" : "Bytesize",
                              "default" : "\"1024KB\""
                            }
                          ],
                          "doc" : "Action specific configuration.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-parameters",
                      "doc" : "Action specific configuration.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-rocketmq-S-rocketmq_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for RocketMQ Action",
                  "text" : "rocketmq_action"
                }
              ],
              "hash" : "V-actions-S-actions-rocketmq",
              "doc" : "RocketMQ Action Config",
              "text" : "rocketmq",
              "type" : "Map($name->Struct(rocketmq_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-mysql-S-mysql_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-mysql-S-mysql_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-parameters-S-action_parameters-sql",
                              "doc" : "SQL Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-parameters-S-action_parameters-undefined_vars_as_null",
                              "doc" : "When writing to databases, treat undefined variables as NULL.\nWhen this option is enabled, if undefined variables (like ${var}) are used in templates, they will be replaced with \"NULL\" instead of the string \"undefined\". If this option is not enabled (default), the string \"undefined\" might be inserted.\nThis option should always be `true` if possible; the default value `false` is only to ensure backward compatibility.",
                              "text" : "undefined_vars_as_null",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "doc" : "Additional parameters specific to this action type",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-parameters",
                      "doc" : "Additional parameters specific to this action type",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mysql-S-mysql_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action to interact with a MySQL connector",
                  "text" : "mysql_action"
                }
              ],
              "hash" : "V-actions-S-actions-mysql",
              "doc" : "Action to interact with a MySQL connector",
              "text" : "mysql",
              "type" : "Map($name->Struct(mysql_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-datalayers-S-datalayers_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-datalayers-S-datalayers_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-parameters-S-action_parameters-write_syntax",
                              "doc" : "Conf of InfluxDB line protocol to write data points. It is a text-based format that provides the measurement, tag set, field set, and timestamp of a data point, and placeholder supported.\nSee also [InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) <br/>\nTLDR:<br/>\n```\n<measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]\n```\nPlease note that a placeholder for an integer value must be annotated with a suffix `i`. For example `${payload.int_value}i`.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "write_syntax",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-parameters-S-action_parameters-precision",
                              "doc" : "Datalayers time precision.",
                              "text" : "precision",
                              "type" : "Enum(ns,us,ms,s)",
                              "default" : "ms"
                            }
                          ],
                          "doc" : "Additional parameters specific to this action type",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-parameters",
                      "doc" : "Additional parameters specific to this action type",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-datalayers-S-datalayers_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action to interact with a Datalayers connector",
                  "text" : "datalayers_action"
                }
              ],
              "hash" : "V-actions-S-actions-datalayers",
              "doc" : "Datalayers Action Config",
              "text" : "datalayers",
              "type" : "Map($name->Struct(datalayers_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in Kafka.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-topic",
                              "doc" : "Kafka topic name.  Supports templates (e.g.: `t-${payload.t}`).<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "doc" : "Template for rendering message key. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then <code>NULL</code> (but not empty string) is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "key",
                                      "type" : "String",
                                      "default" : "\"${.clientid}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "doc" : "Template for rendering Kafka message value. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then Kafka's <code>NULL</code> (but not empty string) is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "value",
                                      "type" : "String",
                                      "default" : "\"${.}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message-S-kafka_message-timestamp",
                                      "doc" : "Which timestamp to use. The timestamp is expected to be a millisecond precision Unix epoch which can be in string format, e.g. <code>1661326462115</code> or <code>'1661326462115'</code>. When the desired data field for this template is not found, or if the found data is not a valid integer, the current system timestamp will be used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "timestamp",
                                      "type" : "String",
                                      "default" : "\"${.timestamp}\""
                                    }
                                  ],
                                  "doc" : "Template for rendering a message.",
                                  "text" : "kafka_message"
                                }
                              ],
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-message",
                              "doc" : "Template for rendering a message.",
                              "text" : "message",
                              "type" : "Struct(kafka_message)"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-max_linger_time",
                              "doc" : "Maximum duration for a per-partition producer to wait for messages in order to collect a batch to buffer.\nThe default value `0` means no wait. For non-memory buffer mode, it's advised to configure at least `5ms` for less IOPS.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "max_linger_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-max_linger_bytes",
                              "doc" : "Maximum number of bytes for a per-partition producer to wait for messages in order to collect a batch to buffer.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_linger_bytes",
                              "type" : "Bytesize",
                              "default" : "\"10MB\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "doc" : "Maximum bytes to collect in a Kafka message batch. Most of the Kafka brokers default to a limit of 1 MB batch size. EMQX's default value is less than 1 MB in order to compensate Kafka message encoding overheads (especially when each individual message is very small). When a single message is over the limit, it is still sent (as a single element batch).<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"896KB\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-compression",
                              "doc" : "Specify the method of compression.",
                              "text" : "compression",
                              "type" : "Enum(no_compression,snappy,gzip)",
                              "default" : "no_compression"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-partition_strategy",
                              "doc" : "Partition strategy is to tell the producer how to dispatch messages to partitions.\n\n<code>random</code>: Randomly pick a partition for each message.\n<code>key_dispatch</code>: Assigns messages to partitions based on a hash of the message key,\nensuring consistent partition for messages with the same key.",
                              "text" : "partition_strategy",
                              "type" : "Enum(random,key_dispatch)",
                              "default" : "random"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-required_acks",
                              "doc" : "The acknowledgement criteria for the partition leader. It determines the level of confirmation required from partition replicas before sending an acknowledgement back to the producer.\n\n<code>all_isr</code>: Require all in-sync replicas to acknowledge.\n<code>leader_only</code>: Require only the partition-leader's acknowledgement.\n<code>none</code>: No need for Kafka to acknowledge at all.",
                              "text" : "required_acks",
                              "type" : "Enum(all_isr,leader_only,none)",
                              "default" : "all_isr"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_headers",
                              "doc" : "Provide a placeholder for message headers<br/>\ne.g. <code>${pub_props}</code><br/>\nNote that the value of the placeholder must be either an object:\n<code>{\"foo\": \"bar\"}</code>\nor an array of key-value pairs:\n<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code><br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "kafka_headers",
                              "type" : "String"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "doc" : "Key of the header. Placeholders in format of ${var} are supported.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "kafka_ext_header_key",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "doc" : "Value of the header. Placeholders in format of ${var} are supported.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "kafka_ext_header_value",
                                      "type" : "String"
                                    }
                                  ],
                                  "doc" : "Provide more key-value pairs for message headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending producing.",
                                  "text" : "producer_kafka_ext_headers"
                                }
                              ],
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "doc" : "Provide more key-value pairs for message headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending producing.",
                              "text" : "kafka_ext_headers",
                              "type" : "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "doc" : "The encoding mode for headers.\n\n - `none`: Add only strings are added as header values\n - `json`: Encode header values as JSON string",
                              "text" : "kafka_header_value_encode_mode",
                              "type" : "Enum(none,json)",
                              "default" : "none"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "doc" : "The time interval for Kafka producer to discover increased number of partitions.\nAfter the number of partitions is increased in Kafka, EMQX will start taking the\ndiscovered partitions into account when dispatching messages per <code>partition_strategy</code>.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "partition_count_refresh_interval",
                              "type" : "Duration(s)",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-partitions_limit",
                              "doc" : "Limit the number of partitions to produce data for the given topic.\nThe special value `all_partitions` is to utilize all partitions for the topic.\nSetting this to a value which is greater than the total number of partitions in has no effect.",
                              "text" : "partitions_limit",
                              "type" : "OneOf(String(\"all_partitions\"),Integer(1..+inf))",
                              "default" : "all_partitions"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-max_inflight",
                              "doc" : "The maximum number of message batches that the producer can send to each partition before it must wait for an acknowledgement.\nSetting a higher number can enhance throughput. However, value above 1 may lead to potential message reordering risks.",
                              "text" : "max_inflight",
                              "type" : "Integer(1..+inf)",
                              "default" : "10"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "doc" : "Message buffer mode.\n\n<code>memory</code>: Buffer all messages in memory. The messages will be lost in case of EMQX node restart\n<code>disk</code>: Buffer all messages on disk. The messages on disk are able to survive EMQX node restart.\n<code>hybrid</code>: Buffer message in memory first, when up to certain limit (see <code>segment_bytes</code> config for more information), then start offloading messages to disk, Like <code>memory</code> mode, the messages will be lost in case of EMQX node restart.",
                                      "text" : "mode",
                                      "type" : "Enum(memory,disk,hybrid)",
                                      "default" : "memory"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "doc" : "Number of bytes allowed to buffer for each partition. When this limit is exceeded, older messages will be discarded to make room for new messages to be buffered.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "per_partition_limit",
                                      "type" : "Bytesize",
                                      "default" : "\"256MB\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "doc" : "Applicable when buffer mode is set to <code>disk</code> or <code>hybrid</code>.\nThis setting specifies the size of each buffer file stored on disk.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "segment_bytes",
                                      "type" : "Bytesize",
                                      "default" : "\"10MB\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "doc" : "Applicable when buffer mode is set to <code>memory</code>\nEMQX will drop old buffered messages under high memory pressure. The high memory threshold is defined in config <code>sysmon.os.sysmem_high_watermark</code>. NOTE: This config only works on Linux.",
                                      "text" : "memory_overload_protection",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    }
                                  ],
                                  "doc" : "Configure producer message buffer.\n\nTell Kafka producer how to buffer messages when EMQX has more messages to send than Kafka can keep up, or when Kafka is down.",
                                  "text" : "producer_buffer"
                                }
                              ],
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-buffer",
                              "doc" : "Configure producer message buffer.\n\nTell Kafka producer how to buffer messages when EMQX has more messages to send than Kafka can keep up, or when Kafka is down.",
                              "text" : "buffer",
                              "type" : "Struct(producer_buffer)"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(async,sync)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "doc" : "This parameter defines the timeout limit for synchronous queries. It applies only when the query mode is configured to 'sync'.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "sync_query_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Kafka producer configs.",
                          "text" : "producer_kafka_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-parameters",
                      "aliases" : [
                        "kafka"
                      ],
                      "doc" : "Kafka producer configs.",
                      "text" : "parameters",
                      "type" : "Struct(producer_kafka_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-kafka_producer-S-kafka_producer_action-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Producer Action",
                  "text" : "kafka_producer_action"
                }
              ],
              "hash" : "V-actions-S-actions-kafka_producer",
              "doc" : "Kafka Producer Action Config",
              "text" : "kafka_producer",
              "type" : "Map($name->Struct(kafka_producer_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-http-S-http_action",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-http-S-http_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-http-S-http_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-http-S-http_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-http-S-http_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-http-S-http_action-parameters-S-parameters_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-path",
                              "doc" : "The URL path for this Action.<br/>\nThis path will be appended to the Connector's <code>url</code> configuration to form the full\nURL address.\nTemplate with variables is allowed in this option. For example, <code>/room/${room_no}</code><br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "path",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-method",
                              "doc" : "The method of the HTTP request. All the available methods are: post, put, get, delete.<br/>\nTemplate with variables is allowed.",
                              "text" : "method",
                              "type" : "Enum(post,put,get,delete)",
                              "default" : "post"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-headers",
                              "doc" : "The headers of the HTTP request.<br/>\nTemplate with variables is allowed.",
                              "text" : "headers",
                              "type" : "Map",
                              "default" : "{accept = \"application/json\", cache-control = \"no-cache\", connection = \"keep-alive\", content-type = \"application/json\", keep-alive = \"timeout=5\"}"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-body",
                              "doc" : "The body of the HTTP request.<br/>\nIf not provided, the body will be a JSON object of all the available fields.<br/>\nThere, 'all the available fields' means the context of a MQTT message when\nthis webhook is triggered by receiving a MQTT message (the `local_topic` is set),\nor the context of the event when this webhook is triggered by a rule (i.e. this\nwebhook is used as an action of a rule).<br/>\nTemplate with variables is allowed.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "body",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-max_retries",
                              "doc" : "HTTP request max retry times if failed.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-parameters-S-parameters_opts-request_timeout",
                              "doc" : "Deprecated since v5.0.26.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "request_timeout",
                              "type" : "Duration"
                            }
                          ],
                          "doc" : "The parameters for HTTP action.",
                          "text" : "parameters_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-http-S-http_action-parameters",
                      "doc" : "The parameters for HTTP action.",
                      "text" : "parameters",
                      "type" : "Struct(parameters_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-http-S-http_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-http-S-http_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an HTTP action.",
                  "text" : "http_action"
                }
              ],
              "hash" : "V-actions-S-actions-http",
              "aliases" : [
                "webhook"
              ],
              "doc" : "HTTP Action Config",
              "text" : "http",
              "type" : "Map($name->Struct(http_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config-parameters-S-parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-parameters-S-parameters-target_topic",
                              "doc" : "The topic for the forwarded message<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "target_topic",
                              "type" : "String",
                              "default" : "\"${topic}\""
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-parameters-S-parameters-target_qos",
                              "doc" : "The QoS for the forwarded message. To preserve the original QoS of the forwarded message, the value can be omitted.",
                              "text" : "target_qos",
                              "type" : "Integer(0..2)"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-parameters-S-parameters-template",
                              "doc" : "Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "template",
                              "type" : "String",
                              "default" : "\"${payload}\""
                            }
                          ],
                          "doc" : "Syskeeper action parameters",
                          "text" : "parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-parameters",
                      "doc" : "Syskeeper action parameters",
                      "text" : "parameters",
                      "type" : "Struct(parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-start_after_created",
                              "doc" : "Whether start the resource right after created.",
                              "text" : "start_after_created",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-start_timeout",
                              "doc" : "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "start_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-auto_restart_interval",
                              "doc" : "Deprecated since 5.1.0.",
                              "text" : "auto_restart_interval",
                              "type" : "OneOf(String(\"infinity\"),Duration)"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "infinity"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-enable_queue",
                              "doc" : "Deprecated since v5.0.14.",
                              "text" : "enable_queue",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts-S-creation_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "creation_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-syskeeper_forwarder-S-config-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(creation_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a Syskeeper action.",
                  "text" : "config"
                }
              ],
              "hash" : "V-actions-S-actions-syskeeper_forwarder",
              "doc" : "Syskeeper Forwarder Action Config",
              "text" : "syskeeper_forwarder",
              "type" : "Map($name->Struct(config))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-parameters-S-action_parameters-write_syntax",
                              "doc" : "Conf of GreptimeDB gRPC protocol to write data points. Write syntax is a text-based format that provides the measurement, tag set, field set, and timestamp of a data point, and placeholder supported, which is the same as InfluxDB line protocol.\nSee also [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) and\n[GreptimeDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) <br/>\nTLDR:<br/>\n```\n<measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]\n```\nPlease note that a placeholder for an integer value must be annotated with a suffix `i`. For example `${payload.int_value}i`.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "write_syntax",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-parameters-S-action_parameters-precision",
                              "doc" : "GreptimeDB time precision.",
                              "text" : "precision",
                              "type" : "Enum(ns,us,ms,s)",
                              "default" : "ms"
                            }
                          ],
                          "doc" : "Additional parameters specific to this action type",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-parameters",
                      "doc" : "Additional parameters specific to this action type",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-greptimedb-S-greptimedb_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action to interact with a GreptimeDB connector",
                  "text" : "greptimedb_action"
                }
              ],
              "hash" : "V-actions-S-actions-greptimedb",
              "doc" : "GreptimeDB Action Config",
              "text" : "greptimedb",
              "type" : "Map($name->Struct(greptimedb_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-iotdb-S-action_config",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-is_aligned",
                              "doc" : "Whether to align the timeseries",
                              "text" : "is_aligned",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-device_id",
                              "doc" : "The IoTDB device ID this data should be inserted for.\nIf left empty, the MQTT message payload must contain a `device_id` field,\nor EMQX's rule-engine SQL must produce a `device_id` field.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "device_id",
                              "type" : "String"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-timestamp",
                                      "doc" : "Timestamp. Placeholders in format of ${var} is supported, can be:\n\n- now: use the current time in milliseconds\n- now_ms: same as above\n- now_us: use the current time in microseconds\n- now_ns: use the current time in nanoseconds\n- any integer: use the value directly as the timestamp\n- Placeholder: use the value from the payload as the timestamp",
                                      "text" : "timestamp",
                                      "type" : "OneOf(Enum(now,now_ms,now_ns,now_us),String)",
                                      "default" : "now"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-measurement",
                                      "doc" : "Measurement. Placeholders in format of ${var} is supported<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "measurement",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-data_type",
                                      "doc" : "Data Type, can be:\n\n- text\n- boolean\n- int32\n- int64\n- float\n- double",
                                      "text" : "data_type",
                                      "type" : "Enum(text,boolean,int32,int64,float,double)"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-value",
                                      "doc" : "Value. Placeholders in format of ${var} is supported<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "value",
                                      "type" : "String"
                                    }
                                  ],
                                  "doc" : "IoTDB action parameter data",
                                  "text" : "action_parameters_data"
                                }
                              ],
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-data",
                              "doc" : "IoTDB action parameter data",
                              "text" : "data",
                              "type" : "Array(Struct(action_parameters_data))"
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters-S-action_parameters-max_retries",
                              "doc" : "HTTP request max retry times if failed.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "doc" : "IoTDB action parameters",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-parameters",
                      "doc" : "IoTDB action parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Action resource options",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-iotdb-S-action_config-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for Apache IoTDB bridge.",
                  "text" : "action_config"
                }
              ],
              "hash" : "V-actions-S-actions-iotdb",
              "doc" : "IoTDB Action Config",
              "text" : "iotdb",
              "type" : "Map($name->Struct(action_config))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-pulsar-S-publisher_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-message-S-producer_pulsar_message",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-message-S-producer_pulsar_message-key",
                                      "doc" : "Template to render Pulsar message key.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "key",
                                      "type" : "String",
                                      "default" : "\"${.clientid}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-message-S-producer_pulsar_message-value",
                                      "doc" : "Template to render Pulsar message value.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "value",
                                      "type" : "String",
                                      "default" : "\"${.}\""
                                    }
                                  ],
                                  "doc" : "Template to render a Pulsar message.",
                                  "text" : "producer_pulsar_message"
                                }
                              ],
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-message",
                              "doc" : "Template to render a Pulsar message.",
                              "text" : "message",
                              "type" : "Struct(producer_pulsar_message)"
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-sync_timeout",
                              "doc" : "Maximum wait time for receiving a receipt from Pulsar when publishing synchronously.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "sync_timeout",
                              "type" : "Duration",
                              "default" : "\"3s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-max_inflight",
                              "doc" : "The maximum number of message batches that the producer can send to each partition before it must wait for a receipt.\nSetting a higher number can enhance throughput.",
                              "text" : "max_inflight",
                              "type" : "Integer(1..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-pulsar_topic",
                              "doc" : "Pulsar topic name",
                              "text" : "pulsar_topic",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-batch_size",
                              "doc" : "Maximum number of individual requests to batch in a Pulsar message.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-compression",
                              "doc" : "Compression method.",
                              "text" : "compression",
                              "type" : "Enum(no_compression,snappy,zlib)",
                              "default" : "no_compression"
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-send_buffer",
                              "doc" : "Fine tune the socket send buffer. The default value is tuned for high throughput.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "send_buffer",
                              "type" : "Bytesize",
                              "default" : "\"1MB\""
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-retention_period",
                              "doc" : "The amount of time messages will be buffered while there is no connection to\n the Pulsar broker.  Longer times mean that more memory/disk will be used",
                              "text" : "retention_period",
                              "type" : "OneOf(String(\"infinity\"),Duration)",
                              "default" : "infinity"
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-max_batch_bytes",
                              "doc" : "Maximum bytes to collect in a Pulsar message batch. Most of the Pulsar brokers\n default to a limit of 5 MB batch size. EMQX's default value is less than 5 MB in\n order to compensate Pulsar message encoding overheads (especially when each individual\n message is very small). When a single message is over the limit, it is still\n sent (as a single element batch).<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"900KB\""
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-strategy",
                              "doc" : "Partition strategy is to tell the producer how to dispatch messages to Pulsar partitions.\n\n<code>random</code>: Randomly pick a partition for each message.\n<code>roundrobin</code>: Pick each available producer in turn for each message.\n<code>key_dispatch</code>: Hash Pulsar message key of the first message in a batch\n to a partition number.",
                              "text" : "strategy",
                              "type" : "Enum(random,roundrobin,key_dispatch)",
                              "default" : "random"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer-mode",
                                      "doc" : "Message buffer mode.\n<code>memory</code>: Buffer all messages in memory. The messages will be lost\n in case of EMQX node restart\\n<code>disk</code>: Buffer all messages on disk.\n The messages on disk are able to survive EMQX node restart.\n<code>hybrid</code>: Buffer message in memory first, when up to certain limit\n (see <code>segment_bytes</code> config for more information), then start offloading\n messages to disk, Like <code>memory</code> mode, the messages will be lost in\n case of EMQX node restart.",
                                      "text" : "mode",
                                      "type" : "Enum(memory,disk,hybrid)",
                                      "default" : "memory"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer-per_partition_limit",
                                      "doc" : "Number of bytes allowed to buffer for each Pulsar partition.\n When this limit is exceeded, old messages will be dropped in a trade for credits\n for new messages to be buffered.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "per_partition_limit",
                                      "type" : "Bytesize",
                                      "default" : "\"256MB\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer-segment_bytes",
                                      "doc" : "Applicable when buffer mode is set to <code>disk</code> or <code>hybrid</code>.\nThis value is to specify the size of each on-disk buffer file.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "segment_bytes",
                                      "type" : "Bytesize",
                                      "default" : "\"100MB\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer-S-producer_buffer-memory_overload_protection",
                                      "doc" : "Applicable when buffer mode is set to <code>memory</code>\nEMQX will drop old buffered messages under high memory pressure.\nThe high memory threshold is defined in config <code>sysmon.os.sysmem_high_watermark</code>.\n NOTE: This config only works on Linux.",
                                      "text" : "memory_overload_protection",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "Configure producer message buffer.\"\nTell Pulsar producer how to buffer messages when EMQX has more messages to\"\n send than Pulsar can keep up, or when Pulsar is down.",
                                  "text" : "producer_buffer"
                                }
                              ],
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters-S-action_parameters-buffer",
                              "doc" : "Configure producer message buffer.\"\nTell Pulsar producer how to buffer messages when EMQX has more messages to\"\n send than Pulsar can keep up, or when Pulsar is down.",
                              "text" : "buffer",
                              "type" : "Struct(producer_buffer)"
                            }
                          ],
                          "doc" : "Action specific configs.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-parameters",
                      "doc" : "Action specific configs.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-pulsar-S-publisher_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-pulsar-S-publisher_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Deprecated since 5.8.1.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))"
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-pulsar-S-publisher_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Publish message to Pulsar topic",
                  "text" : "publisher_action"
                }
              ],
              "hash" : "V-actions-S-actions-pulsar",
              "doc" : "Pulsar Action Config",
              "text" : "pulsar",
              "type" : "Map($name->Struct(publisher_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-opents-S-action_config",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-opents-S-action_config-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-opents-S-action_config-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-timestamp",
                                      "doc" : "Timestamp. Placeholders in the format of ${var} are supported<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "timestamp",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-metric",
                                      "doc" : "Metric. Placeholders in the format of ${var} are supported<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "metric",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-tags",
                                      "doc" : "Tags. Only supports with placeholder to extract tags from a variable or a tags map",
                                      "text" : "tags",
                                      "type" : "OneOf(Map,String)"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data-S-action_parameters_data-value",
                                      "doc" : "Value. Placeholders in the format of ${var} are supported",
                                      "text" : "value",
                                      "type" : "OneOf(Integer,Float,String)"
                                    }
                                  ],
                                  "doc" : "OpenTSDB action parameter data",
                                  "text" : "action_parameters_data"
                                }
                              ],
                              "hash" : "V-actions-S-actions-opents-S-action_config-parameters-S-action_parameters-data",
                              "doc" : "OpenTSDB action parameter data",
                              "text" : "data",
                              "type" : "Array(Struct(action_parameters_data))",
                              "default" : "[]"
                            }
                          ],
                          "doc" : "OpenTSDB action parameters",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-opents-S-action_config-parameters",
                      "doc" : "OpenTSDB action parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-opents-S-action_config-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-opents-S-action_config-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-opents-S-action_config-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-opents-S-action_config-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-opents-S-action_config-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for an OpenTSDB bridge.",
                  "text" : "action_config"
                }
              ],
              "hash" : "V-actions-S-actions-opents",
              "doc" : "OpenTSDB Action Config",
              "text" : "opents",
              "type" : "Map($name->Struct(action_config))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-couchbase-S-couchbase",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-couchbase-S-couchbase-parameters-S-parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-parameters-S-parameters-sql",
                              "doc" : "SQL Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-parameters-S-parameters-max_retries",
                              "doc" : "Max retry times if error on sending request.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "3"
                            }
                          ],
                          "doc" : "Set of parameters for the action.",
                          "text" : "parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-parameters",
                      "doc" : "Set of parameters for the action.",
                      "text" : "parameters",
                      "type" : "Struct(parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-couchbase-S-couchbase-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-couchbase-S-couchbase-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-couchbase-S-couchbase-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action that takes incoming events and uploads them to the Couchbase service.",
                  "text" : "couchbase"
                }
              ],
              "hash" : "V-actions-S-actions-couchbase",
              "doc" : "Couchbase Action Config",
              "text" : "couchbase",
              "type" : "Map($name->Struct(couchbase))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-doris-S-doris",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-doris-S-doris-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-doris-S-doris-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-parameters-S-action_parameters-sql",
                              "doc" : "SQL Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))\""
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-parameters-S-action_parameters-undefined_vars_as_null",
                              "doc" : "When writing to databases, treat undefined variables as NULL.\nWhen this option is enabled, if undefined variables (like ${var}) are used in templates, they will be replaced with \"NULL\" instead of the string \"undefined\". If this option is not enabled (default), the string \"undefined\" might be inserted.\nThis option should always be `true` if possible; the default value `false` is only to ensure backward compatibility.",
                              "text" : "undefined_vars_as_null",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "doc" : "Additional parameters specific to this action type",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-doris-S-doris-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-doris-S-doris-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-doris-S-doris-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-doris-S-doris-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-doris-S-doris-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-doris-S-doris-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-doris-S-doris-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action to interact with a Doris Connector.",
                  "text" : "doris"
                }
              ],
              "hash" : "V-actions-S-actions-doris",
              "doc" : "Doris Action Config",
              "text" : "doris",
              "type" : "Map($name->Struct(doris))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-s3tables-S-s3tables",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-aggregation-S-aggregation",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-aggregation-S-aggregation-time_interval",
                                      "doc" : "Amount of time events will be aggregated in a single file on each node before uploading.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "time_interval",
                                      "type" : "Duration(s)",
                                      "default" : "\"120s\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-aggregation-S-aggregation-max_records",
                                      "doc" : "Number of records (events) allowed per each aggregated file. Each aggregated upload will contain no more than that number of events, but may contain less.",
                                      "text" : "max_records",
                                      "type" : "Integer(1..+inf)",
                                      "default" : "100000"
                                    }
                                  ],
                                  "doc" : "Set of parameters governing the aggregation process.",
                                  "text" : "aggregation"
                                }
                              ],
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-aggregation",
                              "doc" : "Set of parameters governing the aggregation process.",
                              "text" : "aggregation",
                              "type" : "Struct(aggregation)"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-namespace",
                              "doc" : "Namespace to be used, with its parts joined by dots.  For example: `my.namespace`.",
                              "text" : "namespace",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-table",
                              "doc" : "Table to be used with this action.",
                              "text" : "table",
                              "type" : "String"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-s3-S-s3_upload",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-s3-S-s3_upload-min_part_size",
                                      "doc" : "The minimum part size for multipart uploads.<br/>\nUploaded data will be accumulated in memory until this size is reached.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "min_part_size",
                                      "type" : "Bytesize",
                                      "default" : "\"5mb\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-s3-S-s3_upload-max_part_size",
                                      "doc" : "The maximum part size for multipart uploads.<br/>\nS3 uploader won't try to upload parts larger than this size.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "max_part_size",
                                      "type" : "Bytesize",
                                      "default" : "\"5gb\""
                                    }
                                  ],
                                  "doc" : "Set of parameters to control S3 uploads.",
                                  "text" : "s3_upload"
                                }
                              ],
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-parameters-S-action_parameters-s3",
                              "doc" : "Set of parameters to control S3 uploads.",
                              "text" : "s3",
                              "type" : "Struct(s3_upload)",
                              "default" : "{max_part_size = \"5gb\", min_part_size = \"5mb\"}"
                            }
                          ],
                          "doc" : "Set of parameters for the action.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "10000"
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-s3tables-S-s3tables-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action that takes incoming events and appends them to S3Tables.",
                  "text" : "s3tables"
                }
              ],
              "hash" : "V-actions-S-actions-s3tables",
              "doc" : "S3Tables Action Config",
              "text" : "s3tables",
              "type" : "Map($name->Struct(s3tables))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-redis-S-redis_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-redis-S-redis_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-redis-S-redis_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-parameters-S-action_parameters-command_template",
                              "doc" : "Redis command template used to export messages. Each list element stands for a command name or its argument.\nFor example, to push payloads in a Redis list by key `msgs`, the elements should be the following:\n`rpush`, `msgs`, `${payload}`.",
                              "text" : "command_template",
                              "type" : "Array(String)"
                            }
                          ],
                          "doc" : "The parameters of the action.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-redis-S-redis_action-parameters",
                      "doc" : "The parameters of the action.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-redis-S-redis_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-redis-S-redis_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-redis-S-redis_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-redis-S-redis_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "This parameter defines the upper limit of the batch count.\nSetting this value to 1 effectively disables batching, as it indicates that only one item will be processed per batch.\nNote on Redis Cluster Mode:\nIn the context of Redis Cluster Mode, it is important to note that batching is not supported.\nConsequently, the batch_size is always set to 1,\nreflecting the mode inherent limitation in handling batch operations.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-redis-S-redis_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action to interact with a Redis connector.",
                  "text" : "redis_action"
                }
              ],
              "hash" : "V-actions-S-actions-redis",
              "doc" : "Redis Action Config",
              "text" : "redis",
              "type" : "Map($name->Struct(redis_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-tdengine-S-action_config",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-tdengine-S-action_config-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-parameters-S-action_parameters-database",
                              "doc" : "Database name.",
                              "text" : "database",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-parameters-S-action_parameters-sql",
                              "doc" : "SQL Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(ts, msgid, mqtt_topic, qos, payload, arrived) values (${ts}, '${id}', '${topic}', ${qos}, '${payload}', ${timestamp})\""
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-parameters-S-action_parameters-undefined_vars_as_null",
                              "doc" : "When writing to databases, treat undefined variables as NULL.\nWhen this option is enabled, if undefined variables (like ${var}) are used in templates, they will be replaced with \"NULL\" instead of the string \"undefined\". If this option is not enabled (default), the string \"undefined\" might be inserted.\nThis option should always be `true` if possible; the default value `false` is only to ensure backward compatibility.",
                              "text" : "undefined_vars_as_null",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "doc" : "TDengine action parameters",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-parameters",
                      "doc" : "TDengine action parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-tdengine-S-action_config-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for a TDengine bridge.",
                  "text" : "action_config"
                }
              ],
              "hash" : "V-actions-S-actions-tdengine",
              "doc" : "TDengine Action Config",
              "text" : "tdengine",
              "type" : "Map($name->Struct(action_config))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-cassandra-S-cassandra_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-cassandra-S-cassandra_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-parameters-S-action_parameters-cql",
                              "doc" : "CQL Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "cql",
                              "type" : "String",
                              "default" : "\"insert into mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic},  ${qos}, ${payload}, ${timestamp})\""
                            }
                          ],
                          "doc" : "Action specific configs.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-parameters",
                      "doc" : "Action specific configs.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-cassandra-S-cassandra_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action configs.",
                  "text" : "cassandra_action"
                }
              ],
              "hash" : "V-actions-S-actions-cassandra",
              "doc" : "Cassandra Action Config",
              "text" : "cassandra",
              "type" : "Map($name->Struct(cassandra_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-influxdb-S-influxdb_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-influxdb-S-influxdb_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-parameters-S-action_parameters-write_syntax",
                              "doc" : "Conf of InfluxDB line protocol to write data points. It is a text-based format that provides the measurement, tag set, field set, and timestamp of a data point, and placeholder supported.\nSee also [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) and\n[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) <br/>\nTLDR:<br/>\n```\n<measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]\n```\nPlease note that a placeholder for an integer value must be annotated with a suffix `i`. For example `${payload.int_value}i`.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "write_syntax",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-parameters-S-action_parameters-precision",
                              "doc" : "InfluxDB time precision.",
                              "text" : "precision",
                              "type" : "Enum(ns,us,ms,s)",
                              "default" : "ms"
                            }
                          ],
                          "doc" : "Additional parameters specific to this action type",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-parameters",
                      "doc" : "Additional parameters specific to this action type",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-influxdb-S-influxdb_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action to interact with a InfluxDB connector",
                  "text" : "influxdb_action"
                }
              ],
              "hash" : "V-actions-S-actions-influxdb",
              "doc" : "InfluxDB Action Config",
              "text" : "influxdb",
              "type" : "Map($name->Struct(influxdb_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-elasticsearch-S-action_config",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-action",
                              "doc" : "Insert a new doc record.",
                              "text" : "action",
                              "type" : "String(\"create\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-index",
                              "doc" : "Name of index, or index alias to perform the action on.\nThis parameter is required.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "index",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-id",
                              "doc" : "The document ID. If no ID is specified, a document ID is automatically generated.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "id",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-doc",
                              "doc" : "JSON document. If undefined, rule engine will use JSON format to serialize all visible inputs, such as clientid, topic, payload etc.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "doc",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-routing",
                              "doc" : "Custom value used to route operations to a specific shard.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "routing",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-require_alias",
                              "doc" : "If true, the request's actions must target an index alias. Defaults to false",
                              "text" : "require_alias",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-overwrite",
                              "doc" : "Set to false If a document with the specified _id already exists(conflict), the operation will fail.",
                              "text" : "overwrite",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_create-max_retries",
                              "doc" : "HTTP request max retry times if failed.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "doc" : "Adds a JSON document to the specified index and makes it searchable.\nIf the target is an index and the document already exists,\nthe request updates the document and increments its version.",
                          "text" : "action_create"
                        },
                        {
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-action",
                              "doc" : "Delete a doc record.",
                              "text" : "action",
                              "type" : "String(\"delete\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-index",
                              "doc" : "Name of index, or index alias to perform the action on.\nThis parameter is required.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "index",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-id",
                              "doc" : "The document ID. If no ID is specified, a document ID is automatically generated.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "id",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-routing",
                              "doc" : "Custom value used to route operations to a specific shard.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "routing",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_delete-max_retries",
                              "doc" : "HTTP request max retry times if failed.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "doc" : "Removes a JSON document from the specified index.",
                          "text" : "action_delete"
                        },
                        {
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-action",
                              "doc" : "Update an existing document or insert a new document if it doesn't exist (when `doc_as_upsert` is `true`).",
                              "text" : "action",
                              "type" : "String(\"update\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-index",
                              "doc" : "Name of index, or index alias to perform the action on.\nThis parameter is required.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "index",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-id",
                              "doc" : "The document ID. If no ID is specified, a document ID is automatically generated.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "id",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-doc",
                              "doc" : "JSON document. If undefined, rule engine will use JSON format to serialize all visible inputs, such as clientid, topic, payload etc.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "doc",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-doc_as_upsert",
                              "doc" : "When set to `true`, the document will be used as the upsert value - meaning it will be inserted if it doesn't exist, or updated if it does.",
                              "text" : "doc_as_upsert",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-routing",
                              "doc" : "Custom value used to route operations to a specific shard.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "routing",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-require_alias",
                              "doc" : "If true, the request's actions must target an index alias. Defaults to false",
                              "text" : "require_alias",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters-S-action_update-max_retries",
                              "doc" : "HTTP request max retry times if failed.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            }
                          ],
                          "doc" : "Updates a document using the specified doc.",
                          "text" : "action_update"
                        }
                      ],
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-parameters",
                      "doc" : "ElasticSearch action parameters",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(action_create),Struct(action_delete),Struct(action_update))"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-elasticsearch-S-action_config-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "ElasticSearch Action Configuration",
                  "text" : "action_config"
                }
              ],
              "hash" : "V-actions-S-actions-elasticsearch",
              "doc" : "Elasticsearch Bridge",
              "text" : "elasticsearch",
              "type" : "Map($action_name->Struct(action_config))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-mongodb-S-mongodb_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-mongodb-S-mongodb_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-parameters-S-action_parameters-collection",
                              "doc" : "The collection where data will be stored into<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "collection",
                              "type" : "String",
                              "default" : "mqtt"
                            },
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-parameters-S-action_parameters-payload_template",
                              "doc" : "The template for formatting the outgoing messages.  If undefined, rule engine will use JSON format to serialize all visible inputs, such as clientid, topic, payload etc.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "payload_template",
                              "type" : "String"
                            }
                          ],
                          "doc" : "Additional parameters specific to this action type",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-parameters",
                      "doc" : "Additional parameters specific to this action type",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-mongodb-S-mongodb_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action to interact with a MongoDB connector",
                  "text" : "mongodb_action"
                }
              ],
              "hash" : "V-actions-S-actions-mongodb",
              "doc" : "MongoDB Action Config",
              "text" : "mongodb",
              "type" : "Map($name->Struct(mongodb_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-tablestore-S-tablestore_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-storage_model_type",
                              "doc" : "Storage model type. Can be one of `timeseries` or `order`.",
                              "text" : "storage_model_type",
                              "type" : "Enum(timeseries)",
                              "default" : "timeseries"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-table_name",
                              "doc" : "Table name. It can either be a static value or a placeholder like `${payload.table_name}`.",
                              "text" : "table_name",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-measurement",
                              "doc" : "The measurement. It can either be a static value or a placeholder like `${payload.measurement}`.",
                              "text" : "measurement",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-tags",
                              "doc" : "Tags. The tag key and tag value can either be static strings or a placeholder like `${payload.tag_key}` and `${payload.tag_value}`.",
                              "text" : "tags",
                              "type" : "Map",
                              "default" : "{}"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-fields-S-tablestore_fields",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-fields-S-tablestore_fields-column",
                                      "doc" : "Column name of the field. It can either be a static value or a placeholder like `${payload.column}`",
                                      "text" : "column",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-fields-S-tablestore_fields-value",
                                      "doc" : "Value of the field. It can either be a static value or a placeholder like `${payload.value}`",
                                      "text" : "value",
                                      "type" : "OneOf(Boolean,Number,String)"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-fields-S-tablestore_fields-isint",
                                      "doc" : "Whether try to write numeric value as `integer`. Defaults to `false`, means that write integers as floats.\nIt can either be a static value or a placeholder like `${payload.is_int}`.",
                                      "text" : "isint",
                                      "type" : "OneOf(Boolean,String)"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-fields-S-tablestore_fields-isbinary",
                                      "doc" : "Whether try to write binary values as `binary` type. Defaults to `false`, means that write binary values as strings.\nIt can either be a static value or a placeholder like `${payload.is_binary}`.",
                                      "text" : "isbinary",
                                      "type" : "OneOf(Boolean,String)"
                                    }
                                  ],
                                  "doc" : "Tablestore fields.",
                                  "text" : "tablestore_fields"
                                }
                              ],
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-fields",
                              "doc" : "Fields. The field column and value can either be static values or a placeholder like `${payload.column_name}` and `${payload.column_value}`.",
                              "text" : "fields",
                              "type" : "Array(Struct(tablestore_fields))"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-data_source",
                              "doc" : "The data source. It can either be a static value or a placeholder like `${payload.data_source}`.",
                              "text" : "data_source",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-timestamp",
                              "doc" : "The timestamp in microsecond of the field.\nIt can either be a static value or a placeholder like `${payload.microsecond_timestamp}`.\nIf not provided or set to `NOW`, the millisecond timestamp when EMQX writes to Tablestore will be used.",
                              "text" : "timestamp",
                              "type" : "OneOf(Integer,String)"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters-S-action_parameters-meta_update_model",
                              "doc" : "The update mode for time-series metadata. Can be one of:\n- MUM_NORMAL: Normal mode. When sending messages in this mode, Tablestore will create the timeseries metadata if not exits.\n- MUM_IGNORE: Do not update metadata. When sending messages in this mode, Tablestore will not try to create the timeseries metadata.\nDefaults to MUM_NORMAL",
                              "text" : "meta_update_model",
                              "type" : "Enum(MUM_IGNORE,MUM_NORMAL)",
                              "default" : "MUM_NORMAL"
                            }
                          ],
                          "doc" : "Additional parameters specific to this action type",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-parameters",
                      "doc" : "Additional parameters specific to this action type",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-tablestore-S-tablestore_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action to interact with a Tablestore connector",
                  "text" : "tablestore_action"
                }
              ],
              "hash" : "V-actions-S-actions-tablestore",
              "doc" : "Tablestore Action Config",
              "text" : "tablestore",
              "type" : "Map($name->Struct(tablestore_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-matrix-S-pgsql_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-matrix-S-pgsql_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-parameters-S-action_parameters-sql",
                              "doc" : "SQL Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))\""
                            }
                          ],
                          "doc" : "Configuration Parameters Specific to the PostgreSQL Action",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-parameters",
                      "doc" : "Configuration Parameters Specific to the PostgreSQL Action",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-matrix-S-pgsql_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for PostgreSQL Action",
                  "text" : "pgsql_action"
                }
              ],
              "hash" : "V-actions-S-actions-matrix",
              "doc" : "Matrix Action Config",
              "text" : "matrix",
              "type" : "Map($name->Struct(pgsql_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-snowflake-S-snowflake",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-mode",
                              "doc" : "Enables time-based aggregation of incoming events and uploading them to the Snowflake as a single object.  This aggregation is done independently by each node in the cluster.",
                              "text" : "mode",
                              "type" : "String(\"aggregated\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-aggregation-S-aggregation",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-aggregation-S-aggregation-container-S-container_csv",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-aggregation-S-aggregation-container-S-container_csv-type",
                                              "doc" : "Records (events) will be aggregated and uploaded as a CSV file.",
                                              "text" : "type",
                                              "type" : "String(\"csv\")"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-aggregation-S-aggregation-container-S-container_csv-column_order",
                                              "doc" : "Event fields that will be ordered first as columns in the resulting CSV file.<br/>\nRegardless of this setting, resulting CSV will contain all the fields of aggregated events, but all the columns not explicitly mentioned here will be ordered after the ones listed here in the lexicographical order.",
                                              "text" : "column_order",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            }
                                          ],
                                          "doc" : "Records (events) will be aggregated and uploaded as a CSV file.",
                                          "text" : "container_csv"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-aggregation-S-aggregation-container",
                                      "doc" : "Settings governing the file format of an upload containing aggregated events.",
                                      "text" : "container",
                                      "type" : "OneOf(Struct(container_csv))",
                                      "default" : "{type = csv}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-aggregation-S-aggregation-time_interval",
                                      "doc" : "Amount of time events will be aggregated in a single file on each node before uploading.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "time_interval",
                                      "type" : "Duration(s)",
                                      "default" : "\"1h\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-aggregation-S-aggregation-max_records",
                                      "doc" : "Number of records (events) allowed per each aggregated file. Each aggregated upload will contain no more than that number of events, but may contain less.<br/>\n  If event rate is high enough, there obviously may be more than one aggregated upload during the same time interval. These uploads will have different, but consecutive sequence numbers, which will be a part of Snowflake staged file name.",
                                      "text" : "max_records",
                                      "type" : "Integer(1..+inf)",
                                      "default" : "1000000"
                                    }
                                  ],
                                  "doc" : "Set of parameters governing the aggregation process.",
                                  "text" : "aggregation"
                                }
                              ],
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-aggregation",
                              "doc" : "Set of parameters governing the aggregation process.",
                              "text" : "aggregation",
                              "type" : "Struct(aggregation)"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-private_key",
                              "doc" : "The private key configured for the Pipe User.  This supports the input formats below:\n- Plain key: Enter the private key contents in PEM format directly as a string value.\n- File Path: Specify the path to a file that contains the private key. Ensure the path starts with <code>file://</code>.  The file path must be the same on all nodes in the cluster.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "private_key",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-private_key_password",
                              "doc" : "Password to decrypt the private key.  Do not set this value if the private key is not encrypted.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "private_key_password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-database",
                              "doc" : "Name of the Database that contains the Snowflake resources.",
                              "text" : "database",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-schema",
                              "doc" : "Name of the Schema that contains the Snowflake resources.",
                              "text" : "schema",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-stage",
                              "doc" : "Name of the Stage that'll be used for loading data files into Snowflake.",
                              "text" : "stage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-pipe",
                              "doc" : "Name of the Pipe that'll be used to ingest data into the table.",
                              "text" : "pipe",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-pipe_user",
                              "doc" : "A username which has a role with permissions over the Pipe to be used.  The minimum permissions are `operate` and `monitor`.",
                              "text" : "pipe_user",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-connect_timeout",
                              "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "connect_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-pipelining",
                              "doc" : "A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request.",
                              "text" : "pipelining",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-pool_size",
                              "doc" : "The pool size.",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-max_retries",
                              "doc" : "Max retry attempts if there's an error when sending an HTTP request.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "3"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-max_inactive",
                              "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "max_inactive",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-proxy-S-proxy_config",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-proxy-S-proxy_config-host",
                                      "doc" : "Proxy host address to connect to.",
                                      "text" : "host",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-proxy-S-proxy_config-port",
                                      "doc" : "Proxy port to use when connecting.",
                                      "text" : "port",
                                      "type" : "Integer(1..65535)"
                                    }
                                  ],
                                  "doc" : "Proxy configuration.  Only plain HTTP proxies are currently supported (no HTTPS).",
                                  "text" : "proxy_config"
                                }
                              ],
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters-S-aggreg_parameters-proxy",
                              "doc" : "Proxy configuration.  Only plain HTTP proxies are currently supported (no HTTPS).",
                              "text" : "proxy",
                              "type" : "OneOf(String(\"none\"),Struct(proxy_config))",
                              "default" : "none"
                            }
                          ],
                          "doc" : "Set of parameters for the action in aggregated mode.",
                          "text" : "aggreg_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-parameters",
                      "doc" : "Set of parameters for the action.",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(aggreg_parameters))"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"10ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-snowflake-S-snowflake-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action that takes incoming events and uploads them to the Snowflake.",
                  "text" : "snowflake"
                }
              ],
              "hash" : "V-actions-S-actions-snowflake",
              "doc" : "Snowflake Action Config",
              "text" : "snowflake",
              "type" : "Map($name->Struct(snowflake))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-parameters-S-action_parameters-sql",
                              "doc" : "The template string can contain ${field} placeholders for message metadata and payload field. Make sure that the inserted values are formatted and escaped correctly. [Prepared Statement](https://docs.emqx.com/en/enterprise/v5.0/data-integration/data-bridges.html#Prepared-Statement) is not supported.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"INSERT INTO messages(data, arrived) VALUES ('${payload}', ${timestamp})\""
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-parameters-S-action_parameters-undefined_vars_as_null",
                              "doc" : "When writing to databases, treat undefined variables as NULL.\nWhen this option is enabled, if undefined variables (like ${var}) are used in templates, they will be replaced with \"NULL\" instead of the string \"undefined\". If this option is not enabled (default), the string \"undefined\" might be inserted.\nThis option should always be `true` if possible; the default value `false` is only to ensure backward compatibility.",
                              "text" : "undefined_vars_as_null",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-parameters-S-action_parameters-batch_value_separator",
                              "doc" : "The default value ',' works for the VALUES format. You can also use other separator if other format is specified. See [INSERT INTO Statement](https://clickhouse.com/docs/en/sql-reference/statements/insert-into).",
                              "text" : "batch_value_separator",
                              "type" : "String",
                              "default" : "\", \""
                            }
                          ],
                          "doc" : "Action specific configs.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-parameters",
                      "doc" : "Action specific configs.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-clickhouse-S-clickhouse_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action configs.",
                  "text" : "clickhouse_action"
                }
              ],
              "hash" : "V-actions-S-actions-clickhouse",
              "doc" : "ClickHouse Action Config",
              "text" : "clickhouse",
              "type" : "Map($name->Struct(clickhouse_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-attributes_template-S-key_value_pair",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-attributes_template-S-key_value_pair-key",
                                      "doc" : "Key<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "key",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-attributes_template-S-key_value_pair-value",
                                      "doc" : "Value<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "value",
                                      "type" : "String"
                                    }
                                  ],
                                  "doc" : "Key-value pair.",
                                  "text" : "key_value_pair"
                                }
                              ],
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-attributes_template",
                              "doc" : "The template for formatting the outgoing message attributes.  Undefined values will be rendered as empty string values.  Empty keys are removed from the attribute map.",
                              "text" : "attributes_template",
                              "type" : "Array(Struct(key_value_pair))",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-ordering_key_template",
                              "doc" : "The template for formatting the outgoing message ordering key.  Undefined values will be rendered as empty string values.  This value will not be added to the message if it's empty.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "ordering_key_template",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-payload_template",
                              "doc" : "The template for formatting the outgoing messages.  If undefined, will send all the available context in JSON format.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "payload_template",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters-S-action_parameters-pubsub_topic",
                              "doc" : "The GCP PubSub topic to publish messages to.",
                              "text" : "pubsub_topic",
                              "type" : "String"
                            }
                          ],
                          "doc" : "Action specific configs.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-parameters",
                      "doc" : "Action configs.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-gcp_pubsub_producer-S-producer_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action configs.",
                  "text" : "producer_action"
                }
              ],
              "hash" : "V-actions-S-actions-gcp_pubsub_producer",
              "doc" : "GCP PubSub Producer Action Config",
              "text" : "gcp_pubsub_producer",
              "type" : "Map($name->Struct(producer_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-oracle-S-oracle_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-oracle-S-oracle_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-parameters-S-action_parameters-sql",
                              "doc" : "SQL Template. The template string can contain placeholders for message metadata and payload field. The placeholders are inserted without any checking and special formatting, so it is important to ensure that the inserted values are formatted and escaped correctly.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msgs(msgid, topic, qos, payload) values (${id}, ${topic}, ${qos}, ${payload})\""
                            }
                          ],
                          "doc" : "Action specific configuration.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-parameters",
                      "doc" : "Action specific configuration.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-oracle-S-oracle_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for Oracle Action",
                  "text" : "oracle_action"
                }
              ],
              "hash" : "V-actions-S-actions-oracle",
              "doc" : "Oracle Action Config",
              "text" : "oracle",
              "type" : "Map($name->Struct(oracle_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-timescale-S-pgsql_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-timescale-S-pgsql_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-parameters-S-action_parameters-sql",
                              "doc" : "SQL Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))\""
                            }
                          ],
                          "doc" : "Configuration Parameters Specific to the PostgreSQL Action",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-parameters",
                      "doc" : "Configuration Parameters Specific to the PostgreSQL Action",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-timescale-S-pgsql_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for PostgreSQL Action",
                  "text" : "pgsql_action"
                }
              ],
              "hash" : "V-actions-S-actions-timescale",
              "doc" : "Timescale Action Config",
              "text" : "timescale",
              "type" : "Map($name->Struct(pgsql_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-disk_log-S-disk_log",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-disk_log-S-disk_log-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-parameters-S-action_parameters-write_mode",
                              "doc" : "Whether to write logs synchronously or asynchronously to disk.",
                              "text" : "write_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "sync"
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-parameters-S-action_parameters-template",
                              "doc" : "Content of the JSON object to be written. Supports templates.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "template",
                              "type" : "String",
                              "default" : "\"${.}\""
                            }
                          ],
                          "doc" : "Set of parameters for the action.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-parameters",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-disk_log-S-disk_log-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action that takes incoming events and appends them to local rotating log files in JSON lines format.",
                  "text" : "disk_log"
                }
              ],
              "hash" : "V-actions-S-actions-disk_log",
              "doc" : "Disk Log Action Config",
              "text" : "disk_log",
              "type" : "Map($name->Struct(disk_log))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-mode",
                              "doc" : "Enables time-based aggregation of incoming events and uploading them to the Azure Blob Storage service as a single object.",
                              "text" : "mode",
                              "type" : "String(\"aggregated\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation-S-aggregation",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation-S-aggregation-container-S-container_csv",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation-S-aggregation-container-S-container_csv-type",
                                              "doc" : "Records (events) will be aggregated and uploaded as a CSV file.",
                                              "text" : "type",
                                              "type" : "String(\"csv\")"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation-S-aggregation-container-S-container_csv-column_order",
                                              "doc" : "Event fields that will be ordered first as columns in the resulting CSV file.<br/>\nRegardless of this setting, resulting CSV will contain all the fields of aggregated events, but all the columns not explicitly mentioned here will be ordered after the ones listed here in the lexicographical order.",
                                              "text" : "column_order",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            }
                                          ],
                                          "doc" : "Records (events) will be aggregated and uploaded as a CSV file.",
                                          "text" : "container_csv"
                                        },
                                        {
                                          "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation-S-aggregation-container-S-container_json_lines",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation-S-aggregation-container-S-container_json_lines-type",
                                              "doc" : "Records (events) will be aggregated and uploaded as a [JSON Lines](https://jsonlines.org/) file.",
                                              "text" : "type",
                                              "type" : "String(\"json_lines\")"
                                            }
                                          ],
                                          "doc" : "Records (events) will be aggregated and uploaded as a [JSON Lines](https://jsonlines.org/) file.",
                                          "text" : "container_json_lines"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation-S-aggregation-container",
                                      "doc" : "Settings governing the file format of an upload containing aggregated events.",
                                      "text" : "container",
                                      "type" : "OneOf(Struct(container_csv),Struct(container_json_lines))",
                                      "default" : "{type = csv}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation-S-aggregation-time_interval",
                                      "doc" : "Amount of time events will be aggregated in a single object before uploading.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "time_interval",
                                      "type" : "Duration(s)",
                                      "default" : "\"1h\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation-S-aggregation-max_records",
                                      "doc" : "Number of records (events) allowed per each aggregated object. Each aggregated upload will contain no more than that number of events, but may contain less.<br/>\n  If event rate is high enough, there obviously may be more than one aggregated upload during the same time interval. These uploads will have different, but consecutive sequence numbers, which will be a part of Azure Blob Storage blob name.",
                                      "text" : "max_records",
                                      "type" : "Integer(1..+inf)",
                                      "default" : "1000000"
                                    }
                                  ],
                                  "doc" : "Set of parameters governing the aggregation process.",
                                  "text" : "aggregation"
                                }
                              ],
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-aggregation",
                              "doc" : "Set of parameters governing the aggregation process.",
                              "text" : "aggregation",
                              "type" : "Struct(aggregation)"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-container",
                              "doc" : "The Azure Blob Storage container name. Does not support templates.",
                              "text" : "container",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-aggreg_parameters-blob",
                              "doc" : "Template for the Azure Blob Storage blob name of an aggregated upload.<br/>\n  Template may contain placeholders for the following variables:\n  <ul>\n  <li><code>${action}</code>: name of the action (required).</li>\n  <li><code>${node}</code>: name of the EMQX node conducting the upload (required).</li>\n  <li><code>${datetime.{format}}</code>: date and time when aggregation started, formatted according to the <code>{format}</code> string (required):\n      <ul>\n      <li><code>${datetime.rfc3339utc}</code>: RFC3339-formatted date and time in UTC,</li>\n      <li><code>${datetime.rfc3339}</code>: RFC3339-formatted date and time in local timezone,</li>\n      <li><code>${datetime.unix}</code>: Unix timestamp.</li>\n      </ul>\n  </li>\n  <li><code>${datetime_until.{format}}</code>: date and time when aggregation ended, with the same formatting options.</li>\n  <li><code>${sequence}</code>: sequence number of the aggregated upload within the same time interval (required).</li>\n  </ul>\n  All other placeholders are considered invalid. Note that placeholders marked as required will be added as a path suffix to the Azure Blob Storage blob name if they are missing from the template.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "blob",
                              "type" : "String"
                            }
                          ],
                          "doc" : "Set of parameters for the action in aggregated mode.",
                          "text" : "aggreg_parameters"
                        },
                        {
                          "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-direct_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-direct_parameters-mode",
                              "doc" : "Enables uploading of events to the Azure Blob Storage service as separate objects.",
                              "text" : "mode",
                              "type" : "String(\"direct\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-direct_parameters-container",
                              "doc" : "The name of the Azure Blob Storage container name.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "container",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-direct_parameters-blob",
                              "doc" : "The name of the Azure Blob Storage blob name.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "blob",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters-S-direct_parameters-content",
                              "doc" : "Content of the Azure Blob Storage blob being uploaded. Supports templates.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "content",
                              "type" : "String",
                              "default" : "\"${.}\""
                            }
                          ],
                          "doc" : "Set of parameters for the upload action. Action supports templates in Azure Blob Storage container name, blob name and blob content.",
                          "text" : "direct_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-parameters",
                      "doc" : "Set of parameters for the action.",
                      "text" : "parameters",
                      "type" : "OneOf(Struct(aggreg_parameters),Struct(direct_parameters))"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"10ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-azure_blob_storage-S-azure_blob_storage-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Action that takes incoming events and uploads them to the Azure Blob Storage service.",
                  "text" : "azure_blob_storage"
                }
              ],
              "hash" : "V-actions-S-actions-azure_blob_storage",
              "doc" : "Azure Blob Storage Action Config",
              "text" : "azure_blob_storage",
              "type" : "Map($name->Struct(azure_blob_storage))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-dynamo-S-dynamo_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters-template",
                              "doc" : "Template, the default value is empty. When this value is empty the whole message will be stored in the database.<br>\nThe template can be any valid JSON with placeholders and make sure all keys for table are here, example:<br>\n  <code>{\"id\" : \"${id}\", \"clientid\" : \"${clientid}\", \"data\" : \"${payload.data}\"}</code><br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "template",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters-hash_key",
                              "doc" : "DynamoDB Hash Key",
                              "text" : "hash_key",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters-range_key",
                              "doc" : "DynamoDB Range Key",
                              "text" : "range_key",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters-table",
                              "doc" : "DynamoDB Table.",
                              "text" : "table",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters-S-action_parameters-undefined_vars_as_null",
                              "doc" : "When writing to databases, treat undefined variables as NULL.\nWhen this option is enabled, if undefined variables (like ${var}) are used in templates, they will be replaced with \"NULL\" instead of the string \"undefined\". If this option is not enabled (default), the string \"undefined\" might be inserted.\nThis option should always be `true` if possible; the default value `false` is only to ensure backward compatibility.",
                              "text" : "undefined_vars_as_null",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "doc" : "Action specific configuration.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-parameters",
                      "doc" : "Action specific configuration.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-dynamo-S-dynamo_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for DynamoDB action.",
                  "text" : "dynamo_action"
                }
              ],
              "hash" : "V-actions-S-actions-dynamo",
              "doc" : "DynamoDB Action Config",
              "text" : "dynamo",
              "type" : "Map($name->Struct(dynamo_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in the remote system.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action-parameters-S-action_parameters",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-parameters-S-action_parameters-sql",
                              "doc" : "SQL Template<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "sql",
                              "type" : "String",
                              "default" : "\"insert into t_mqtt_msg(msgid, topic, qos, payload) values ( ${id}, ${topic}, ${qos}, ${payload} )\""
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-parameters-S-action_parameters-undefined_vars_as_null",
                              "doc" : "When writing to databases, treat undefined variables as NULL.\nWhen this option is enabled, if undefined variables (like ${var}) are used in templates, they will be replaced with \"NULL\" instead of the string \"undefined\". If this option is not enabled (default), the string \"undefined\" might be inserted.\nThis option should always be `true` if possible; the default value `false` is only to ensure backward compatibility.",
                              "text" : "undefined_vars_as_null",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "doc" : "Action specific configuration.",
                          "text" : "action_parameters"
                        }
                      ],
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-parameters",
                      "doc" : "Action specific configuration.",
                      "text" : "parameters",
                      "type" : "Struct(action_parameters)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-worker_pool_size",
                              "doc" : "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
                              "text" : "worker_pool_size",
                              "type" : "Integer(1..1024)",
                              "default" : "16"
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(sync,async)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-inflight_window",
                              "aliases" : [
                                "async_inflight_window"
                              ],
                              "doc" : "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
                              "text" : "inflight_window",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-batch_size",
                              "doc" : "Maximum batch count. If equal to 1, there's effectively no batching.",
                              "text" : "batch_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "1"
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-batch_time",
                              "doc" : "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "batch_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts-S-action_resource_opts-max_buffer_bytes",
                              "aliases" : [
                                "max_queue_bytes"
                              ],
                              "doc" : "Maximum number of bytes to buffer for each buffer worker.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_buffer_bytes",
                              "type" : "Bytesize",
                              "default" : "\"256MB\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "action_resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-sqlserver-S-sqlserver_action-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(action_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Configuration for Microsoft SOL Server action.",
                  "text" : "sqlserver_action"
                }
              ],
              "hash" : "V-actions-S-actions-sqlserver",
              "doc" : "Configuration for Microsoft SOL Server action.",
              "text" : "sqlserver",
              "type" : "Map($name->Struct(sqlserver_action))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-actions-S-actions-confluent_producer-S-actions",
                  "fields" : [
                    {
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-local_topic",
                      "doc" : "MQTT topic or topic filter as data source (action input).  If rule action is used as data source, this config should be left empty, otherwise messages will be duplicated in Confluent.",
                      "text" : "local_topic",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-topic",
                              "doc" : "Kafka topic name.  Supports templates (e.g.: `t-${payload.t}`).<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-key",
                                      "doc" : "Template for rendering message key. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then <code>NULL</code> (but not empty string) is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "key",
                                      "type" : "String",
                                      "default" : "\"${.clientid}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-message-S-kafka_message-value",
                                      "doc" : "Template to render Confluent message value. If the template is rendered into a NULL value (i.e. there is no such data field in Rule Engine context) then Confluent's <code>NULL</code> (but not empty string) is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "value",
                                      "type" : "String",
                                      "default" : "\"${.}\""
                                    }
                                  ],
                                  "doc" : "Template for rendering a message.",
                                  "text" : "kafka_message"
                                }
                              ],
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-message",
                              "doc" : "Template for rendering a message.",
                              "text" : "message",
                              "type" : "Struct(kafka_message)"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-max_linger_time",
                              "doc" : "Maximum duration for a per-partition producer to wait for messages in order to collect a batch to buffer.\nThe default value `0` means no wait. For non-memory buffer mode, it's advised to configure at least `5ms` for less IOPS.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "max_linger_time",
                              "type" : "Duration",
                              "default" : "\"0ms\""
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-max_linger_bytes",
                              "doc" : "Maximum number of bytes for a per-partition producer to wait for messages in order to collect a batch to buffer.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_linger_bytes",
                              "type" : "Bytesize",
                              "default" : "\"10MB\""
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-max_batch_bytes",
                              "doc" : "Maximum bytes to collect in a Confluent message batch. Most of the Kafka brokers default to a limit of 1 MB batch size. EMQX's default value is less than 1 MB in order to compensate Kafka message encoding overheads (especially when each individual message is very small). When a single message is over the limit, it is still sent (as a single element batch).<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"896KB\""
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-compression",
                              "doc" : "Specify the method of compression.",
                              "text" : "compression",
                              "type" : "Enum(no_compression,snappy,gzip)",
                              "default" : "no_compression"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-partition_strategy",
                              "doc" : "Partition strategy is to tell the producer how to dispatch messages to partitions.\n\n<code>random</code>: Randomly pick a partition for each message.\n<code>key_dispatch</code>: Assigns messages to partitions based on a hash of the message key,\nensuring consistent partition for messages with the same key.",
                              "text" : "partition_strategy",
                              "type" : "Enum(random,key_dispatch)",
                              "default" : "random"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-required_acks",
                              "doc" : "The acknowledgement criteria for the partition leader. It determines the level of confirmation required from partition replicas before sending an acknowledgement back to the producer.\n\n<code>all_isr</code>: Require all in-sync replicas to acknowledge.\n<code>leader_only</code>: Require only the partition-leader's acknowledgement.\n<code>none</code>: No need for Kafka to acknowledge at all.",
                              "text" : "required_acks",
                              "type" : "Enum(all_isr,leader_only,none)",
                              "default" : "all_isr"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_headers",
                              "doc" : "Provide a placeholder for message headers<br/>\ne.g. <code>${pub_props}</code><br/>\nNote that the value of the placeholder must be either an object:\n<code>{\"foo\": \"bar\"}</code>\nor an array of key-value pairs:\n<code>[{\"key\": \"foo\", \"value\": \"bar\"}]</code><br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                              "text" : "kafka_headers",
                              "type" : "String"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_key",
                                      "doc" : "Key of the header. Placeholders in format of ${var} are supported.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "kafka_ext_header_key",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers-S-producer_kafka_ext_headers-kafka_ext_header_value",
                                      "doc" : "Value of the header. Placeholders in format of ${var} are supported.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "kafka_ext_header_value",
                                      "type" : "String"
                                    }
                                  ],
                                  "doc" : "Provide more key-value pairs for message headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending producing.",
                                  "text" : "producer_kafka_ext_headers"
                                }
                              ],
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_ext_headers",
                              "doc" : "Please provide more key-value pairs for Confluent headers<br/>\nThe key-value pairs here will be combined with the\nvalue of <code>kafka_headers</code> field before sending to Confluent.",
                              "text" : "kafka_ext_headers",
                              "type" : "Array(Struct(producer_kafka_ext_headers))"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-kafka_header_value_encode_mode",
                              "doc" : "The encoding mode for headers.\n\n - `none`: Add only strings are added as header values\n - `json`: Encode header values as JSON string",
                              "text" : "kafka_header_value_encode_mode",
                              "type" : "Enum(none,json)",
                              "default" : "none"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-partition_count_refresh_interval",
                              "doc" : "The time interval for Confluent producer to discover increased number of partitions.\nAfter the number of partitions is increased in Confluent, EMQX will start taking the\ndiscovered partitions into account when dispatching messages per <code>partition_strategy</code>.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "partition_count_refresh_interval",
                              "type" : "Duration(s)",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-partitions_limit",
                              "doc" : "Limit the number of partitions to produce data for the given topic.\nThe special value `all_partitions` is to utilize all partitions for the topic.\nSetting this to a value which is greater than the total number of partitions in has no effect.",
                              "text" : "partitions_limit",
                              "type" : "OneOf(String(\"all_partitions\"),Integer(1..+inf))",
                              "default" : "all_partitions"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-max_inflight",
                              "doc" : "The maximum number of message batches that the producer can send to each partition before it must wait for an acknowledgement.\nSetting a higher number can enhance throughput. However, value above 1 may lead to potential message reordering risks.",
                              "text" : "max_inflight",
                              "type" : "Integer(1..+inf)",
                              "default" : "10"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-mode",
                                      "doc" : "Message buffer mode.\n\n<code>memory</code>: Buffer all messages in memory. The messages will be lost in case of EMQX node restart\n<code>disk</code>: Buffer all messages on disk. The messages on disk are able to survive EMQX node restart.\n<code>hybrid</code>: Buffer message in memory first, when up to certain limit (see <code>segment_bytes</code> config for more information), then start offloading messages to disk, Like <code>memory</code> mode, the messages will be lost in case of EMQX node restart.",
                                      "text" : "mode",
                                      "type" : "Enum(memory,disk,hybrid)",
                                      "default" : "memory"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-per_partition_limit",
                                      "doc" : "Number of bytes allowed to buffer for each partition. When this limit is exceeded, older messages will be discarded to make room for new messages to be buffered.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "per_partition_limit",
                                      "type" : "Bytesize",
                                      "default" : "\"256MB\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-segment_bytes",
                                      "doc" : "Applicable when buffer mode is set to <code>disk</code> or <code>hybrid</code>.\nThis setting specifies the size of each buffer file stored on disk.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                      "text" : "segment_bytes",
                                      "type" : "Bytesize",
                                      "default" : "\"10MB\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer-S-producer_buffer-memory_overload_protection",
                                      "doc" : "Applicable when buffer mode is set to <code>memory</code>\nEMQX will drop old buffered messages under high memory pressure. The high memory threshold is defined in config <code>sysmon.os.sysmem_high_watermark</code>. NOTE: This config only works on Linux.",
                                      "text" : "memory_overload_protection",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    }
                                  ],
                                  "doc" : "Configure producer message buffer.\n\nTell Kafka producer how to buffer messages when EMQX has more messages to send than Kafka can keep up, or when Kafka is down.",
                                  "text" : "producer_buffer"
                                }
                              ],
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-buffer",
                              "doc" : "Configure producer message buffer.\n\nTell Confluent producer how to buffer messages when EMQX has more messages to send than Confluent can keep up, or when Confluent is down.",
                              "text" : "buffer",
                              "type" : "Struct(producer_buffer)"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-query_mode",
                              "doc" : "Query mode. Optional 'sync/async', default 'async'.",
                              "text" : "query_mode",
                              "type" : "Enum(async,sync)",
                              "default" : "async"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters-S-producer_kafka_opts-sync_query_timeout",
                              "doc" : "This parameter defines the timeout limit for synchronous queries. It applies only when the action query mode is configured to 'sync'.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "sync_query_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            }
                          ],
                          "doc" : "Confluent producer configs.",
                          "text" : "producer_kafka_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-parameters",
                      "aliases" : [
                        "kafka"
                      ],
                      "doc" : "Confluent producer configs.",
                      "text" : "parameters",
                      "type" : "Struct(producer_kafka_opts)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-confluent_producer-S-actions-resource_opts-S-resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-resource_opts-S-resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-resource_opts-S-resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "resource_opts"
                        }
                      ],
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-resource_opts",
                      "text" : "resource_opts",
                      "type" : "Struct(resource_opts)",
                      "default" : "{}"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_reference",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_reference-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"reference\")"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_reference-type",
                              "doc" : "Fallback Action type.",
                              "text" : "type",
                              "type" : "OneOf(String(\"rabbitmq\"),String(\"mqtt\"),String(\"s3\"),String(\"azure_event_hub_producer\"),String(\"hstreamdb\"),String(\"kinesis\"),String(\"pgsql\"),String(\"rocketmq\"),String(\"mysql\"),String(\"datalayers\"),String(\"kafka_producer\"),String(\"http\"),String(\"syskeeper_forwarder\"),String(\"greptimedb\"),String(\"iotdb\"),String(\"pulsar\"),String(\"opents\"),String(\"couchbase\"),String(\"doris\"),String(\"s3tables\"),String(\"redis\"),String(\"tdengine\"),String(\"cassandra\"),String(\"influxdb\"),String(\"elasticsearch\"),String(\"mongodb\"),String(\"tablestore\"),String(\"matrix\"),String(\"snowflake\"),String(\"clickhouse\"),String(\"gcp_pubsub_producer\"),String(\"oracle\"),String(\"timescale\"),String(\"disk_log\"),String(\"azure_blob_storage\"),String(\"dynamo\"),String(\"sqlserver\"),String(\"confluent_producer\"))"
                            },
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_reference-name",
                              "doc" : "Fallback Action name.",
                              "text" : "name",
                              "type" : "String"
                            }
                          ],
                          "doc" : "A fallback Action that will be triggered if a query to this action fails.  The same message context that triggered the primary action will be sent unmodified to the fallbacks.",
                          "text" : "fallback_action_reference"
                        },
                        {
                          "hash" : "T-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish",
                          "fields" : [
                            {
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-kind",
                              "doc" : "Fallback kind.",
                              "text" : "kind",
                              "type" : "String(\"republish\")"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args",
                                  "fields" : [
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-topic",
                                      "doc" : "The target topic of message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-qos",
                                      "doc" : "The qos of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.",
                                      "text" : "qos",
                                      "type" : "OneOf(Integer(0..2),String)",
                                      "default" : "\"${qos}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-retain",
                                      "doc" : "The 'retain' flag of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.",
                                      "text" : "retain",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "\"${retain}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-payload",
                                      "doc" : "The payload of the message to be re-published.\nTemplate with variables is allowed, see description of the 'republish_args'.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "payload",
                                      "type" : "String",
                                      "default" : "\"${payload}\""
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties",
                                          "fields" : [
                                            {
                                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Payload-Format-Indicator",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Payload-Format-Indicator",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Message-Expiry-Interval",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Message-Expiry-Interval",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Content-Type",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Content-Type",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Response-Topic",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Response-Topic",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties-S-republish_mqtt_properties-Correlation-Data",
                                              "doc" : "An MQTT property that can be set while republishing.",
                                              "text" : "Correlation-Data",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                          "text" : "republish_mqtt_properties"
                                        }
                                      ],
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-mqtt_properties",
                                      "doc" : "From which variable should the MQTT Publish Properties of the message be taken.\nPlaceholders like <code>${.payload.content_type}</code> may be used.",
                                      "text" : "mqtt_properties",
                                      "type" : "Struct(republish_mqtt_properties)",
                                      "default" : "{}"
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-user_properties",
                                      "doc" : "From which variable should the MQTT message's User-Property pairs be taken from.\nThe value must be a map.\nYou may configure it to <code>${pub_props.'User-Property'}</code> or\nuse <code>SELECT *,pub_props.'User-Property' as user_properties</code>\nto forward the original user properties to the republished message.\nYou may also call <code>map_put</code> function like\n<code>map_put('my-prop-name', 'my-prop-value', user_properties) as user_properties</code>\nto inject user properties.\nNOTE: MQTT spec allows duplicated user property names, but EMQX Rule-Engine does not.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                      "text" : "user_properties",
                                      "type" : "String",
                                      "default" : "\"${user_properties}\""
                                    },
                                    {
                                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args-S-republish_args-direct_dispatch",
                                      "doc" : "Enable direct dispatch to subscribers without initiating a new message publish event.\nWhen set to `true`, this prevents the recursive processing of a message by the same action\nand is used when the output message does not require further processing.\n\nHowever, enabling this feature has several limitations:\n\n- The output message from this action is not retained.\n- It does not trigger other rules that operate based on the output topic of this action.\n- It does not activate rules that select from the `$events/message_publish`.\n- It does not trigger plugins that use the `'message.publish'` hook.\n- Topic metrics are not collected for the output message of this action.\n- Message schema validation is not applied (feature of EMQX Enterprise).\n- Message transformation processes are not applied (feature of EMQX Enterprise).",
                                      "text" : "direct_dispatch",
                                      "type" : "OneOf(Boolean,String)",
                                      "default" : "false"
                                    }
                                  ],
                                  "doc" : "The arguments of the built-in 'republish' action. One can use variables in the args.\nThe variables are selected by the rule. For example, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = `hello`, qos = 1,\nclientid = `Steve`, the rule will republish a new MQTT message to topic `t/Steve`,\npayload = `msg: hello`, and `qos = 1`.",
                                  "text" : "republish_args"
                                }
                              ],
                              "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions-S-fallback_action_republish-args",
                              "text" : "args",
                              "type" : "Struct(republish_args)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Republish fallback action.  Works the same way as the Republish rule action from Rule Engine.",
                          "text" : "fallback_action_republish"
                        }
                      ],
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-fallback_actions",
                      "doc" : "List of fallback actions that will be triggered if a query to this action fails.",
                      "text" : "fallback_actions",
                      "type" : "Array(OneOf(Struct(fallback_action_reference),Struct(fallback_action_republish)))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-actions-S-actions-confluent_producer-S-actions-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "doc" : "The configuration for an action.",
                  "text" : "actions"
                }
              ],
              "hash" : "V-actions-S-actions-confluent_producer",
              "doc" : "Confluent Actions Config",
              "text" : "confluent_producer",
              "type" : "Map($name->Struct(actions))"
            }
          ],
          "doc" : "Configuration for actions.",
          "text" : "actions"
        }
      ],
      "hash" : "V-actions",
      "text" : "actions",
      "type" : "Struct(actions)"
    },
    {
      "refs" : [
        {
          "hash" : "T-sources-S-sources",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-sources-S-sources-rabbitmq-S-subscriber_source",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-sources-S-sources-rabbitmq-S-subscriber_source-parameters-S-source_parameters",
                          "fields" : [
                            {
                              "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-parameters-S-source_parameters-queue",
                              "doc" : "The queue name of the RabbitMQ broker.",
                              "text" : "queue",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-parameters-S-source_parameters-wait_for_publish_confirmations",
                              "doc" : "A boolean value that indicates whether to wait for RabbitMQ to confirm message publication when using publisher confirms.",
                              "text" : "wait_for_publish_confirmations",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-parameters-S-source_parameters-no_ack",
                              "doc" : "Whether to use no_ack mode when consuming messages from the RabbitMQ broker.",
                              "text" : "no_ack",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "doc" : "The source config defines how this bridge receive messages from the remote RabbitMQ broker",
                          "text" : "source_parameters"
                        }
                      ],
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-parameters",
                      "doc" : "The source config defines how this bridge receive messages from the remote RabbitMQ broker",
                      "text" : "parameters",
                      "type" : "Struct(source_parameters)"
                    },
                    {
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-sources-S-sources-rabbitmq-S-subscriber_source-resource_opts-S-source_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-resource_opts-S-source_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-resource_opts-S-source_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "source_resource_opts"
                        }
                      ],
                      "hash" : "V-sources-S-sources-rabbitmq-S-subscriber_source-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(source_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Source configs.",
                  "text" : "subscriber_source"
                }
              ],
              "hash" : "V-sources-S-sources-rabbitmq",
              "doc" : "MQTT Subscriber Source Config",
              "text" : "rabbitmq",
              "type" : "Map($name->Struct(subscriber_source))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-sources-S-sources-mqtt-S-mqtt_subscriber_source",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters",
                          "fields" : [
                            {
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters-no_local",
                              "doc" : "Whether to set the no-local flag when subscribing to the remote topic.  If set to true, and you use the same connector to publish messages to a topic you also subscribe to, this prevents the server from forwarding your own published messages back to you.  Only takes effect when using MQTT protocol version 5.  Note that if you use a pool of workers larger than 1 you will still receive duplicated messages back.",
                              "text" : "no_local",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters-topic",
                              "doc" : "Receive messages from which topic of the remote broker",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters-S-ingress_parameters-qos",
                              "doc" : "The QoS level to be used when subscribing to the remote broker",
                              "text" : "qos",
                              "type" : "Integer(0..2)",
                              "default" : "1"
                            }
                          ],
                          "doc" : "Source specific configs.",
                          "text" : "ingress_parameters"
                        }
                      ],
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-parameters",
                      "text" : "parameters",
                      "type" : "Struct(ingress_parameters)"
                    },
                    {
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts-S-source_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts-S-source_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts-S-source_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            }
                          ],
                          "doc" : "Creation options.",
                          "text" : "source_resource_opts"
                        }
                      ],
                      "hash" : "V-sources-S-sources-mqtt-S-mqtt_subscriber_source-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(source_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Source configs.",
                  "text" : "mqtt_subscriber_source"
                }
              ],
              "hash" : "V-sources-S-sources-mqtt",
              "doc" : "MQTT Subscriber Source Config",
              "text" : "mqtt",
              "type" : "Map($name->Struct(mqtt_subscriber_source))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-sources-S-sources-kafka_consumer-S-consumer_source",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters",
                          "fields" : [
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-topic",
                              "doc" : "Kafka topic to consume from.",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-group_id",
                              "doc" : "Consumer group identifier to be used for this source.  If omitted, one based off the source name will be automatically generated.",
                              "text" : "group_id",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-max_wait_time",
                              "doc" : "Maximum amount of time that is waited for the Kafka broker to send a fetch response.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "max_wait_time",
                              "type" : "Duration",
                              "default" : "\"1s\""
                            },
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-max_batch_bytes",
                              "doc" : "Set how many bytes to pull from Kafka in each fetch request.\nMessages are fetched in batches by the consumer, and if the first record batch in the first non-empty\npartition of the fetch is larger than this value, the record batch will still be returned to ensure\nthat the consumer can make progress. As such, this is not an absolute maximum. Set `1` for minimal latency.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "max_batch_bytes",
                              "type" : "Bytesize",
                              "default" : "\"896KB\""
                            },
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-offset_reset_policy",
                              "doc" : "Defines from which offset a consumer should start fetching when there is no commit history or when the commit history becomes invalid.",
                              "text" : "offset_reset_policy",
                              "type" : "Enum(latest,earliest)",
                              "default" : "latest"
                            },
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-offset_commit_interval_seconds",
                              "doc" : "Defines the time interval between two offset commit requests sent for each consumer group.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "offset_commit_interval_seconds",
                              "type" : "Duration(s)",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-key_encoding_mode",
                              "doc" : "Defines how the key from the Kafka message is encoded before being forwarded via MQTT.\n<code>none</code> Uses the key from the Kafka message unchanged.  Note: in this case, the key must be a valid UTF-8 string.\n<code>base64</code> Uses base-64 encoding on the received key.",
                              "text" : "key_encoding_mode",
                              "type" : "Enum(none,base64)",
                              "default" : "none"
                            },
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters-S-source_parameters-value_encoding_mode",
                              "doc" : "Defines how the value from the Kafka message is encoded before being forwarded via MQTT.\n<code>none</code> Uses the value from the Kafka message unchanged.  Note: in this case, the value must be a valid UTF-8 string.\n<code>base64</code> Uses base-64 encoding on the received value.",
                              "text" : "value_encoding_mode",
                              "type" : "Enum(none,base64)",
                              "default" : "none"
                            }
                          ],
                          "doc" : "Source specific configs.",
                          "text" : "source_parameters"
                        }
                      ],
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-parameters",
                      "doc" : "Source configs.",
                      "text" : "parameters",
                      "type" : "Struct(source_parameters)"
                    },
                    {
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-sources-S-sources-kafka_consumer-S-consumer_source-resource_opts-S-source_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-resource_opts-S-source_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-resource_opts-S-source_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "source_resource_opts"
                        }
                      ],
                      "hash" : "V-sources-S-sources-kafka_consumer-S-consumer_source-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(source_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Source configs.",
                  "text" : "consumer_source"
                }
              ],
              "hash" : "V-sources-S-sources-kafka_consumer",
              "doc" : "Kafka Consumer Source Config",
              "text" : "kafka_consumer",
              "type" : "Map($name->Struct(consumer_source))"
            },
            {
              "refs" : [
                {
                  "hash" : "T-sources-S-sources-gcp_pubsub_consumer-S-consumer_source",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-parameters-S-source_parameters",
                          "fields" : [
                            {
                              "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-parameters-S-source_parameters-topic",
                              "doc" : "The GCP PubSub topic to publish messages to.",
                              "text" : "topic",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-parameters-S-source_parameters-pull_max_messages",
                              "doc" : "The maximum number of messages to retrieve from GCP PubSub in a single pull request. The actual number may be less than the specified value.",
                              "text" : "pull_max_messages",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            }
                          ],
                          "doc" : "Source specific configs.",
                          "text" : "source_parameters"
                        }
                      ],
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-parameters",
                      "doc" : "Source configs.",
                      "text" : "parameters",
                      "type" : "Struct(source_parameters)"
                    },
                    {
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-connector",
                      "doc" : "Name of the connector specified by the action, used for external resource selection.",
                      "text" : "connector",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-tags",
                      "doc" : "Tags to annotate this config entry.",
                      "text" : "tags",
                      "type" : "Array(String)"
                    },
                    {
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-description",
                      "doc" : "Descriptive text.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-resource_opts-S-source_resource_opts",
                          "fields" : [
                            {
                              "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-resource_opts-S-source_resource_opts-health_check_interval",
                              "doc" : "Health check interval.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "health_check_interval",
                              "type" : "Duration",
                              "default" : "\"30s\""
                            },
                            {
                              "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-resource_opts-S-source_resource_opts-health_check_timeout",
                              "doc" : "Health check timeout.  If a health check call takes more than this time to return a result, the resource is deemed disconnected.",
                              "text" : "health_check_timeout",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"60s\""
                            },
                            {
                              "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-resource_opts-S-source_resource_opts-request_ttl",
                              "aliases" : [
                                "request_timeout"
                              ],
                              "doc" : "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
                              "text" : "request_ttl",
                              "type" : "OneOf(Duration,String(\"infinity\"))",
                              "default" : "\"45s\""
                            }
                          ],
                          "doc" : "Resource options.",
                          "text" : "source_resource_opts"
                        }
                      ],
                      "hash" : "V-sources-S-sources-gcp_pubsub_consumer-S-consumer_source-resource_opts",
                      "doc" : "Resource options.",
                      "text" : "resource_opts",
                      "type" : "Struct(source_resource_opts)",
                      "default" : "{}"
                    }
                  ],
                  "doc" : "Source configs.",
                  "text" : "consumer_source"
                }
              ],
              "hash" : "V-sources-S-sources-gcp_pubsub_consumer",
              "doc" : "GCP PubSub Consumer Source Config",
              "text" : "gcp_pubsub_consumer",
              "type" : "Map($name->Struct(consumer_source))"
            }
          ],
          "doc" : "Configuration for sources.",
          "text" : "sources"
        }
      ],
      "hash" : "V-sources",
      "text" : "sources",
      "type" : "Struct(sources)"
    },
    {
      "refs" : [
        {
          "hash" : "T-retainer-S-retainer",
          "fields" : [
            {
              "hash" : "V-retainer-S-retainer-msg_expiry_interval",
              "doc" : "Expired retained messages will not be delivered again, and a setting of 0 means that retained messages will never expire.\n\nHowever, if the `Message-Expiry-Interval` property is specified in the MQTT message, the value of that property prevails.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "msg_expiry_interval",
              "type" : "Duration",
              "default" : "\"0s\""
            },
            {
              "hash" : "V-retainer-S-retainer-msg_expiry_interval_override",
              "doc" : "If set, this value will take precedence over any `Message-Expiry-Interval` property specified in retained MQTT messages, allowing messages to expire earlier if necessary.  This override only applies to the garbage collection process: it does not affect the expiry time of messages being written nor that of already written messages while iterating over them.  Therefore, messages that are candidate for garbage collection when overridden may still be visible when subscribing to retained topics.",
              "text" : "msg_expiry_interval_override",
              "type" : "OneOf(String(\"disabled\"),Duration)",
              "default" : "disabled"
            },
            {
              "hash" : "V-retainer-S-retainer-allow_never_expire",
              "doc" : "If true, retained messages set to never expire (i.e., whose `Message-Expiry-Interval = 0`) are not affected by the expiry time override.  This configuration only takes effect when `msg_expiry_interval_override` is set.",
              "text" : "allow_never_expire",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "hash" : "V-retainer-S-retainer-msg_clear_interval",
              "doc" : "The time interval for checking and clearing expired retained messages. This can prevent expired retained messages from being stored for a long time.\n\nIf `msg_clear_interval` is set to 0, that is, expired retained messages are not actively checked regularly, EMQX will only check and delete expired retained messages when preparing for delivery.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "msg_clear_interval",
              "type" : "Duration",
              "default" : "\"0s\""
            },
            {
              "hash" : "V-retainer-S-retainer-max_payload_size",
              "doc" : "The maximum size of retained messages allowed to be stored. EMQX will refuse to store retained messages larger than this size and output an Error log with the keyword 'retain_failed_for_payload_size_exceeded_limit'.\n\n0 means unlimited retained message size.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
              "text" : "max_payload_size",
              "type" : "Bytesize",
              "default" : "\"1MB\""
            },
            {
              "hash" : "V-retainer-S-retainer-stop_publish_clear_msg",
              "doc" : "When the retained flag of the `PUBLISH` message is set and Payload is empty,\nwhether to continue to publish the message.\nSee:\nhttp://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718038",
              "text" : "stop_publish_clear_msg",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-retainer-S-retainer-delivery_rate",
              "aliases" : [
                "deliver_rate"
              ],
              "doc" : "The maximum rate of delivering retained messages",
              "text" : "delivery_rate",
              "type" : "String",
              "default" : "\"1000/s\""
            },
            {
              "hash" : "V-retainer-S-retainer-max_publish_rate",
              "doc" : "The maximum rate of publishing retained messages. Messages that are published over the limit are delivered but not stored as retained.",
              "text" : "max_publish_rate",
              "type" : "String",
              "default" : "\"1000/s\""
            },
            {
              "refs" : [
                {
                  "hash" : "T-retainer-S-retainer-backend-S-mnesia_config",
                  "fields" : [
                    {
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-type",
                      "doc" : "Backend type.",
                      "text" : "type",
                      "type" : "String(\"built_in_database\")",
                      "default" : "built_in_database"
                    },
                    {
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-storage_type",
                      "doc" : "Specifies whether the messages are stored in RAM or persisted on disc.",
                      "text" : "storage_type",
                      "type" : "Enum(ram,disc)",
                      "default" : "ram"
                    },
                    {
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-max_retained_messages",
                      "doc" : "Maximum number of retained messages. 0 means no limit.",
                      "text" : "max_retained_messages",
                      "type" : "Integer(0..+inf)",
                      "default" : "0"
                    },
                    {
                      "hash" : "V-retainer-S-retainer-backend-S-mnesia_config-index_specs",
                      "doc" : "Retainer index specifications: list of arrays of positive ascending integers. Each array specifies an index. Numbers in an index specification are 1-based word positions in topics. Words from specified positions will be used for indexing.<br/>For example, it is good to have <code>[2, 4]</code> index to optimize <code>+/X/+/Y/...</code> topic wildcard subscriptions.",
                      "text" : "index_specs",
                      "type" : "Array(Integer)",
                      "default" : "[[1, 2, 3], [1, 3], [2, 3], [3]]"
                    }
                  ],
                  "doc" : "Configuration of the internal database storing retained messages.",
                  "text" : "mnesia_config"
                }
              ],
              "hash" : "V-retainer-S-retainer-backend",
              "doc" : "Settings for the database storing the retained messages.",
              "text" : "backend",
              "type" : "Struct(mnesia_config)"
            }
          ],
          "doc" : "Configuration related to handling `PUBLISH` packets with a `retain` flag set to 1.",
          "text" : "retainer"
        }
      ],
      "hash" : "V-retainer",
      "text" : "retainer",
      "type" : "Struct(retainer)"
    },
    {
      "refs" : [
        {
          "hash" : "T-telemetry-S-telemetry",
          "fields" : [
            {
              "hash" : "V-telemetry-S-telemetry-enable",
              "doc" : "Set to `false` disable telemetry data report",
              "text" : "enable",
              "type" : "Boolean"
            }
          ],
          "doc" : "Whether to enable telemetry to allow EMQX to collect relevant usage information\nand share it with EMQ for the purpose of enhancing your product experience,\nand in no case will EMQX collect personal information about you,\nsuch as your MAC address, IP address, content of messages sent.\n\nSee https://docs.emqx.com/en/emqx/latest/telemetry/telemetry.html for more details.",
          "text" : "telemetry"
        }
      ],
      "hash" : "V-telemetry",
      "text" : "telemetry",
      "type" : "Struct(telemetry)"
    },
    {
      "refs" : [
        {
          "hash" : "T-delayed-S-delayed",
          "fields" : [
            {
              "hash" : "V-delayed-S-delayed-max_delayed_messages",
              "doc" : "Maximum number of delayed messages (0 is no limit).",
              "text" : "max_delayed_messages",
              "type" : "Integer",
              "default" : "0"
            }
          ],
          "doc" : "Settings for the delayed module.",
          "text" : "delayed"
        }
      ],
      "hash" : "V-delayed",
      "text" : "delayed",
      "type" : "Struct(delayed)"
    },
    {
      "refs" : [
        {
          "hash" : "T-plugins-S-plugins",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-plugins-S-plugins-states-S-state",
                  "fields" : [
                    {
                      "hash" : "V-plugins-S-plugins-states-S-state-name_vsn",
                      "doc" : "The `{name}-{version}` of the plugin.<br/>\nIt should match the plugin application name-version as plugin release package name<br/>\nFor example: `my_plugin-0.1.0`.",
                      "text" : "name_vsn",
                      "type" : "String"
                    }
                  ],
                  "doc" : "A per-plugin config to describe the desired state of the plugin.",
                  "text" : "state"
                }
              ],
              "hash" : "V-plugins-S-plugins-states",
              "doc" : "An array of plugins in the desired states.<br/>\nThe plugins are started in the defined order",
              "text" : "states",
              "type" : "Array(Struct(state))",
              "default" : "[]"
            },
            {
              "hash" : "V-plugins-S-plugins-install_dir",
              "doc" : "The installation directory for the external plugins.\nThe plugin beam files and configuration files should reside in\nthe subdirectory named as <code>emqx_foo_bar-0.1.0</code>.\n<br/>\nNOTE: For security reasons, this directory should **NOT** be writable\nby anyone except <code>emqx</code> (or any user which runs EMQX).",
              "text" : "install_dir",
              "type" : "String",
              "default" : "plugins"
            },
            {
              "hash" : "V-plugins-S-plugins-check_interval",
              "doc" : "Deprecated since 5.0.24.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "check_interval",
              "type" : "Duration"
            }
          ],
          "doc" : "Manage EMQX plugins.<br/>\nPlugins can be pre-built as a part of EMQX package,\nor installed as a standalone package in a location specified by\n<code>install_dir</code> config key<br/>\nThe standalone-installed plugins are referred to as 'external' plugins.",
          "text" : "plugins"
        }
      ],
      "hash" : "V-plugins",
      "text" : "plugins",
      "type" : "Struct(plugins)"
    },
    {
      "refs" : [
        {
          "hash" : "T-dashboard-S-dashboard",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-dashboard-S-dashboard-listeners-S-listeners",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-dashboard-S-dashboard-listeners-S-listeners-http-S-http",
                          "fields" : [
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-bind",
                              "doc" : "Bind the listener to a specified address and port number, for example `127.0.0.1:18083`.\nIf configured with just the port number (e.g. `18083`) it's equivalent to binding to all addresses `0.0.0.0`.\nThe listener is disabled if `bind` is `0`.",
                              "text" : "bind",
                              "type" : "String",
                              "default" : "0"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-num_acceptors",
                              "doc" : "Socket acceptor pool size for TCP protocols. Default is the number of schedulers online",
                              "text" : "num_acceptors",
                              "type" : "Integer",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-max_connections",
                              "doc" : "The maximum number of concurrent connections allowed by the listener.",
                              "text" : "max_connections",
                              "type" : "Integer",
                              "default" : "512"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-backlog",
                              "doc" : "Defines the maximum length that the queue of pending connections can grow to.",
                              "text" : "backlog",
                              "type" : "Integer",
                              "default" : "1024"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-send_timeout",
                              "doc" : "Send timeout for the socket.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-inet6",
                              "doc" : "Enable IPv6 support, default is false, which means IPv4 only.",
                              "text" : "inet6",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-ipv6_v6only",
                              "doc" : "Disable IPv4-to-IPv6 mapping for the listener.\nThe configuration is only valid when the inet6 is true.",
                              "text" : "ipv6_v6only",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http-S-http-proxy_header",
                              "doc" : "Enable support for `HAProxy` header. Be aware once enabled regular HTTP requests can't be handled anymore.",
                              "text" : "proxy_header",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "doc" : "Configuration for the dashboard listener (plaintext).",
                          "text" : "http"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-http",
                      "doc" : "Settings for the HTTP listener.",
                      "text" : "http",
                      "type" : "Struct(http)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-dashboard-S-dashboard-listeners-S-listeners-https-S-https",
                          "fields" : [
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-bind",
                              "doc" : "Bind the listener to a specified address and port number, for example `127.0.0.1:18083`.\nIf configured with just the port number (e.g. `18083`) it's equivalent to binding to all addresses `0.0.0.0`.\nThe listener is disabled if `bind` is `0`.",
                              "text" : "bind",
                              "type" : "String",
                              "default" : "0"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options",
                                  "fields" : [
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-cacertfile",
                                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                      "text" : "cacertfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-cacerts",
                                      "doc" : "Deprecated since 5.1.4.",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-certfile",
                                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                      "text" : "certfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-keyfile",
                                      "doc" : "PEM format private key file.",
                                      "text" : "keyfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-verify",
                                      "doc" : "Enable or disable peer verification.",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-reuse_sessions",
                                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-depth",
                                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-password",
                                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                      "text" : "password",
                                      "type" : "Secret"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-versions",
                                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-ciphers",
                                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-secure_renegotiate",
                                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-log_level",
                                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-hibernate_after",
                                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-partial_chain",
                                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                      "text" : "partial_chain",
                                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-verify_peer_ext_key_usage",
                                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                      "text" : "verify_peer_ext_key_usage",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-dhfile",
                                      "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                      "text" : "dhfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-fail_if_no_peer_cert",
                                      "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                      "text" : "fail_if_no_peer_cert",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-honor_cipher_order",
                                      "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                      "text" : "honor_cipher_order",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-client_renegotiation",
                                      "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "text" : "client_renegotiation",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options-S-ssl_options-handshake_timeout",
                                      "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "handshake_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    }
                                  ],
                                  "doc" : "SSL/TLS options for the dashboard listener.",
                                  "text" : "ssl_options"
                                }
                              ],
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ssl_options",
                              "doc" : "SSL/TLS options for the dashboard listener.",
                              "text" : "ssl_options",
                              "type" : "Struct(ssl_options)"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-num_acceptors",
                              "doc" : "Socket acceptor pool size for TCP protocols. Default is the number of schedulers online",
                              "text" : "num_acceptors",
                              "type" : "Integer",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-max_connections",
                              "doc" : "The maximum number of concurrent connections allowed by the listener.",
                              "text" : "max_connections",
                              "type" : "Integer",
                              "default" : "512"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-backlog",
                              "doc" : "Defines the maximum length that the queue of pending connections can grow to.",
                              "text" : "backlog",
                              "type" : "Integer",
                              "default" : "1024"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-send_timeout",
                              "doc" : "Send timeout for the socket.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "send_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-inet6",
                              "doc" : "Enable IPv6 support, default is false, which means IPv4 only.",
                              "text" : "inet6",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-ipv6_v6only",
                              "doc" : "Disable IPv4-to-IPv6 mapping for the listener.\nThe configuration is only valid when the inet6 is true.",
                              "text" : "ipv6_v6only",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https-S-https-proxy_header",
                              "doc" : "Enable support for `HAProxy` header. Be aware once enabled regular HTTP requests can't be handled anymore.",
                              "text" : "proxy_header",
                              "type" : "Boolean",
                              "default" : "false"
                            }
                          ],
                          "doc" : "Configuration for the dashboard listener (TLS).",
                          "text" : "https"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-listeners-S-listeners-https",
                      "text" : "https",
                      "type" : "Struct(https)"
                    }
                  ],
                  "doc" : "Configuration for the dashboard listener.",
                  "text" : "listeners"
                }
              ],
              "hash" : "V-dashboard-S-dashboard-listeners",
              "doc" : "HTTP(s) listeners are identified by their protocol type and are\nused to serve dashboard UI and restful HTTP API.\nListeners must have a unique combination of port number and IP address.\nFor example, an HTTP listener can listen on all configured IP addresses\non a given port for a machine by specifying the IP address 0.0.0.0.\nAlternatively, the HTTP listener can specify a unique IP address for each listener,\nbut use the same port.",
              "text" : "listeners",
              "type" : "Struct(listeners)"
            },
            {
              "hash" : "V-dashboard-S-dashboard-default_password",
              "doc" : "The password used to initialize a database record for `admin` user.\nNOTE: Changing the default password after it has been initialized (boot up for the fist time) has no effect.\nOnce initialized, the default password `public` must be changed from dashboard or CLI as soon as possible.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
              "text" : "default_password",
              "type" : "Secret",
              "default" : "public"
            },
            {
              "hash" : "V-dashboard-S-dashboard-hwmark_expire_time",
              "doc" : "Specifies the expiration interval for high watermark metrics, such as the session history high watermark (`sessions_hist_hwmark`).\nA high watermark remains valid for the configured duration.\nWhen it expires, the system scans the recorded values up to now and updates the high watermark to the highest observed value.\nNote: it must be no more than 7 days (`7d`)<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "hwmark_expire_time",
              "type" : "Duration",
              "default" : "\"7d\""
            },
            {
              "hash" : "V-dashboard-S-dashboard-token_expired_time",
              "doc" : "JWT token expiration time. Default is 60 minutes<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "token_expired_time",
              "type" : "Duration",
              "default" : "\"60m\""
            },
            {
              "hash" : "V-dashboard-S-dashboard-password_expired_time",
              "doc" : "The expiration time for the password of users. The default value `0` means the password will never expire.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "password_expired_time",
              "type" : "Duration(s)",
              "default" : "0"
            },
            {
              "hash" : "V-dashboard-S-dashboard-cors",
              "doc" : "Support Cross-Origin Resource Sharing (CORS).\nAllows a server to indicate any origins (domain, scheme, or port) other than\nits own from which a browser should permit loading resources.",
              "text" : "cors",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-dashboard-S-dashboard-swagger_support",
              "doc" : "Enable or disable support for swagger API documentation.",
              "text" : "swagger_support",
              "type" : "Boolean",
              "default" : "true"
            },
            {
              "refs" : [
                {
                  "hash" : "T-dashboard-S-dashboard-default_mfa-S-mfa_settings",
                  "fields" : [
                    {
                      "hash" : "V-dashboard-S-dashboard-default_mfa-S-mfa_settings-mechanism",
                      "doc" : "Multifactor authentication mechanism.",
                      "text" : "mechanism",
                      "type" : "Enum(totp)"
                    }
                  ],
                  "doc" : "Multifactor authentication settings.",
                  "text" : "mfa_settings"
                }
              ],
              "hash" : "V-dashboard-S-dashboard-default_mfa",
              "doc" : "Default Multifactor authentication settings for Dashboard.\nWhen set as `none`, MFA can be enabled per user from the dashboard.\nIf set as `{mechanism = totp}`, the user will be initialized with\na random TOTP secret when logging in for the first time.",
              "text" : "default_mfa",
              "type" : "OneOf(String(\"none\"),Struct(mfa_settings))",
              "default" : "none"
            },
            {
              "refs" : [
                {
                  "hash" : "T-dashboard-S-dashboard-sso-S-sso",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap",
                          "fields" : [
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-enable",
                              "doc" : "Whether to enable this backend.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-backend",
                              "doc" : "Backend type.",
                              "text" : "backend",
                              "type" : "Enum(ldap)"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-query_timeout",
                              "doc" : "Timeout for the LDAP query.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "query_timeout",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-server",
                              "doc" : "The IPv4 or IPv6 address or the hostname to connect to.<br/>\nA host entry has the following form: `Host[:Port]`.<br/>\nThe LDAP default port 389 is used if `[:Port]` is not specified.",
                              "text" : "server",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-pool_size",
                              "doc" : "Size of the connection pool towards the bridge target service.",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-username",
                              "doc" : "The username associated with the bridge in the external database used for authentication or identification purposes.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-password",
                              "doc" : "The password associated with the bridge, used for authentication with the external database.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-request_timeout",
                              "doc" : "Sets the maximum time in milliseconds that is used for each individual request.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "request_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl",
                                  "fields" : [
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-cacertfile",
                                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                      "text" : "cacertfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-cacerts",
                                      "doc" : "Deprecated since 5.1.4.",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-certfile",
                                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                      "text" : "certfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-keyfile",
                                      "doc" : "PEM format private key file.",
                                      "text" : "keyfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-verify",
                                      "doc" : "Enable or disable peer verification.",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-reuse_sessions",
                                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-depth",
                                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-password",
                                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                      "text" : "password",
                                      "type" : "Secret"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-versions",
                                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-ciphers",
                                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-secure_renegotiate",
                                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-log_level",
                                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-hibernate_after",
                                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-partial_chain",
                                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                      "text" : "partial_chain",
                                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-verify_peer_ext_key_usage",
                                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                      "text" : "verify_peer_ext_key_usage",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-enable",
                                      "doc" : "Enable TLS.",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-middlebox_comp_mode",
                                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                                      "text" : "middlebox_comp_mode",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl-S-ssl-server_name_indication",
                                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                                      "text" : "server_name_indication",
                                      "type" : "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "doc" : "SSL connection settings.",
                                  "text" : "ssl"
                                }
                              ],
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-ssl",
                              "doc" : "SSL connection settings.",
                              "text" : "ssl",
                              "type" : "Struct(ssl)",
                              "default" : "{enable = false}"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-base_dn",
                              "doc" : "The name of the base object entry (or possibly the root) relative to\nwhich the Search is to be performed.",
                              "text" : "base_dn",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap-S-ldap-filter",
                              "doc" : "The filter for matching users in LDAP is by default `(&(objectClass=person)(uid=${username}))`. For Active Directory, it should be set to `(&(objectClass=user)(sAMAccountName=${username}))` by default. Please refer to [LDAP Filters](https://ldap.com/ldap-filters/) for more details.",
                              "text" : "filter",
                              "type" : "String",
                              "default" : "\"(& (objectClass=person) (uid=${username}))\""
                            }
                          ],
                          "doc" : "LDAP (Lightweight Directory Access Protocol) is a protocol for accessing and managing directory information services over a network. It can be used as a Single Sign-On (SSO) provider to authenticate users by binding to the LDAP server with their credentials.",
                          "text" : "ldap"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-ldap",
                      "text" : "ldap",
                      "type" : "Struct(ldap)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc",
                          "fields" : [
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-enable",
                              "doc" : "Whether to enable this backend.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-backend",
                              "doc" : "Backend type.",
                              "text" : "backend",
                              "type" : "Enum(oidc)"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-issuer",
                              "doc" : "The URL of the OIDC issuer.",
                              "text" : "issuer",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-clientid",
                              "doc" : "The clientId for this backend.",
                              "text" : "clientid",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-secret",
                              "doc" : "The client secret.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "secret",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-scopes",
                              "doc" : "The scopes, its default value is `[\"openid\"]`.",
                              "text" : "scopes",
                              "type" : "Array(String)",
                              "default" : "[openid]"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-name_var",
                              "doc" : "A template to map OIDC user information to a Dashboard name, its default value is `${sub}`.",
                              "text" : "name_var",
                              "type" : "String",
                              "default" : "\"${sub}\""
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-dashboard_addr",
                              "doc" : "The address of the EMQX Dashboard.",
                              "text" : "dashboard_addr",
                              "type" : "String",
                              "default" : "\"http://127.0.0.1:18083\""
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-session_expiry",
                              "doc" : "The valid time span for an OIDC `state`, the default is `30s`, if the code response returned by the authorization server exceeds this time span, it will be treated as invalid.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "session_expiry",
                              "type" : "Duration(s)",
                              "default" : "\"30s\""
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-require_pkce",
                              "doc" : "Whether to require PKCE when getting the token.",
                              "text" : "require_pkce",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-preferred_auth_methods",
                              "doc" : "Set the valid authentication methods and their priority.",
                              "text" : "preferred_auth_methods",
                              "type" : "Array(Enum(private_key_jwt,client_secret_jwt,client_secret_post,client_secret_basic,none))",
                              "default" : "[client_secret_post, client_secret_basic, none]"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-provider",
                              "doc" : "The OIDC provider.",
                              "text" : "provider",
                              "type" : "Enum(okta,generic)",
                              "default" : "generic"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-fallback_methods",
                              "doc" : "Some providers do not provide all the method items in the provider configuration, set this value as a fallback for those items.",
                              "text" : "fallback_methods",
                              "type" : "Array(String)",
                              "default" : "[RS256]"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-client_jwks-S-client_file_jwks",
                                  "fields" : [
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-client_jwks-S-client_file_jwks-type",
                                      "doc" : "The JWKS source type.",
                                      "text" : "type",
                                      "type" : "Enum(file)"
                                    },
                                    {
                                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-client_jwks-S-client_file_jwks-file",
                                      "doc" : "The content of the JWKS.",
                                      "text" : "file",
                                      "type" : "String"
                                    }
                                  ],
                                  "doc" : "Set JWKS from file.",
                                  "text" : "client_file_jwks"
                                }
                              ],
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc-S-oidc-client_jwks",
                              "doc" : "Set JWK or JWKS here to enable the `private_key_jwt` authorization or the `DPoP` extension.",
                              "text" : "client_jwks",
                              "type" : "OneOf(String(\"none\"),Struct(client_file_jwks))",
                              "default" : "none"
                            }
                          ],
                          "doc" : "OpenID Connect (OIDC) is an identity layer built on top of the OAuth 2.0 protocol. It allows clients to verify the identity of end-users based on the authentication performed by an authorization server.",
                          "text" : "oidc"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-oidc",
                      "text" : "oidc",
                      "type" : "Struct(oidc)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-dashboard-S-dashboard-sso-S-sso-saml-S-saml",
                          "fields" : [
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-enable",
                              "doc" : "Whether to enable this backend.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-backend",
                              "doc" : "Backend type.",
                              "text" : "backend",
                              "type" : "Enum(saml)"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-dashboard_addr",
                              "doc" : "The address of the EMQX Dashboard.",
                              "text" : "dashboard_addr",
                              "type" : "String",
                              "default" : "\"https://127.0.0.1:18083\""
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-idp_metadata_url",
                              "doc" : "The URL of the IdP metadata.",
                              "text" : "idp_metadata_url",
                              "type" : "String",
                              "default" : "\"https://idp.example.com\""
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-sp_sign_request",
                              "doc" : "Whether to sign the SAML request.",
                              "text" : "sp_sign_request",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-sp_public_key",
                              "doc" : "The public key of the SP.",
                              "text" : "sp_public_key",
                              "type" : "String",
                              "default" : "\"Pub Key\""
                            },
                            {
                              "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml-S-saml-sp_private_key",
                              "doc" : "The private key of the SP.",
                              "text" : "sp_private_key",
                              "type" : "String"
                            }
                          ],
                          "doc" : "saml",
                          "text" : "saml"
                        }
                      ],
                      "hash" : "V-dashboard-S-dashboard-sso-S-sso-saml",
                      "text" : "saml",
                      "type" : "Struct(saml)"
                    }
                  ],
                  "doc" : "Dashboard Single Sign-On",
                  "text" : "sso"
                }
              ],
              "hash" : "V-dashboard-S-dashboard-sso",
              "text" : "sso",
              "type" : "Struct(sso)"
            }
          ],
          "doc" : "Configuration for EMQX dashboard.",
          "text" : "dashboard"
        }
      ],
      "hash" : "V-dashboard",
      "text" : "dashboard",
      "type" : "Struct(dashboard)"
    },
    {
      "refs" : [
        {
          "hash" : "T-gateway-S-gateway",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-gateway-S-gateway-coap-S-coap",
                  "fields" : [
                    {
                      "hash" : "V-gateway-S-gateway-coap-S-coap-heartbeat",
                      "doc" : "The gateway server required minimum heartbeat interval.\nWhen connection mode is enabled, this parameter is used to set the minimum heartbeat interval for the connection to be alive<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "heartbeat",
                      "type" : "Duration(s)",
                      "default" : "\"30s\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-coap-S-coap-connection_required",
                      "doc" : "Enable or disable connection mode.\nConnection mode is a feature of non-standard protocols. When connection mode is enabled, it is necessary to maintain the creation, authentication and alive of connection resources",
                      "text" : "connection_required",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-coap-S-coap-notify_type",
                      "doc" : "The Notification Message will be delivered to the CoAP client if a new message received on an observed topic.\nThe type of delivered coap message can be set to:<br/>\n  - non: Non-confirmable;<br/>\n  - con: Confirmable;<br/>\n  - qos: Mapping from QoS type of received message, QoS0 -> non, QoS1,2 -> con",
                      "text" : "notify_type",
                      "type" : "Enum(non,con,qos)",
                      "default" : "qos"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-coap-S-coap-subscribe_qos",
                      "doc" : "The Default QoS Level indicator for subscribe request.\nThis option specifies the QoS level for the CoAP Client when establishing a subscription membership, if the subscribe request is not carried `qos` option. The indicator can be set to:<br/>\n  - qos0, qos1, qos2: Fixed default QoS level<br/>\n  - coap: Dynamic QoS level by the message type of subscribe request<br/>\n    * qos0: If the subscribe request is non-confirmable<br/>\n    * qos1: If the subscribe request is confirmable",
                      "text" : "subscribe_qos",
                      "type" : "Enum(qos0,qos1,qos2,coap)",
                      "default" : "coap"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-coap-S-coap-publish_qos",
                      "doc" : "The Default QoS Level indicator for publish request.\nThis option specifies the QoS level for the CoAP Client when publishing a message to EMQX PUB/SUB system, if the publish request is not carried `qos` option. The indicator can be set to:<br/>\n  - qos0, qos1, qos2: Fixed default QoS level<br/>\n  - coap: Dynamic QoS level by the message type of publish request<br/>\n    * qos0: If the publish request is non-confirmable<br/>\n    * qos1: If the publish request is confirmable",
                      "text" : "publish_qos",
                      "type" : "Enum(qos0,qos1,qos2,coap)",
                      "default" : "coap"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-coap-S-coap-mountpoint",
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-request",
                                              "doc" : "The content of the request.",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-reply",
                                              "doc" : "The content to reply.",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "UDP health check",
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-health_check",
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "doc" : "Allow local reuse of port numbers.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "doc" : "Settings for UDP sockets.",
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Settings for UDP listener.",
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-udp",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-request",
                                              "doc" : "The content of the request.",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-reply",
                                              "doc" : "The content to reply.",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "UDP health check",
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check",
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "doc" : "Allow local reuse of port numbers.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "doc" : "Settings for UDP sockets.",
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "doc" : "Settings for DTLS protocol.",
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "doc" : "DTLS socket options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "doc" : "Settings for DTLS listener.",
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-coap-S-coap-listeners-S-udp_listeners-dtls",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "doc" : "Settings for the UDP listeners.",
                          "text" : "udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-coap-S-coap-listeners",
                      "text" : "listeners",
                      "type" : "Struct(udp_listeners)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-coap-S-coap-enable_stats",
                      "doc" : "Whether to enable client process statistic",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-coap-S-coap-idle_timeout",
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-username",
                              "doc" : "Template for overriding username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-password",
                              "doc" : "Template for overriding password.",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override-S-clientinfo_override-clientid",
                              "doc" : "Template for overriding clientid.",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "doc" : "ClientInfo override.",
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-coap-S-coap-clientinfo_override",
                      "doc" : "ClientInfo override.",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "doc" : "The CoAP protocol gateway provides EMQX with the access capability of the CoAP protocol.\nIt allows publishing, subscribing, and receiving messages to EMQX in accordance\nwith a certain defined CoAP message format.",
                  "text" : "coap"
                }
              ],
              "hash" : "V-gateway-S-gateway-coap",
              "text" : "coap",
              "type" : "Struct(coap)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-gateway-S-gateway-exproto-S-exproto",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-bind",
                              "doc" : "Listening address and port for the gRPC server.",
                              "text" : "bind",
                              "type" : "String"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-cacertfile",
                                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                      "text" : "cacertfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-cacerts",
                                      "doc" : "Deprecated since 5.1.4.",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-certfile",
                                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                      "text" : "certfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-keyfile",
                                      "doc" : "PEM format private key file.",
                                      "text" : "keyfile",
                                      "type" : "String",
                                      "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-verify",
                                      "doc" : "Enable or disable peer verification.",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-reuse_sessions",
                                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-depth",
                                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-password",
                                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                      "text" : "password",
                                      "type" : "Secret"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-versions",
                                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-ciphers",
                                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-secure_renegotiate",
                                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-log_level",
                                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-hibernate_after",
                                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-partial_chain",
                                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                      "text" : "partial_chain",
                                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-verify_peer_ext_key_usage",
                                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                      "text" : "verify_peer_ext_key_usage",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-dhfile",
                                      "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                      "text" : "dhfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-fail_if_no_peer_cert",
                                      "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                      "text" : "fail_if_no_peer_cert",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-honor_cipher_order",
                                      "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                      "text" : "honor_cipher_order",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-client_renegotiation",
                                      "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "text" : "client_renegotiation",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options-S-ssl_server_opts-handshake_timeout",
                                      "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "handshake_timeout",
                                      "type" : "Duration",
                                      "default" : "\"15s\""
                                    }
                                  ],
                                  "doc" : "SSL configuration for the server.",
                                  "text" : "ssl_server_opts"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-server-S-exproto_grpc_server-ssl_options",
                              "doc" : "SSL configuration for the gRPC server.",
                              "text" : "ssl_options",
                              "type" : "Struct(ssl_server_opts)"
                            }
                          ],
                          "doc" : "Settings for the exproto gRPC server.",
                          "text" : "exproto_grpc_server"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-server",
                      "doc" : "Configurations for starting the <code>ConnectionAdapter</code> service",
                      "text" : "server",
                      "type" : "Struct(exproto_grpc_server)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-address",
                              "doc" : "gRPC server address.",
                              "text" : "address",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-service_name",
                              "doc" : "The service name to handle the connection events.\nIn the initial version, we expected to use streams to improve the efficiency\nof requests in `ConnectionHandler`. But unfortunately, events between different\nstreams are out of order. It causes the `OnSocketCreated` event to may arrive\nlater than `OnReceivedBytes`.\nSo we added the `ConnectionUnaryHandler` service since v5.0.25 and forced\nthe use of Unary in it to avoid ordering problems.",
                              "text" : "service_name",
                              "type" : "OneOf(String(\"ConnectionHandler\"),String(\"ConnectionUnaryHandler\"))",
                              "default" : "ConnectionUnaryHandler"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-cacertfile",
                                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                      "text" : "cacertfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-cacerts",
                                      "doc" : "Deprecated since 5.1.4.",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-certfile",
                                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                      "text" : "certfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-keyfile",
                                      "doc" : "PEM format private key file.",
                                      "text" : "keyfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-verify",
                                      "doc" : "Enable or disable peer verification.",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-reuse_sessions",
                                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-depth",
                                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-password",
                                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                      "text" : "password",
                                      "type" : "Secret"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-versions",
                                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-ciphers",
                                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-secure_renegotiate",
                                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-log_level",
                                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-hibernate_after",
                                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-partial_chain",
                                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                      "text" : "partial_chain",
                                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-verify_peer_ext_key_usage",
                                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                      "text" : "verify_peer_ext_key_usage",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-enable",
                                      "doc" : "Enable TLS.",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-middlebox_comp_mode",
                                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                                      "text" : "middlebox_comp_mode",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options-S-ssl_client_opts-server_name_indication",
                                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                                      "text" : "server_name_indication",
                                      "type" : "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "doc" : "Socket options for SSL clients.",
                                  "text" : "ssl_client_opts"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler-S-exproto_grpc_handler-ssl_options",
                              "doc" : "SSL configuration for the gRPC client.",
                              "text" : "ssl_options",
                              "type" : "Struct(ssl_client_opts)"
                            }
                          ],
                          "doc" : "Settings for the exproto gRPC connection handler.",
                          "text" : "exproto_grpc_handler"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-handler",
                      "doc" : "Configurations for request to <code>ConnectionHandler</code> service",
                      "text" : "handler",
                      "type" : "Struct(exproto_grpc_handler)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-mountpoint",
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp-S-tcp_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Settings for TCP listener.",
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-tcp",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "doc" : "Socket options for SSL connections.",
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "doc" : "SSL Socket options.",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "doc" : "Settings for SSL listener.",
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-ssl",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-request",
                                              "doc" : "The content of the request.",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-reply",
                                              "doc" : "The content to reply.",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "UDP health check",
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-health_check",
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "doc" : "Allow local reuse of port numbers.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "doc" : "Settings for UDP sockets.",
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp-S-udp_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Settings for UDP listener.",
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-udp",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-request",
                                              "doc" : "The content of the request.",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-reply",
                                              "doc" : "The content to reply.",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "UDP health check",
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-health_check",
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "doc" : "Allow local reuse of port numbers.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "doc" : "Settings for UDP sockets.",
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "doc" : "Settings for DTLS protocol.",
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "doc" : "DTLS socket options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "doc" : "Settings for DTLS listener.",
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners-S-tcp_udp_listeners-dtls",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "doc" : "Settings for TCP and UDP listeners.",
                          "text" : "tcp_udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_udp_listeners)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-enable_stats",
                      "doc" : "Whether to enable client process statistic",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-idle_timeout",
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-username",
                              "doc" : "Template for overriding username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-password",
                              "doc" : "Template for overriding password.",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override-S-clientinfo_override-clientid",
                              "doc" : "Template for overriding clientid.",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "doc" : "ClientInfo override.",
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-exproto-S-exproto-clientinfo_override",
                      "doc" : "ClientInfo override.",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "doc" : "Settings for EMQX extension protocol (exproto).",
                  "text" : "exproto"
                }
              ],
              "hash" : "V-gateway-S-gateway-exproto",
              "text" : "exproto",
              "type" : "Struct(exproto)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960",
                  "fields" : [
                    {
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-mountpoint",
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"gbt32960/${clientid}/\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-retry_interval",
                      "doc" : "Re-send time interval<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "retry_interval",
                      "type" : "Duration",
                      "default" : "\"8s\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-max_retry_times",
                      "doc" : "Re-send max times",
                      "text" : "max_retry_times",
                      "type" : "Integer(0..+inf)",
                      "default" : "3"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-message_queue_len",
                      "doc" : "Max message queue length",
                      "text" : "message_queue_len",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp-S-tcp_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Settings for TCP listener.",
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-tcp",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "doc" : "Socket options for SSL connections.",
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "doc" : "SSL Socket options.",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "doc" : "Settings for SSL listener.",
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners-S-tcp_listeners-ssl",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            }
                          ],
                          "doc" : "Settings for the TCP listeners.",
                          "text" : "tcp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_listeners)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-enable_stats",
                      "doc" : "Whether to enable client process statistic",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-idle_timeout",
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override-S-clientinfo_override-username",
                              "doc" : "Template for overriding username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override-S-clientinfo_override-password",
                              "doc" : "Template for overriding password.",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override-S-clientinfo_override-clientid",
                              "doc" : "Template for overriding clientid.",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "doc" : "ClientInfo override.",
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-gbt32960-S-gbt32960-clientinfo_override",
                      "doc" : "ClientInfo override.",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "doc" : "The GBT-32960 gateway",
                  "text" : "gbt32960"
                }
              ],
              "hash" : "V-gateway-S-gateway-gbt32960",
              "text" : "gbt32960",
              "type" : "Struct(gbt32960)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-gateway-S-gateway-jt808-S-jt808",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-frame-S-jt808_frame",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-frame-S-jt808_frame-max_length",
                              "doc" : "The maximum length of the JT/T 808 frame.",
                              "text" : "max_length",
                              "type" : "Integer(0..+inf)",
                              "default" : "8192"
                            }
                          ],
                          "doc" : "Limits for the JT/T 808 frames.",
                          "text" : "jt808_frame"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-frame",
                      "text" : "frame",
                      "type" : "Struct(jt808_frame)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_true",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_true-allow_anonymous",
                                      "doc" : "Allow anonymous access to the JT/T 808 Gateway.",
                                      "text" : "allow_anonymous",
                                      "type" : "OneOf(String(\"true\"))"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_true-registry",
                                      "doc" : "The JT/T 808 device registry central URL.",
                                      "text" : "registry",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_true-authentication",
                                      "doc" : "The JT/T 808 device authentication central URL.",
                                      "text" : "authentication",
                                      "type" : "String"
                                    }
                                  ],
                                  "doc" : "Allow anonymous access to the JT/T 808 Gateway.",
                                  "text" : "anonymous_true"
                                },
                                {
                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_false",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_false-allow_anonymous",
                                      "doc" : "Allow anonymous access to the JT/T 808 Gateway.",
                                      "text" : "allow_anonymous",
                                      "type" : "OneOf(String(\"false\"))"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_false-registry",
                                      "doc" : "The JT/T 808 device registry central URL.",
                                      "text" : "registry",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth-S-anonymous_false-authentication",
                                      "doc" : "The JT/T 808 device authentication central URL.",
                                      "text" : "authentication",
                                      "type" : "String"
                                    }
                                  ],
                                  "doc" : "Allow anonymous access to the JT/T 808 Gateway.",
                                  "text" : "anonymous_false"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-auth",
                              "doc" : "Authentication settings of the JT/T 808 Gateway.",
                              "text" : "auth",
                              "type" : "OneOf(Struct(anonymous_true),Struct(anonymous_false))"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-up_topic",
                              "doc" : "The topic of the JT/T 808 protocol upstream message.",
                              "text" : "up_topic",
                              "type" : "String",
                              "default" : "\"jt808/${clientid}/${phone}/up\""
                            },
                            {
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-dn_topic",
                              "doc" : "The topic of the JT/T 808 protocol downstream message.",
                              "text" : "dn_topic",
                              "type" : "String",
                              "default" : "\"jt808/${clientid}/${phone}/dn\""
                            },
                            {
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto-S-jt808_proto-ignore_unsupported_frames",
                              "doc" : "Whether to ignore unsupported frames. <br/>\n- <code>true</code>, unsupported frames will be logged and ignored. <br/>\n- <code>false</code>, the gateway will disconnect the client when receiving an unsupported frame.<br/>\nThe default value is true.",
                              "text" : "ignore_unsupported_frames",
                              "type" : "Boolean",
                              "default" : "true"
                            }
                          ],
                          "doc" : "The JT/T 808 protocol options.",
                          "text" : "jt808_proto"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-proto",
                      "text" : "proto",
                      "type" : "Struct(jt808_proto)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-mountpoint",
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"jt808/${clientid}/\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-retry_interval",
                      "doc" : "Re-send time interval<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "retry_interval",
                      "type" : "Duration",
                      "default" : "\"8s\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-max_retry_times",
                      "doc" : "Re-send max times",
                      "text" : "max_retry_times",
                      "type" : "Integer(0..+inf)",
                      "default" : "3"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-message_queue_len",
                      "doc" : "Max message queue length",
                      "text" : "message_queue_len",
                      "type" : "Integer(0..+inf)",
                      "default" : "10"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp-S-tcp_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Settings for TCP listener.",
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-tcp",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "doc" : "Socket options for SSL connections.",
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "doc" : "SSL Socket options.",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "doc" : "Settings for SSL listener.",
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners-S-tcp_listeners-ssl",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            }
                          ],
                          "doc" : "Settings for the TCP listeners.",
                          "text" : "tcp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_listeners)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-enable_stats",
                      "doc" : "Whether to enable client process statistic",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-idle_timeout",
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-jt808-S-jt808-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-clientinfo_override-S-clientinfo_override-username",
                              "doc" : "Template for overriding username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-clientinfo_override-S-clientinfo_override-password",
                              "doc" : "Template for overriding password.",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-jt808-S-jt808-clientinfo_override-S-clientinfo_override-clientid",
                              "doc" : "Template for overriding clientid.",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "doc" : "ClientInfo override.",
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-jt808-S-jt808-clientinfo_override",
                      "doc" : "ClientInfo override.",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "doc" : "The JT/T 808 protocol gateway provides EMQX with the ability to access JT/T 808 protocol devices.",
                  "text" : "jt808"
                }
              ],
              "hash" : "V-gateway-S-gateway-jt808",
              "text" : "jt808",
              "type" : "Struct(jt808)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m",
                  "fields" : [
                    {
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-xml_dir",
                      "doc" : "The Directory for LwM2M Resource definition.",
                      "text" : "xml_dir",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-lifetime_min",
                      "doc" : "Minimum value of lifetime allowed to be set by the LwM2M client.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "lifetime_min",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-lifetime_max",
                      "doc" : "Maximum value of lifetime allowed to be set by the LwM2M client.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "lifetime_max",
                      "type" : "Duration",
                      "default" : "\"86400s\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-qmode_time_window",
                      "doc" : "The value of the time window during which the network link is considered valid by the LwM2M Gateway in QMode mode.\nFor example, after receiving an update message from a client, any messages within this time window are sent directly to the LwM2M client, and all messages beyond this time window are temporarily stored in memory.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "qmode_time_window",
                      "type" : "Duration(s)",
                      "default" : "\"22s\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-auto_observe",
                      "doc" : "Automatically observe the object list of REGISTER packet.",
                      "text" : "auto_observe",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-update_msg_publish_condition",
                      "doc" : "Policy for publishing UPDATE event message.<br/>\n  - always: send update events as long as the UPDATE request is received.<br/>\n  - contains_object_list: send update events only if the UPDATE request carries any Object List",
                      "text" : "update_msg_publish_condition",
                      "type" : "Enum(always,contains_object_list)",
                      "default" : "contains_object_list"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator-topic",
                                      "doc" : "Topic Name",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command-S-translator-qos",
                                      "doc" : "QoS Level",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-command",
                              "doc" : "The topic for receiving downstream commands.\nFor each new LwM2M client that succeeds in going online, the gateway creates a subscription relationship to receive downstream commands and send it to the LwM2M client",
                              "text" : "command",
                              "type" : "Struct(translator)"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator-topic",
                                      "doc" : "Topic Name",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response-S-translator-qos",
                                      "doc" : "QoS Level",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-response",
                              "doc" : "The topic for gateway to publish the acknowledge events from LwM2M client",
                              "text" : "response",
                              "type" : "Struct(translator)"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator-topic",
                                      "doc" : "Topic Name",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify-S-translator-qos",
                                      "doc" : "QoS Level",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-notify",
                              "doc" : "The topic for gateway to publish the notify events from LwM2M client.\nAfter succeed observe a resource of LwM2M client, Gateway will send the notify events via this topic, if the client reports any resource changes",
                              "text" : "notify",
                              "type" : "Struct(translator)"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator-topic",
                                      "doc" : "Topic Name",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register-S-translator-qos",
                                      "doc" : "QoS Level",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-register",
                              "doc" : "The topic for gateway to publish the register events from LwM2M client.",
                              "text" : "register",
                              "type" : "Struct(translator)"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator-topic",
                                      "doc" : "Topic Name",
                                      "text" : "topic",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update-S-translator-qos",
                                      "doc" : "QoS Level",
                                      "text" : "qos",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    }
                                  ],
                                  "doc" : "MQTT topic that corresponds to a particular type of event.",
                                  "text" : "translator"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators-S-lwm2m_translators-update",
                              "doc" : "The topic for gateway to publish the update events from LwM2M client",
                              "text" : "update",
                              "type" : "Struct(translator)"
                            }
                          ],
                          "doc" : "MQTT topics that correspond to LwM2M events.",
                          "text" : "lwm2m_translators"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-translators",
                      "doc" : "Topic configuration for LwM2M's gateway publishing and subscription.",
                      "text" : "translators",
                      "type" : "Struct(lwm2m_translators)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-mountpoint",
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"lwm2m/${endpoint_name}/\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-request",
                                              "doc" : "The content of the request.",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-reply",
                                              "doc" : "The content to reply.",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "UDP health check",
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-health_check",
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "doc" : "Allow local reuse of port numbers.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "doc" : "Settings for UDP sockets.",
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Settings for UDP listener.",
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-udp",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-request",
                                              "doc" : "The content of the request.",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-reply",
                                              "doc" : "The content to reply.",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "UDP health check",
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check",
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "doc" : "Allow local reuse of port numbers.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "doc" : "Settings for UDP sockets.",
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "doc" : "Settings for DTLS protocol.",
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "doc" : "DTLS socket options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "doc" : "Settings for DTLS listener.",
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners-S-udp_listeners-dtls",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "doc" : "Settings for the UDP listeners.",
                          "text" : "udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-listeners",
                      "text" : "listeners",
                      "type" : "Struct(udp_listeners)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-enable_stats",
                      "doc" : "Whether to enable client process statistic",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-idle_timeout",
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-username",
                              "doc" : "Template for overriding username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-password",
                              "doc" : "Template for overriding password.",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override-S-clientinfo_override-clientid",
                              "doc" : "Template for overriding clientid.",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "doc" : "ClientInfo override.",
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-lwm2m-S-lwm2m-clientinfo_override",
                      "doc" : "ClientInfo override.",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "doc" : "The LwM2M protocol gateway.",
                  "text" : "lwm2m"
                }
              ],
              "hash" : "V-gateway-S-gateway-lwm2m",
              "text" : "lwm2m",
              "type" : "Struct(lwm2m)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn",
                  "fields" : [
                    {
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-gateway_id",
                      "doc" : "MQTT-SN Gateway ID.\nWhen the <code>broadcast</code> option is enabled, the gateway will broadcast ADVERTISE message with this value",
                      "text" : "gateway_id",
                      "type" : "Integer",
                      "default" : "1"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-broadcast",
                      "doc" : "Whether to periodically broadcast ADVERTISE messages",
                      "text" : "broadcast",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-enable_qos3",
                      "doc" : "Allows connectionless clients to publish messages with a Qos of -1.\nThis feature is defined for very simple client implementations which do not support any other features except this one. There is no connection setup nor tear down, no registration nor subscription. The client just sends its 'PUBLISH' messages to a GW",
                      "text" : "enable_qos3",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-subs_resume",
                      "doc" : "Whether to initiate all subscribed topic name registration messages to the client after the Session has been taken over by a new channel",
                      "text" : "subs_resume",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined-id",
                              "doc" : "Topic ID. Range: 1-65535",
                              "text" : "id",
                              "type" : "Integer(1..1024)"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined-S-mqttsn_predefined-topic",
                              "doc" : "Topic Name",
                              "text" : "topic",
                              "type" : "String"
                            }
                          ],
                          "doc" : "The pre-defined topic name corresponding to the pre-defined topic\nID of N.\n\nNote: the pre-defined topic ID of 0 is reserved.",
                          "text" : "mqttsn_predefined"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-predefined",
                      "doc" : "The pre-defined topic IDs and topic names.\nA 'pre-defined' topic ID is a topic ID whose mapping to a topic name is known in advance by both the client's application and the gateway",
                      "text" : "predefined",
                      "type" : "Array(Struct(mqttsn_predefined))",
                      "default" : "[]"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-mountpoint",
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-request",
                                              "doc" : "The content of the request.",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-health_check-S-udp_health_check-reply",
                                              "doc" : "The content to reply.",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "UDP health check",
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-health_check",
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-recbuf",
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-sndbuf",
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-buffer",
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options-S-udp_opts-reuseaddr",
                                              "doc" : "Allow local reuse of port numbers.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "doc" : "Settings for UDP sockets.",
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp-S-udp_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Settings for UDP listener.",
                                  "text" : "udp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-udp",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "udp",
                              "type" : "Map($name->Struct(udp_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-request",
                                              "doc" : "The content of the request.",
                                              "text" : "request",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check-S-udp_health_check-reply",
                                              "doc" : "The content to reply.",
                                              "text" : "reply",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "UDP health check",
                                          "text" : "udp_health_check"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-health_check",
                                      "doc" : "Some Cloud platform use a `request-reply` mechanism to check whether a UDP port is healthy, here can configure this pair.",
                                      "text" : "health_check",
                                      "type" : "Struct(udp_health_check)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for the socket.\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-recbuf",
                                              "doc" : "Size of the kernel-space receive buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-sndbuf",
                                              "doc" : "Size of the kernel-space send buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-buffer",
                                              "doc" : "Size of the user-space buffer for the socket.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options-S-udp_opts-reuseaddr",
                                              "doc" : "Allow local reuse of port numbers.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            }
                                          ],
                                          "doc" : "Settings for UDP sockets.",
                                          "text" : "udp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-udp_options",
                                      "text" : "udp_options",
                                      "type" : "Struct(udp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"dtlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-gc_after_handshake",
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-responder_url",
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-issuer_pem",
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_interval",
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options-S-dtls_opts-enable_crl_check",
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "doc" : "Settings for DTLS protocol.",
                                          "text" : "dtls_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls-S-dtls_listener-dtls_options",
                                      "doc" : "DTLS socket options",
                                      "text" : "dtls_options",
                                      "type" : "Struct(dtls_opts)"
                                    }
                                  ],
                                  "doc" : "Settings for DTLS listener.",
                                  "text" : "dtls_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners-S-udp_listeners-dtls",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "dtls",
                              "type" : "Map($name->Struct(dtls_listener))"
                            }
                          ],
                          "doc" : "Settings for the UDP listeners.",
                          "text" : "udp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-listeners",
                      "text" : "listeners",
                      "type" : "Struct(udp_listeners)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-enable_stats",
                      "doc" : "Whether to enable client process statistic",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-idle_timeout",
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-username",
                              "doc" : "Template for overriding username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-password",
                              "doc" : "Template for overriding password.",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override-S-clientinfo_override-clientid",
                              "doc" : "Template for overriding clientid.",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "doc" : "ClientInfo override.",
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-mqttsn-S-mqttsn-clientinfo_override",
                      "doc" : "ClientInfo override.",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "doc" : "The MQTT-SN (MQTT for Sensor Networks) protocol gateway.",
                  "text" : "mqttsn"
                }
              ],
              "hash" : "V-gateway-S-gateway-mqttsn",
              "text" : "mqttsn",
              "type" : "Struct(mqttsn)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp",
                  "fields" : [
                    {
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-mountpoint",
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"ocpp/\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-default_heartbeat_interval",
                      "doc" : "The default Heartbeat time interval<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "default_heartbeat_interval",
                      "type" : "Duration(s)",
                      "default" : "\"60s\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-heartbeat_checking_times_backoff",
                      "doc" : "The backoff for heartbeat checking times",
                      "text" : "heartbeat_checking_times_backoff",
                      "type" : "Integer",
                      "default" : "1"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream-topic",
                              "doc" : "The topic for Upload stream Call Request messages.",
                              "text" : "topic",
                              "type" : "String",
                              "default" : "\"cp/${cid}\""
                            },
                            {
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream-topic_override_mapping",
                              "doc" : "Upload stream topic override mapping by Message Name.",
                              "text" : "topic_override_mapping",
                              "type" : "Map($name->String)",
                              "default" : "{}"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream-reply_topic",
                              "doc" : "The topic for Upload stream Reply messages.",
                              "text" : "reply_topic",
                              "type" : "String",
                              "default" : "\"cp/${cid}/Reply\""
                            },
                            {
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream-S-upstream-error_topic",
                              "doc" : "The topic for Upload stream error topic.",
                              "text" : "error_topic",
                              "type" : "String",
                              "default" : "\"cp/${cid}/Reply\""
                            }
                          ],
                          "doc" : "Upload stream topic to notify third-party system what's messages/events reported by Charge Point. Available placeholders:\n- <code>cid</code>: Charge Point ID\n- <code>clientid</code>: Equal to Charge Point ID\n- <code>action</code>: Message Name in OCPP",
                          "text" : "upstream"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-upstream",
                      "text" : "upstream",
                      "type" : "Struct(upstream)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-dnstream-S-dnstream",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-dnstream-S-dnstream-topic",
                              "doc" : "Download stream topic to receive request/control messages from third-party system.\nThis value is a wildcard topic name that subscribed by every connected Charge Point.",
                              "text" : "topic",
                              "type" : "String",
                              "default" : "\"cs/${cid}\""
                            },
                            {
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-dnstream-S-dnstream-max_mqueue_len",
                              "doc" : "The maximum message queue length for download stream message delivery.",
                              "text" : "max_mqueue_len",
                              "type" : "Integer",
                              "default" : "100"
                            }
                          ],
                          "doc" : "Download stream topic to forward the system message to device. Available placeholders:\n- <code>cid</code>: Charge Point ID\n- <code>clientid</code>: Equal to Charge Point ID\n- <code>action</code>: Message Name in OCPP",
                          "text" : "dnstream"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-dnstream",
                      "text" : "dnstream",
                      "type" : "Struct(dnstream)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-message_format_checking",
                      "doc" : "Whether to enable message format legality checking.\nEMQX checks the message format of the upload stream and download stream against the\nformat defined in json-schema.\nWhen the check fails, emqx will reply with a corresponding answer message.\n\nThe checking strategy can be one of the following values:\n- <code>all</code>: check all messages\n- <code>upstream_only</code>: check upload stream messages only\n- <code>dnstream_only</code>: check download stream messages only\n- <code>disable</code>: don't check any messages",
                      "text" : "message_format_checking",
                      "type" : "OneOf(String(\"all\"),String(\"upstream_only\"),String(\"dnstream_only\"),String(\"disable\"))",
                      "default" : "disable"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-json_schema_dir",
                      "doc" : "JSON Schema directory for OCPP message definitions.\nDefault: ${application}/priv/schemas",
                      "text" : "json_schema_dir",
                      "type" : "String",
                      "default" : "\"${application_priv}/schemas\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-json_schema_id_prefix",
                      "doc" : "The ID prefix for the OCPP message schemas.",
                      "text" : "json_schema_id_prefix",
                      "type" : "String",
                      "default" : "\"urn:OCPP:1.6:2019:12:\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-path",
                                              "doc" : "WebSocket's MQTT protocol path. So the address of EMQX Broker's WebSocket is:\n<code>ws://{ip}:{port}/mqtt</code>",
                                              "text" : "path",
                                              "type" : "String",
                                              "default" : "\"/ocpp\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-piggyback",
                                              "doc" : "Whether a WebSocket message is allowed to contain multiple MQTT packets.",
                                              "text" : "piggyback",
                                              "type" : "Enum(single,multiple)",
                                              "default" : "single"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-compress",
                                              "doc" : "If <code>true</code>, compress WebSocket messages using <code>zlib</code>.<br/>\nThe configuration items under <code>deflate_opts</code> belong to the compression-related parameter configuration.",
                                              "text" : "compress",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-idle_timeout",
                                              "doc" : "The timeout for waiting for the WebSocket upgrade request. After the timeout, the connection will be closed.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "idle_timeout",
                                              "type" : "Duration",
                                              "default" : "\"7200s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-max_frame_size",
                                              "doc" : "The maximum length of a single MQTT packet.",
                                              "text" : "max_frame_size",
                                              "type" : "OneOf(String(\"infinity\"),Integer)",
                                              "default" : "infinity"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-fail_if_no_subprotocol",
                                              "doc" : "If <code>true</code>, the server will return an error when\n the client does not carry the <code>Sec-WebSocket-Protocol</code> field.\n <br/>Note: WeChat applet needs to disable this verification.",
                                              "text" : "fail_if_no_subprotocol",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-supported_subprotocols",
                                              "doc" : "Comma-separated list of supported subprotocols.",
                                              "text" : "supported_subprotocols",
                                              "type" : "String",
                                              "default" : "\"ocpp1.6, ocpp2.0\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-check_origin_enable",
                                              "doc" : "If <code>true</code>, <code>origin</code> HTTP header will be\n validated against the list of allowed origins configured in <code>check_origins</code>\n parameter.",
                                              "text" : "check_origin_enable",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-allow_origin_absence",
                                              "doc" : "If <code>false</code> and <code>check_origin_enable</code> is\n <code>true</code>, the server will reject requests that don't have <code>origin</code>\n HTTP header.",
                                              "text" : "allow_origin_absence",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-check_origins",
                                              "doc" : "List of allowed origins.<br/>See <code>check_origin_enable</code>.",
                                              "text" : "check_origins",
                                              "type" : "String",
                                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-proxy_address_header",
                                              "doc" : "HTTP header used to pass information about the client IP address.\nRelevant when the EMQX cluster is deployed behind a load-balancer.",
                                              "text" : "proxy_address_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-for\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-proxy_port_header",
                                              "doc" : "HTTP header used to pass information about the client port. Relevant when the EMQX cluster is deployed behind a load-balancer.",
                                              "text" : "proxy_port_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-port\""
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-level",
                                                      "doc" : "Compression level.",
                                                      "text" : "level",
                                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-mem_level",
                                                      "doc" : "Specifies the size of the compression state.<br/>\nLower values decrease memory usage per connection.",
                                                      "text" : "mem_level",
                                                      "type" : "Integer(1..9)",
                                                      "default" : "8"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-strategy",
                                                      "doc" : "Specifies the compression strategy.",
                                                      "text" : "strategy",
                                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                                      "default" : "default"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_context_takeover",
                                                      "doc" : "Takeover means the compression state is retained between server messages.",
                                                      "text" : "server_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_context_takeover",
                                                      "doc" : "Takeover means the compression state is retained between client messages.",
                                                      "text" : "client_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_max_window_bits",
                                                      "doc" : "Specifies the size of the compression context for the server.",
                                                      "text" : "server_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_max_window_bits",
                                                      "doc" : "Specifies the size of the compression context for the client.",
                                                      "text" : "client_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    }
                                                  ],
                                                  "doc" : "Compression options.",
                                                  "text" : "deflate_opts"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts",
                                              "text" : "deflate_opts",
                                              "type" : "Struct(deflate_opts)"
                                            }
                                          ],
                                          "doc" : "Websocket options",
                                          "text" : "websocket"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws-S-ws_listener-websocket",
                                      "text" : "websocket",
                                      "type" : "Struct(websocket)"
                                    }
                                  ],
                                  "doc" : "Websocket listener",
                                  "text" : "ws_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-ws",
                              "doc" : "Websocket listener.",
                              "text" : "ws",
                              "type" : "Map($name->Struct(ws_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            }
                                          ],
                                          "doc" : "Socket options for WebSocket/SSL connections.",
                                          "text" : "listener_wss_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-ssl_options",
                                      "doc" : "SSL Socket options.",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_wss_opts)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-path",
                                              "doc" : "WebSocket's MQTT protocol path. So the address of EMQX Broker's WebSocket is:\n<code>ws://{ip}:{port}/mqtt</code>",
                                              "text" : "path",
                                              "type" : "String",
                                              "default" : "\"/ocpp\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-piggyback",
                                              "doc" : "Whether a WebSocket message is allowed to contain multiple MQTT packets.",
                                              "text" : "piggyback",
                                              "type" : "Enum(single,multiple)",
                                              "default" : "single"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-compress",
                                              "doc" : "If <code>true</code>, compress WebSocket messages using <code>zlib</code>.<br/>\nThe configuration items under <code>deflate_opts</code> belong to the compression-related parameter configuration.",
                                              "text" : "compress",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-idle_timeout",
                                              "doc" : "The timeout for waiting for the WebSocket upgrade request. After the timeout, the connection will be closed.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "idle_timeout",
                                              "type" : "Duration",
                                              "default" : "\"7200s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-max_frame_size",
                                              "doc" : "The maximum length of a single MQTT packet.",
                                              "text" : "max_frame_size",
                                              "type" : "OneOf(String(\"infinity\"),Integer)",
                                              "default" : "infinity"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-fail_if_no_subprotocol",
                                              "doc" : "If <code>true</code>, the server will return an error when\n the client does not carry the <code>Sec-WebSocket-Protocol</code> field.\n <br/>Note: WeChat applet needs to disable this verification.",
                                              "text" : "fail_if_no_subprotocol",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-supported_subprotocols",
                                              "doc" : "Comma-separated list of supported subprotocols.",
                                              "text" : "supported_subprotocols",
                                              "type" : "String",
                                              "default" : "\"ocpp1.6, ocpp2.0\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-check_origin_enable",
                                              "doc" : "If <code>true</code>, <code>origin</code> HTTP header will be\n validated against the list of allowed origins configured in <code>check_origins</code>\n parameter.",
                                              "text" : "check_origin_enable",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-allow_origin_absence",
                                              "doc" : "If <code>false</code> and <code>check_origin_enable</code> is\n <code>true</code>, the server will reject requests that don't have <code>origin</code>\n HTTP header.",
                                              "text" : "allow_origin_absence",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-check_origins",
                                              "doc" : "List of allowed origins.<br/>See <code>check_origin_enable</code>.",
                                              "text" : "check_origins",
                                              "type" : "String",
                                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-proxy_address_header",
                                              "doc" : "HTTP header used to pass information about the client IP address.\nRelevant when the EMQX cluster is deployed behind a load-balancer.",
                                              "text" : "proxy_address_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-for\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-proxy_port_header",
                                              "doc" : "HTTP header used to pass information about the client port. Relevant when the EMQX cluster is deployed behind a load-balancer.",
                                              "text" : "proxy_port_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-port\""
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-level",
                                                      "doc" : "Compression level.",
                                                      "text" : "level",
                                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-mem_level",
                                                      "doc" : "Specifies the size of the compression state.<br/>\nLower values decrease memory usage per connection.",
                                                      "text" : "mem_level",
                                                      "type" : "Integer(1..9)",
                                                      "default" : "8"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-strategy",
                                                      "doc" : "Specifies the compression strategy.",
                                                      "text" : "strategy",
                                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                                      "default" : "default"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_context_takeover",
                                                      "doc" : "Takeover means the compression state is retained between server messages.",
                                                      "text" : "server_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_context_takeover",
                                                      "doc" : "Takeover means the compression state is retained between client messages.",
                                                      "text" : "client_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_max_window_bits",
                                                      "doc" : "Specifies the size of the compression context for the server.",
                                                      "text" : "server_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_max_window_bits",
                                                      "doc" : "Specifies the size of the compression context for the client.",
                                                      "text" : "client_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    }
                                                  ],
                                                  "doc" : "Compression options.",
                                                  "text" : "deflate_opts"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts",
                                              "text" : "deflate_opts",
                                              "type" : "Struct(deflate_opts)"
                                            }
                                          ],
                                          "doc" : "Websocket options",
                                          "text" : "websocket"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss-S-wss_listener-websocket",
                                      "text" : "websocket",
                                      "type" : "Struct(websocket)"
                                    }
                                  ],
                                  "doc" : "Websocket over TLS listener",
                                  "text" : "wss_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners-S-ws_listeners-wss",
                              "doc" : "Websocket over TLS listener.",
                              "text" : "wss",
                              "type" : "Map($name->Struct(wss_listener))"
                            }
                          ],
                          "doc" : "Websocket listeners",
                          "text" : "ws_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-listeners",
                      "text" : "listeners",
                      "type" : "Struct(ws_listeners)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-enable_stats",
                      "doc" : "Whether to enable client process statistic",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-idle_timeout",
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override-S-clientinfo_override-username",
                              "doc" : "Template for overriding username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override-S-clientinfo_override-password",
                              "doc" : "Template for overriding password.",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override-S-clientinfo_override-clientid",
                              "doc" : "Template for overriding clientid.",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "doc" : "ClientInfo override.",
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-ocpp-S-ocpp-clientinfo_override",
                      "doc" : "ClientInfo override.",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "doc" : "The OCPP gateway",
                  "text" : "ocpp"
                }
              ],
              "hash" : "V-gateway-S-gateway-ocpp",
              "text" : "ocpp",
              "type" : "Struct(ocpp)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-gateway-S-gateway-stomp-S-stomp",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_headers",
                              "doc" : "The maximum number of Header",
                              "text" : "max_headers",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_headers_length",
                              "doc" : "The maximum string length of the Header Value",
                              "text" : "max_headers_length",
                              "type" : "Integer(0..+inf)",
                              "default" : "1024"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame-S-stomp_frame-max_body_length",
                              "doc" : "Maximum number of bytes of Body allowed per Stomp packet",
                              "text" : "max_body_length",
                              "type" : "Integer",
                              "default" : "65536"
                            }
                          ],
                          "doc" : "Size limits for the STOMP frames.",
                          "text" : "stomp_frame"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-frame",
                      "text" : "frame",
                      "type" : "Struct(stomp_frame)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-mountpoint",
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp-S-tcp_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Settings for TCP listener.",
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-tcp",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "doc" : "Socket options for SSL connections.",
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl-S-ssl_listener-ssl_options",
                                      "doc" : "SSL Socket options.",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "doc" : "Settings for SSL listener.",
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners-S-tcp_listeners-ssl",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            }
                          ],
                          "doc" : "Settings for the TCP listeners.",
                          "text" : "tcp_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_listeners)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-enable_stats",
                      "doc" : "Whether to enable client process statistic",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-idle_timeout",
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-username",
                              "doc" : "Template for overriding username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-password",
                              "doc" : "Template for overriding password.",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override-S-clientinfo_override-clientid",
                              "doc" : "Template for overriding clientid.",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "doc" : "ClientInfo override.",
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-stomp-S-stomp-clientinfo_override",
                      "doc" : "ClientInfo override.",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "doc" : "The STOMP protocol gateway provides EMQX with the ability to access STOMP\n(Simple (or Streaming) Text Orientated Messaging Protocol) protocol.",
                  "text" : "stomp"
                }
              ],
              "hash" : "V-gateway-S-gateway-stomp",
              "text" : "stomp",
              "type" : "Struct(stomp)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-gateway-S-gateway-nats-S-nats",
                  "fields" : [
                    {
                      "hash" : "V-gateway-S-gateway-nats-S-nats-server_id",
                      "doc" : "Server ID.",
                      "text" : "server_id",
                      "type" : "String",
                      "default" : "emqx_nats_gateway"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-nats-S-nats-server_name",
                      "doc" : "Server Name.",
                      "text" : "server_name",
                      "type" : "String",
                      "default" : "emqx_nats_gateway"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-nats-S-nats-default_heartbeat_interval",
                      "doc" : "Default heartbeat interval for server-to-client PING messages. Default: 30.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "default_heartbeat_interval",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "hash" : "V-gateway-S-gateway-nats-S-nats-heartbeat_wait_timeout",
                      "doc" : "Heartbeat timeout threshold. The server will mark a client as offline\nif no heartbeat response is received within this period. Default: 5s.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "heartbeat_wait_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-nats-S-nats-protocol-S-protocol",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-nats-S-nats-protocol-S-protocol-max_payload_size",
                              "doc" : "The maximum number of bytes of Payload allowed per NATS PUB/HPUB message.",
                              "text" : "max_payload_size",
                              "type" : "Integer(0..+inf)",
                              "default" : "1048576"
                            }
                          ],
                          "doc" : "A group of settings for NATS Server protocol.",
                          "text" : "protocol"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-nats-S-nats-protocol",
                      "text" : "protocol",
                      "type" : "Struct(protocol)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-nats-S-nats-mountpoint",
                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                      "text" : "mountpoint",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-path",
                                              "doc" : "WebSocket's MQTT protocol path. So the address of EMQX Broker's WebSocket is:\n<code>ws://{ip}:{port}/mqtt</code>",
                                              "text" : "path",
                                              "type" : "String",
                                              "default" : "\"\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-piggyback",
                                              "doc" : "Whether a WebSocket message is allowed to contain multiple MQTT packets.",
                                              "text" : "piggyback",
                                              "type" : "Enum(single,multiple)",
                                              "default" : "single"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-compress",
                                              "doc" : "If <code>true</code>, compress WebSocket messages using <code>zlib</code>.<br/>\nThe configuration items under <code>deflate_opts</code> belong to the compression-related parameter configuration.",
                                              "text" : "compress",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-idle_timeout",
                                              "doc" : "The timeout for waiting for the WebSocket upgrade request. After the timeout, the connection will be closed.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "idle_timeout",
                                              "type" : "Duration",
                                              "default" : "\"7200s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-max_frame_size",
                                              "doc" : "The maximum length of a single MQTT packet.",
                                              "text" : "max_frame_size",
                                              "type" : "OneOf(String(\"infinity\"),Integer)",
                                              "default" : "infinity"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-fail_if_no_subprotocol",
                                              "doc" : "If <code>true</code>, the server will return an error when\n the client does not carry the <code>Sec-WebSocket-Protocol</code> field.\n <br/>Note: WeChat applet needs to disable this verification.",
                                              "text" : "fail_if_no_subprotocol",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-supported_subprotocols",
                                              "doc" : "Comma-separated list of supported subprotocols.",
                                              "text" : "supported_subprotocols",
                                              "type" : "String",
                                              "default" : "\"NATS/1.0, NATS\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-check_origin_enable",
                                              "doc" : "If <code>true</code>, <code>origin</code> HTTP header will be\n validated against the list of allowed origins configured in <code>check_origins</code>\n parameter.",
                                              "text" : "check_origin_enable",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-allow_origin_absence",
                                              "doc" : "If <code>false</code> and <code>check_origin_enable</code> is\n <code>true</code>, the server will reject requests that don't have <code>origin</code>\n HTTP header.",
                                              "text" : "allow_origin_absence",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-check_origins",
                                              "doc" : "List of allowed origins.<br/>See <code>check_origin_enable</code>.",
                                              "text" : "check_origins",
                                              "type" : "String",
                                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-proxy_address_header",
                                              "doc" : "HTTP header used to pass information about the client IP address.\nRelevant when the EMQX cluster is deployed behind a load-balancer.",
                                              "text" : "proxy_address_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-for\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-proxy_port_header",
                                              "doc" : "HTTP header used to pass information about the client port. Relevant when the EMQX cluster is deployed behind a load-balancer.",
                                              "text" : "proxy_port_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-port\""
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-level",
                                                      "doc" : "Compression level.",
                                                      "text" : "level",
                                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-mem_level",
                                                      "doc" : "Specifies the size of the compression state.<br/>\nLower values decrease memory usage per connection.",
                                                      "text" : "mem_level",
                                                      "type" : "Integer(1..9)",
                                                      "default" : "8"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-strategy",
                                                      "doc" : "Specifies the compression strategy.",
                                                      "text" : "strategy",
                                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                                      "default" : "default"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_context_takeover",
                                                      "doc" : "Takeover means the compression state is retained between server messages.",
                                                      "text" : "server_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_context_takeover",
                                                      "doc" : "Takeover means the compression state is retained between client messages.",
                                                      "text" : "client_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_max_window_bits",
                                                      "doc" : "Specifies the size of the compression context for the server.",
                                                      "text" : "server_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_max_window_bits",
                                                      "doc" : "Specifies the size of the compression context for the client.",
                                                      "text" : "client_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    }
                                                  ],
                                                  "doc" : "Compression options.",
                                                  "text" : "deflate_opts"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket-S-websocket-deflate_opts",
                                              "text" : "deflate_opts",
                                              "type" : "Struct(deflate_opts)"
                                            }
                                          ],
                                          "doc" : "Websocket Options.",
                                          "text" : "websocket"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-websocket",
                                      "text" : "websocket",
                                      "type" : "Struct(websocket)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws-S-ws_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Websocket Listener.",
                                  "text" : "ws_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ws",
                              "doc" : "Websocket Listener.",
                              "text" : "ws",
                              "type" : "Map($name->Struct(ws_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-path",
                                              "doc" : "WebSocket's MQTT protocol path. So the address of EMQX Broker's WebSocket is:\n<code>ws://{ip}:{port}/mqtt</code>",
                                              "text" : "path",
                                              "type" : "String",
                                              "default" : "\"\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-piggyback",
                                              "doc" : "Whether a WebSocket message is allowed to contain multiple MQTT packets.",
                                              "text" : "piggyback",
                                              "type" : "Enum(single,multiple)",
                                              "default" : "single"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-compress",
                                              "doc" : "If <code>true</code>, compress WebSocket messages using <code>zlib</code>.<br/>\nThe configuration items under <code>deflate_opts</code> belong to the compression-related parameter configuration.",
                                              "text" : "compress",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-idle_timeout",
                                              "doc" : "The timeout for waiting for the WebSocket upgrade request. After the timeout, the connection will be closed.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "idle_timeout",
                                              "type" : "Duration",
                                              "default" : "\"7200s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-max_frame_size",
                                              "doc" : "The maximum length of a single MQTT packet.",
                                              "text" : "max_frame_size",
                                              "type" : "OneOf(String(\"infinity\"),Integer)",
                                              "default" : "infinity"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-fail_if_no_subprotocol",
                                              "doc" : "If <code>true</code>, the server will return an error when\n the client does not carry the <code>Sec-WebSocket-Protocol</code> field.\n <br/>Note: WeChat applet needs to disable this verification.",
                                              "text" : "fail_if_no_subprotocol",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-supported_subprotocols",
                                              "doc" : "Comma-separated list of supported subprotocols.",
                                              "text" : "supported_subprotocols",
                                              "type" : "String",
                                              "default" : "\"NATS/1.0, NATS\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-check_origin_enable",
                                              "doc" : "If <code>true</code>, <code>origin</code> HTTP header will be\n validated against the list of allowed origins configured in <code>check_origins</code>\n parameter.",
                                              "text" : "check_origin_enable",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-allow_origin_absence",
                                              "doc" : "If <code>false</code> and <code>check_origin_enable</code> is\n <code>true</code>, the server will reject requests that don't have <code>origin</code>\n HTTP header.",
                                              "text" : "allow_origin_absence",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-check_origins",
                                              "doc" : "List of allowed origins.<br/>See <code>check_origin_enable</code>.",
                                              "text" : "check_origins",
                                              "type" : "String",
                                              "default" : "\"http://localhost:18083, http://127.0.0.1:18083\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-proxy_address_header",
                                              "doc" : "HTTP header used to pass information about the client IP address.\nRelevant when the EMQX cluster is deployed behind a load-balancer.",
                                              "text" : "proxy_address_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-for\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-proxy_port_header",
                                              "doc" : "HTTP header used to pass information about the client port. Relevant when the EMQX cluster is deployed behind a load-balancer.",
                                              "text" : "proxy_port_header",
                                              "type" : "String",
                                              "default" : "\"x-forwarded-port\""
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-level",
                                                      "doc" : "Compression level.",
                                                      "text" : "level",
                                                      "type" : "Enum(none,default,best_compression,best_speed)"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-mem_level",
                                                      "doc" : "Specifies the size of the compression state.<br/>\nLower values decrease memory usage per connection.",
                                                      "text" : "mem_level",
                                                      "type" : "Integer(1..9)",
                                                      "default" : "8"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-strategy",
                                                      "doc" : "Specifies the compression strategy.",
                                                      "text" : "strategy",
                                                      "type" : "Enum(default,filtered,huffman_only,rle)",
                                                      "default" : "default"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_context_takeover",
                                                      "doc" : "Takeover means the compression state is retained between server messages.",
                                                      "text" : "server_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_context_takeover",
                                                      "doc" : "Takeover means the compression state is retained between client messages.",
                                                      "text" : "client_context_takeover",
                                                      "type" : "Enum(takeover,no_takeover)",
                                                      "default" : "takeover"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-server_max_window_bits",
                                                      "doc" : "Specifies the size of the compression context for the server.",
                                                      "text" : "server_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts-S-deflate_opts-client_max_window_bits",
                                                      "doc" : "Specifies the size of the compression context for the client.",
                                                      "text" : "client_max_window_bits",
                                                      "type" : "Integer(8..15)",
                                                      "default" : "15"
                                                    }
                                                  ],
                                                  "doc" : "Compression options.",
                                                  "text" : "deflate_opts"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket-S-websocket-deflate_opts",
                                              "text" : "deflate_opts",
                                              "type" : "Struct(deflate_opts)"
                                            }
                                          ],
                                          "doc" : "Websocket Options.",
                                          "text" : "websocket"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-websocket",
                                      "text" : "websocket",
                                      "type" : "Struct(websocket)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options-S-listener_wss_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            }
                                          ],
                                          "doc" : "Socket options for WebSocket/SSL connections.",
                                          "text" : "listener_wss_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss-S-wss_listener-ssl_options",
                                      "doc" : "SSL Socket options.",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_wss_opts)"
                                    }
                                  ],
                                  "doc" : "Websocket over TLS Listener.",
                                  "text" : "wss_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-wss",
                              "doc" : "Websocket over TLS Listener.",
                              "text" : "wss",
                              "type" : "Map($name->Struct(wss_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp-S-tcp_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    }
                                  ],
                                  "doc" : "Settings for TCP listener.",
                                  "text" : "tcp_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-tcp",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "tcp",
                              "type" : "Map($name->Struct(tcp_listener))"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener",
                                  "fields" : [
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-acceptors",
                                      "doc" : "Size of the acceptor pool.",
                                      "text" : "acceptors",
                                      "type" : "Integer",
                                      "default" : "16"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-active_n",
                                              "doc" : "Specify the {active, N} option for this Socket.<br/>\nSee: https://erlang.org/doc/man/inet.html#setopts-2",
                                              "text" : "active_n",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "100"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-backlog",
                                              "doc" : "TCP backlog defines the maximum length that the queue of\npending connections can grow to.",
                                              "text" : "backlog",
                                              "type" : "Integer(1..+inf)",
                                              "default" : "1024"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout",
                                              "doc" : "The maximum time a process is suspended for sending data to a busy socket. After the timeout, the TCP connection and the process will be closed.\n\nThe process is unsuspended only when the socket is unbusy, that is, the data accumulated in the Erlang internal buffer drops from the high watermark (specified by `high_watermark`) to the low watermark (default 4 KB).\n\nTherefore, `(high_watermark - 4 KB) / send_timeout` must be a suitable message outflow speed, otherwise the suspended process will never be able to recover before the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "send_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-send_timeout_close",
                                              "doc" : "Close the connection if send timeout.",
                                              "text" : "send_timeout_close",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-recbuf",
                                              "doc" : "The TCP receive buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "recbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-sndbuf",
                                              "doc" : "The TCP send buffer (OS kernel) for the connections.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "sndbuf",
                                              "type" : "Bytesize"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-buffer",
                                              "doc" : "The size of the user-space buffer used by the driver.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "buffer",
                                              "type" : "Bytesize",
                                              "default" : "\"4KB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-high_watermark",
                                              "doc" : "When EMQX tries to send more data than the OS has allocated for the socket's send buffer, the remaining data will be temporarily stored in Erlang's internal buffer and then sent in the background.\n\nIf the amount of data queued in the internal buffer exceeds `high_watermark`, the corresponding socket will be marked as busy.\n\nThe process sending data to this busy socket will be suspended until the socket is no longer busy, or the suspension time exceeds `send_timeout`.\n\nThe socket will only be unbusy when the data in the internal buffer is below the low watermark.\n\nWhile the process is suspended, the message queue of the process may accumulate, see `max_mailbox_len` for details.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "high_watermark",
                                              "type" : "Bytesize",
                                              "default" : "\"1MB\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nodelay",
                                              "doc" : "The `TCP_NODELAY` flag for the connections.\nWhen set to `true`, data is sent immediately, regardless of size.",
                                              "text" : "nodelay",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-nolinger",
                                              "doc" : "When enabled, `SO_LINGER` flag is set as `(onoff=1, linger=0)`, which means the TCP socket is to be closed immediately by sending a TCP-RST packet,\ndiscarding any unsent data and skipping the graceful close steps, including CLOSE_WAIT, FIN_WAIT, and TIME_WAIT.",
                                              "text" : "nolinger",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-reuseaddr",
                                              "doc" : "The SO_REUSEADDR flag for the connections.",
                                              "text" : "reuseaddr",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options-S-tcp_opts-keepalive",
                                              "doc" : "Enable TCP keepalive for MQTT connections over TCP or SSL.\nUse three comma-separated numbers to configure (in seconds): 'Idle,Interval,Probes'\n - Idle: The number of seconds a connection needs to be idle before the server begins to send out keep-alive probes (Linux default 7200).\n - Interval: The number of seconds between TCP keep-alive probes (Linux default 75).\n - Probes: The maximum number of TCP keep-alive probes to send before giving up and killing the connection if no response is obtained from the other end (Linux default 9).\nFor example \"240,30,5\" means: EMQX should start sending TCP keepalive probes after the connection is in idle for 240 seconds, and the probes are sent every 30 seconds until a response is received from the MQTT client, if it misses 5 consecutive responses, EMQX should close the connection.\nDefault: 'none', Set to 'none' to use OS default keepalive settings (still active, not disabled).",
                                              "text" : "keepalive",
                                              "type" : "String",
                                              "default" : "none"
                                            }
                                          ],
                                          "doc" : "TCP listener options.",
                                          "text" : "tcp_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-tcp_options",
                                      "doc" : "Setting the TCP socket options.",
                                      "text" : "tcp_options",
                                      "type" : "Struct(tcp_opts)"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-proxy_protocol",
                                      "doc" : "If a reverse proxy is deployed for EMQX, and the PROXY protocol is enabled at the proxy to pass the client's real IP,\nthis option needs to be turned on so that EMQX can extract the client's real IP from the PROXY protocol header.\nEMQX will automatically detect the version of the PROXY protocol and support V1 and V2.\n\nFor a detailed description of the PROXY protocol, please refer to: https://www.haproxy.com/blog/haproxy/proxy-protocol/",
                                      "text" : "proxy_protocol",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-proxy_protocol_timeout",
                                      "doc" : "Timeout for proxy protocol.\nEMQX will close the TCP connection if proxy protocol packet is not received within the timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "proxy_protocol_timeout",
                                      "type" : "Duration",
                                      "default" : "\"3s\""
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-bind",
                                      "doc" : "The IP address and port that the listener will bind.",
                                      "text" : "bind",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-max_connections",
                                      "doc" : "The maximum number of concurrent connections allowed by the listener.",
                                      "text" : "max_connections",
                                      "type" : "OneOf(Integer(1..+inf),String(\"infinity\"))",
                                      "default" : "1024"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-max_conn_rate",
                                      "doc" : "Maximum connections per second.",
                                      "text" : "max_conn_rate",
                                      "type" : "Integer",
                                      "default" : "1000"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-enable_authn",
                                      "doc" : "Set <code>true</code> (default) to enable client authentication on this listener.\nWhen set to <code>false</code> clients will be allowed to connect without authentication.",
                                      "text" : "enable_authn",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-mountpoint",
                                      "doc" : "When publishing or subscribing, prefix all topics with a mountpoint string.\nThe prefixed string will be removed from the topic name when the message is delivered to the subscriber.\nThe mountpoint is a way that users can use to implement isolation of message routing between different listeners.\nFor example if a client A subscribes to `t` with `listeners.tcp.\\<name>.mountpoint` set to `some_tenant`,\nthen the client actually subscribes to the topic `some_tenant/t`.\nSimilarly, if another client B (connected to the same listener as the client A) sends a message to topic `t`,\nthe message is routed to all the clients subscribed `some_tenant/t`,\nso client A will receive the message, with topic name `t`. Set to `\"\"` to disable the feature.\nSupported placeholders in mountpoint string:<br/>\n  - <code>${clientid}</code>: clientid<br/>\n  - <code>${username}</code>: username<br/>\n  - <code>${endpoint_name}</code>: endpoint name",
                                      "text" : "mountpoint",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-access_rules",
                                      "doc" : "An access rule list consisting of string rules to restrict or allow access from some addresses.\nThe rules that appear earlier in the list are matched first.\nThe format is `allow | deny <address> | <CIDR> | all`.\n\nFor example:\n\n`[\"deny 192.168.1.1\", \"allow 192.168.1.0/24\", \"deny all\"]`",
                                      "text" : "access_rules",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts",
                                          "fields" : [
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacertfile",
                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                              "text" : "cacertfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cacert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-cacerts",
                                              "doc" : "Deprecated since 5.1.4.",
                                              "text" : "cacerts",
                                              "type" : "Boolean"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-certfile",
                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                              "text" : "certfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/cert.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-keyfile",
                                              "doc" : "PEM format private key file.",
                                              "text" : "keyfile",
                                              "type" : "String",
                                              "default" : "\"${EMQX_ETC_DIR}/certs/key.pem\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify",
                                              "doc" : "Enable or disable peer verification.",
                                              "text" : "verify",
                                              "type" : "Enum(verify_peer,verify_none)",
                                              "default" : "verify_none"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-reuse_sessions",
                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "reuse_sessions",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-depth",
                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                              "text" : "depth",
                                              "type" : "Integer(0..+inf)",
                                              "default" : "10"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-password",
                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "password",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-versions",
                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                              "text" : "versions",
                                              "type" : "Array(String)",
                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ciphers",
                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                              "text" : "ciphers",
                                              "type" : "Array(String)",
                                              "default" : "[]"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-secure_renegotiate",
                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                              "text" : "secure_renegotiate",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-log_level",
                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                              "text" : "log_level",
                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                              "default" : "notice"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-hibernate_after",
                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "hibernate_after",
                                              "type" : "Duration",
                                              "default" : "\"5s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-partial_chain",
                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                              "text" : "partial_chain",
                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-verify_peer_ext_key_usage",
                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                              "text" : "verify_peer_ext_key_usage",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-dhfile",
                                              "doc" : "Path to a file containing PEM-encoded Diffie-Hellman parameters\nto be used by the server if a cipher suite using Diffie-Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br/>\nNOTE: The <code>dhfile</code> option is not supported by TLS 1.3.",
                                              "text" : "dhfile",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-fail_if_no_peer_cert",
                                              "doc" : "This option is only effective if `verify` is set to `verify_peer`.\n\nIf set to `true`, EMQX will reject the connection if the client fails to provide a certificate.\n\nIf set to `false`, EMQX will accept clients which don't present a certificate.",
                                              "text" : "fail_if_no_peer_cert",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-honor_cipher_order",
                                              "doc" : "An important security setting. If this setting is enabled, the server will prioritize the cipher suites it prefers most from the list of cipher suites supported by the client, thus ignoring the client's preferences.\n\nThe server's cipher suites are specified by `ciphers`, with preference decreasing from left to right.\n\nIt is often better to use the server's preferences, as it is more likely that the server will be configured correctly.",
                                              "text" : "honor_cipher_order",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-client_renegotiation",
                                              "doc" : "In protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                              "text" : "client_renegotiation",
                                              "type" : "Boolean",
                                              "default" : "true"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-handshake_timeout",
                                              "doc" : "Maximum time duration allowed for the handshake to complete<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "handshake_timeout",
                                              "type" : "Duration",
                                              "default" : "\"15s\""
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-gc_after_handshake",
                                              "doc" : "Memory usage tuning. If enabled, will immediately perform a garbage collection after the TLS/SSL handshake.",
                                              "text" : "gc_after_handshake",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-enable_ocsp_stapling",
                                                      "doc" : "Whether to enable Online Certificate Status Protocol (OCSP) stapling for the listener.  If set to true, requires defining the OCSP responder URL and issuer PEM path.",
                                                      "text" : "enable_ocsp_stapling",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-responder_url",
                                                      "doc" : "URL for the OCSP responder to check the server certificate against.",
                                                      "text" : "responder_url",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-issuer_pem",
                                                      "doc" : "PEM-encoded certificate of the OCSP issuer for the server certificate.",
                                                      "text" : "issuer_pem",
                                                      "type" : "String"
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_interval",
                                                      "doc" : "The period to refresh the OCSP response for the server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_interval",
                                                      "type" : "Duration",
                                                      "default" : "\"5m\""
                                                    },
                                                    {
                                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp-S-ocsp-refresh_http_timeout",
                                                      "doc" : "The timeout for the HTTP request when checking OCSP responses.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "refresh_http_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    }
                                                  ],
                                                  "doc" : "Per listener OCSP Stapling configuration.",
                                                  "text" : "ocsp"
                                                }
                                              ],
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-ocsp",
                                              "text" : "ocsp",
                                              "type" : "Struct(ocsp)"
                                            },
                                            {
                                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options-S-listener_ssl_opts-enable_crl_check",
                                              "doc" : "Whether to enable CRL verification for this listener.",
                                              "text" : "enable_crl_check",
                                              "type" : "Boolean",
                                              "default" : "false"
                                            }
                                          ],
                                          "doc" : "Socket options for SSL connections.",
                                          "text" : "listener_ssl_opts"
                                        }
                                      ],
                                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl-S-ssl_listener-ssl_options",
                                      "doc" : "SSL Socket options.",
                                      "text" : "ssl_options",
                                      "type" : "Struct(listener_ssl_opts)"
                                    }
                                  ],
                                  "doc" : "Settings for SSL listener.",
                                  "text" : "ssl_listener"
                                }
                              ],
                              "hash" : "V-gateway-S-gateway-nats-S-nats-listeners-S-tcp_ws_listeners-ssl",
                              "doc" : "A map from listener names to listener settings.",
                              "text" : "ssl",
                              "type" : "Map($name->Struct(ssl_listener))"
                            }
                          ],
                          "doc" : "The gateway's Websocket listener adopts the same structure as the MQTT Websocket listener.",
                          "text" : "tcp_ws_listeners"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-nats-S-nats-listeners",
                      "text" : "listeners",
                      "type" : "Struct(tcp_ws_listeners)"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-nats-S-nats-enable_stats",
                      "doc" : "Whether to enable client process statistic",
                      "text" : "enable_stats",
                      "type" : "Boolean",
                      "default" : "true"
                    },
                    {
                      "hash" : "V-gateway-S-gateway-nats-S-nats-idle_timeout",
                      "doc" : "The idle time of the client connection process. It has two purposes:\n  1. A newly created client process that does not receive any client requests after that time will be closed directly.\n  2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "idle_timeout",
                      "type" : "Duration",
                      "default" : "\"30s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-gateway-S-gateway-nats-S-nats-clientinfo_override-S-clientinfo_override",
                          "fields" : [
                            {
                              "hash" : "V-gateway-S-gateway-nats-S-nats-clientinfo_override-S-clientinfo_override-username",
                              "doc" : "Template for overriding username.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-nats-S-nats-clientinfo_override-S-clientinfo_override-password",
                              "doc" : "Template for overriding password.",
                              "text" : "password",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-gateway-S-gateway-nats-S-nats-clientinfo_override-S-clientinfo_override-clientid",
                              "doc" : "Template for overriding clientid.",
                              "text" : "clientid",
                              "type" : "String"
                            }
                          ],
                          "doc" : "ClientInfo override.",
                          "text" : "clientinfo_override"
                        }
                      ],
                      "hash" : "V-gateway-S-gateway-nats-S-nats-clientinfo_override",
                      "doc" : "ClientInfo override.",
                      "text" : "clientinfo_override",
                      "type" : "Struct(clientinfo_override)"
                    }
                  ],
                  "doc" : "The NATS gateway provides EMQX with the ability to accept connections from NATS clients.",
                  "text" : "nats"
                }
              ],
              "hash" : "V-gateway-S-gateway-nats",
              "text" : "nats",
              "type" : "Struct(nats)"
            }
          ],
          "doc" : "EMQX Gateway configuration root.",
          "text" : "gateway"
        }
      ],
      "hash" : "V-gateway",
      "text" : "gateway",
      "type" : "Struct(gateway)"
    },
    {
      "refs" : [
        {
          "hash" : "T-prometheus-S-recommend_setting",
          "fields" : [
            {
              "hash" : "V-prometheus-S-recommend_setting-enable_basic_auth",
              "doc" : "Enable or disable basic authentication for prometheus scrape api, not for Push Gateway",
              "text" : "enable_basic_auth",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "refs" : [
                {
                  "hash" : "T-prometheus-S-recommend_setting-push_gateway-S-push_gateway",
                  "fields" : [
                    {
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-enable",
                      "doc" : "Enable or disable Pushgateway",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-method",
                      "doc" : "The HTTP Method of pushing metrics to Pushgateway. Available options:<br/>\n - <code>put</code>: All metrics with the grouping key specified in the URL are replaced by the metrics pushed with PUT.<br/>\n - <code>post</code>: POST works exactly like the PUT method but only metrics with the same name as the newly pushed metrics are replaced.<br/>\nThe default value is <code>put</code>.",
                      "text" : "method",
                      "type" : "Enum(put,post)",
                      "default" : "put"
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-url",
                      "doc" : "URL of Pushgateway server. Pushgateway is optional, should not be configured if prometheus is to scrape EMQX.",
                      "text" : "url",
                      "type" : "String",
                      "default" : "\"http://127.0.0.1:9091\""
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-interval",
                      "doc" : "Data reporting interval<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "interval",
                      "type" : "Duration",
                      "default" : "\"15s\""
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-headers",
                      "doc" : "An HTTP Headers when pushing to Push Gateway.<br/>\nFor example, <code> { Authorization = \"some-authz-tokens\"}</code>",
                      "text" : "headers",
                      "type" : "Map",
                      "default" : "{}"
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-push_gateway-S-push_gateway-job_name",
                      "doc" : "Job Name that is pushed to the Push Gateway. Available variables:<br/>\n- ${cluster_name}: Name of EMQX cluster.<br/>\n- ${name}: Name of EMQX node.<br/>\n- ${host}: Host name of EMQX node.<br/>\nFor example, when the EMQX node name is <code>emqx@127.0.0.1</code> then the <code>name</code>\nvariable takes value <code>emqx</code> and the <code>host</code> variable takes value <code>127.0.0.1</code>.\nDefault value is: <code>${name}/instance/${name}~${host}</code>",
                      "text" : "job_name",
                      "type" : "String",
                      "default" : "\"${name}/instance/${name}~${host}\""
                    }
                  ],
                  "doc" : "Push Gateway is optional, should not be configured if prometheus is to scrape EMQX.",
                  "text" : "push_gateway"
                }
              ],
              "hash" : "V-prometheus-S-recommend_setting-push_gateway",
              "doc" : "Push Gateway is optional, should not be configured if prometheus is to scrape EMQX.",
              "text" : "push_gateway",
              "type" : "Struct(push_gateway)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-prometheus-S-recommend_setting-collectors-S-collectors",
                  "fields" : [
                    {
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_dist",
                      "doc" : "Enable or disable VM distribution collector,\ncollects information about the sockets and processes involved in the Erlang distribution mechanism.",
                      "text" : "vm_dist",
                      "type" : "Enum(disabled,enabled)",
                      "default" : "disabled"
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-mnesia",
                      "doc" : "Collects Mnesia metrics mainly using <code> mnesia:system_info/1 </code>",
                      "text" : "mnesia",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_statistics",
                      "doc" : "Enable or disable VM statistics collector.",
                      "text" : "vm_statistics",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_system_info",
                      "doc" : "Enable or disable VM system info collector.",
                      "text" : "vm_system_info",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_memory",
                      "doc" : "Collects information about memory dynamically allocated by the Erlang emulator using\n<code> erlang:memory/0 </code>.",
                      "text" : "vm_memory",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    },
                    {
                      "hash" : "V-prometheus-S-recommend_setting-collectors-S-collectors-vm_msacc",
                      "doc" : "Enable or disable VM microstate accounting metrics collector.",
                      "text" : "vm_msacc",
                      "type" : "Enum(enabled,disabled)",
                      "default" : "disabled"
                    }
                  ],
                  "doc" : "The internal advanced metrics of the virtual machine are initially disabled\nand are usually only enabled during performance testing.\nEnabling them will increase the CPU load.",
                  "text" : "collectors"
                }
              ],
              "hash" : "V-prometheus-S-recommend_setting-collectors",
              "doc" : "The internal advanced metrics of the virtual machine are initially disabled\nand are usually only enabled during performance testing.\nEnabling them will increase the CPU load.",
              "text" : "collectors",
              "type" : "Struct(collectors)"
            },
            {
              "hash" : "V-prometheus-S-recommend_setting-latency_buckets",
              "doc" : "Comma separated duration values for latency histogram buckets.",
              "text" : "latency_buckets",
              "type" : "String",
              "default" : "\"10ms, 100ms, 1s, 5s, 30s\""
            }
          ],
          "doc" : "Recommended setting",
          "text" : "recommend_setting"
        },
        {
          "hash" : "T-prometheus-S-legacy_deprecated_setting",
          "fields" : [
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-push_gateway_server",
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.url` instead",
              "text" : "push_gateway_server",
              "type" : "String",
              "default" : "\"http://127.0.0.1:9091\""
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-interval",
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.interval` instead<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "interval",
              "type" : "Duration",
              "default" : "\"15s\""
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-headers",
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.headers` instead",
              "text" : "headers",
              "type" : "Map",
              "default" : "{}"
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-job_name",
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.job_name` instead",
              "text" : "job_name",
              "type" : "String",
              "default" : "\"${name}/instance/${name}~${host}\""
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-enable",
              "doc" : "Deprecated since 5.4.0, use `prometheus.push_gateway.url` instead",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_dist_collector",
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.vm_dist` instead",
              "text" : "vm_dist_collector",
              "type" : "Enum(disabled,enabled)",
              "default" : "disabled"
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-mnesia_collector",
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.mnesia` instead",
              "text" : "mnesia_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_statistics_collector",
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.vm_statistics` instead",
              "text" : "vm_statistics_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_system_info_collector",
              "doc" : "Deprecated, use `prometheus.collectors.vm_system_info` instead",
              "text" : "vm_system_info_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_memory_collector",
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.vm_memory` instead",
              "text" : "vm_memory_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            },
            {
              "hash" : "V-prometheus-S-legacy_deprecated_setting-vm_msacc_collector",
              "doc" : "Deprecated since 5.4.0, use `prometheus.collectors.vm_msacc` instead",
              "text" : "vm_msacc_collector",
              "type" : "Enum(enabled,disabled)",
              "default" : "disabled"
            }
          ],
          "doc" : "Deprecated since 5.4.0",
          "text" : "legacy_deprecated_setting"
        }
      ],
      "hash" : "V-prometheus",
      "text" : "prometheus",
      "type" : "OneOf(Struct(recommend_setting),Struct(legacy_deprecated_setting))",
      "default" : "{}"
    },
    {
      "refs" : [
        {
          "hash" : "T-exhook-S-exhook",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-exhook-S-exhook-servers-S-server",
                  "fields" : [
                    {
                      "hash" : "V-exhook-S-exhook-servers-S-server-name",
                      "doc" : "Name of the exhook server",
                      "text" : "name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-exhook-S-exhook-servers-S-server-url",
                      "doc" : "URL of the gRPC server",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-exhook-S-exhook-servers-S-server-request_timeout",
                      "doc" : "The timeout of request gRPC server<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "request_timeout",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "hash" : "V-exhook-S-exhook-servers-S-server-failed_action",
                      "doc" : "The value that is returned when the request to the gRPC server fails for any reason",
                      "text" : "failed_action",
                      "type" : "Enum(deny,ignore)",
                      "default" : "deny"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf",
                          "fields" : [
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-ssl-S-ssl_conf-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "SSL client configuration.",
                          "text" : "ssl_conf"
                        }
                      ],
                      "hash" : "V-exhook-S-exhook-servers-S-server-ssl",
                      "text" : "ssl",
                      "type" : "Struct(ssl_conf)"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-exhook-S-exhook-servers-S-server-socket_options-S-socket_options",
                          "fields" : [
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-keepalive",
                              "doc" : "Enables/disables periodic transmission on a connected socket when no other data is exchanged.\nIf the other end does not respond, the connection is considered broken and an error message is sent to the controlling process.",
                              "text" : "keepalive",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-nodelay",
                              "doc" : "If true, option TCP_NODELAY is turned on for the socket,\nwhich means that also small amounts of data are sent immediately",
                              "text" : "nodelay",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-recbuf",
                              "doc" : "The minimum size of receive buffer to use for the socket<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "recbuf",
                              "type" : "Bytesize"
                            },
                            {
                              "hash" : "V-exhook-S-exhook-servers-S-server-socket_options-S-socket_options-sndbuf",
                              "doc" : "The minimum size of send buffer to use for the socket<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                              "text" : "sndbuf",
                              "type" : "Bytesize"
                            }
                          ],
                          "doc" : "Connection socket options",
                          "text" : "socket_options"
                        }
                      ],
                      "hash" : "V-exhook-S-exhook-servers-S-server-socket_options",
                      "text" : "socket_options",
                      "type" : "Struct(socket_options)",
                      "default" : "{keepalive = true, nodelay = true}"
                    },
                    {
                      "hash" : "V-exhook-S-exhook-servers-S-server-auto_reconnect",
                      "doc" : "Whether to automatically reconnect (initialize) the gRPC server.\nWhen gRPC is not available, Exhook tries to request the gRPC service at that interval and reinitialize the list of mounted hooks.",
                      "text" : "auto_reconnect",
                      "type" : "OneOf(String(\"false\"),Duration)",
                      "default" : "\"60s\""
                    },
                    {
                      "hash" : "V-exhook-S-exhook-servers-S-server-pool_size",
                      "doc" : "The process pool size for gRPC client",
                      "text" : "pool_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "8"
                    }
                  ],
                  "doc" : "gRPC server configuration.",
                  "text" : "server"
                }
              ],
              "hash" : "V-exhook-S-exhook-servers",
              "doc" : "List of exhook servers",
              "text" : "servers",
              "type" : "Array(Struct(server))",
              "default" : "[]"
            }
          ],
          "doc" : "External hook (exhook) configuration.",
          "text" : "exhook"
        }
      ],
      "hash" : "V-exhook",
      "text" : "exhook",
      "type" : "Struct(exhook)"
    },
    {
      "refs" : [
        {
          "hash" : "T-psk_authentication-S-psk_authentication",
          "fields" : [
            {
              "hash" : "V-psk_authentication-S-psk_authentication-enable",
              "doc" : "Whether to enable TLS PSK support",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-psk_authentication-S-psk_authentication-init_file",
              "doc" : "If init_file is specified, EMQX will import PSKs from the file into the built-in database at startup for use by the runtime.\nThe file has to be structured line-by-line, each line must be in the format of <code>PSKIdentity:SharedSecret</code>.\nFor example: <code>mydevice1:c2VjcmV0</code>",
              "text" : "init_file",
              "type" : "String"
            },
            {
              "hash" : "V-psk_authentication-S-psk_authentication-separator",
              "doc" : "The separator between <code>PSKIdentity</code> and <code>SharedSecret</code> in the PSK file",
              "text" : "separator",
              "type" : "String",
              "default" : "\":\""
            },
            {
              "hash" : "V-psk_authentication-S-psk_authentication-chunk_size",
              "doc" : "The size of each chunk used to import to the built-in database from PSK file",
              "text" : "chunk_size",
              "type" : "Integer",
              "default" : "50"
            }
          ],
          "doc" : "PSK stands for 'Pre-Shared Keys'.\nThis config to enable TLS-PSK authentication.\n\nImportant! Make sure the SSL listener with only <code>tlsv1.2</code> enabled, and also PSK cipher suites\nconfigured, such as <code>RSA-PSK-AES256-GCM-SHA384</code>.\n\nSee listener SSL options config for more details.\n\nThe IDs and secrets can be provided from a file which is configurable by the <code>init_file</code> field.",
          "text" : "psk_authentication"
        }
      ],
      "hash" : "V-psk_authentication",
      "text" : "psk_authentication",
      "type" : "Struct(psk_authentication)"
    },
    {
      "refs" : [
        {
          "hash" : "T-slow_subs-S-slow_subs",
          "fields" : [
            {
              "hash" : "V-slow_subs-S-slow_subs-enable",
              "doc" : "Enable Slow Subscriptions",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-slow_subs-S-slow_subs-threshold",
              "doc" : "The Client ID and topic of the consumer whose message latency is greater than this threshold will be recorded in the slow subscription list.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "threshold",
              "type" : "Duration",
              "default" : "\"500ms\""
            },
            {
              "hash" : "V-slow_subs-S-slow_subs-expire_interval",
              "doc" : "The expiration time of the slow subscription record, if the record is not updated within the expiration time, then the record will be deleted.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "expire_interval",
              "type" : "Duration",
              "default" : "\"300s\""
            },
            {
              "hash" : "V-slow_subs-S-slow_subs-top_k_num",
              "doc" : "The maximum number of slow-subscription records, up to a maximum of 1000.",
              "text" : "top_k_num",
              "type" : "Integer(1..+inf)",
              "default" : "10"
            },
            {
              "hash" : "V-slow_subs-S-slow_subs-stats_type",
              "doc" : "Message latency calculation method:\n\n- `whole`: The time from when the message arrives at the EMQX (the EMQX gets the message from the receive-buffer) until the message completes delivery.\n- `internal`: The time from when the message arrives at the EMQX (the EMQX gets the message from the receive-buffer) to when the message begins to be delivered (the EMQX attempts to write the message to the send-buffer).\n- `response`: The time from the start of message delivery to the completion.\n\nNote: The completion delivery time refers to the time when QoS 1 and 2 messages complete the MQTT message response process, i.e., the time when QoS 1 message receives the PUBACK packet and QoS 2 message receives the PUBCOMP packet.\nSince there is no response packet for QoS 0 message, the completion delivery time of the QoS 0 message will be replaced by the time when the message starts to be delivered. Therefore, when using the `response` method to calculate the latency, the latency of a QoS 0 message will always be equal to 0.",
              "text" : "stats_type",
              "type" : "Enum(whole,internal,response)",
              "default" : "whole"
            }
          ],
          "doc" : "Configuration for `slow_subs` feature.",
          "text" : "slow_subs"
        }
      ],
      "hash" : "V-slow_subs",
      "text" : "slow_subs",
      "type" : "Struct(slow_subs)"
    },
    {
      "refs" : [
        {
          "hash" : "T-opentelemetry-S-opentelemetry",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-opentelemetry-S-opentelemetry-metrics-S-otel_metrics",
                  "fields" : [
                    {
                      "hash" : "V-opentelemetry-S-opentelemetry-metrics-S-otel_metrics-enable",
                      "doc" : "Enable or disable Open Telemetry signal.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-opentelemetry-S-opentelemetry-metrics-S-otel_metrics-interval",
                      "aliases" : [
                        "scheduled_delay"
                      ],
                      "doc" : "The delay interval between two consecutive exports of Open Telemetry signals.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "interval",
                      "type" : "Duration",
                      "default" : "\"10s\""
                    }
                  ],
                  "doc" : "Open Telemetry Metrics configuration.",
                  "text" : "otel_metrics"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-metrics",
              "doc" : "Open Telemetry Metrics configuration.",
              "text" : "metrics",
              "type" : "Struct(otel_metrics)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-opentelemetry-S-opentelemetry-logs-S-otel_logs",
                  "fields" : [
                    {
                      "hash" : "V-opentelemetry-S-opentelemetry-logs-S-otel_logs-level",
                      "doc" : "The log level of the Open Telemetry log handler.",
                      "text" : "level",
                      "type" : "Enum(debug,info,notice,warning,error,critical,alert,emergency,all)",
                      "default" : "warning"
                    },
                    {
                      "hash" : "V-opentelemetry-S-opentelemetry-logs-S-otel_logs-enable",
                      "doc" : "Enable or disable Open Telemetry signal.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-opentelemetry-S-opentelemetry-logs-S-otel_logs-scheduled_delay",
                      "doc" : "The delay interval between two consecutive exports of Open Telemetry signals.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "scheduled_delay",
                      "type" : "Duration",
                      "default" : "\"1s\""
                    }
                  ],
                  "doc" : "Open Telemetry Logs configuration. If enabled, EMQX installs a log handler that formats events according to Open Telemetry log data model and\nexports them to the configured Open Telemetry collector or backend.",
                  "text" : "otel_logs"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-logs",
              "doc" : "Open Telemetry Logs configuration. If enabled, EMQX installs a log handler that formats events according to Open Telemetry log data model and\nexports them to the configured Open Telemetry collector or backend.",
              "text" : "logs",
              "type" : "Struct(otel_logs)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-opentelemetry-S-opentelemetry-traces-S-otel_traces",
                  "fields" : [
                    {
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-enable",
                      "doc" : "Enable or disable Open Telemetry signal.",
                      "text" : "enable",
                      "type" : "Boolean",
                      "default" : "false"
                    },
                    {
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-max_queue_size",
                      "doc" : "The maximum queue size. After the size is reached Open Telemetry signals are dropped.",
                      "text" : "max_queue_size",
                      "type" : "Integer(1..+inf)",
                      "default" : "2048"
                    },
                    {
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-scheduled_delay",
                      "doc" : "The delay interval between two consecutive exports of Open Telemetry signals.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                      "text" : "scheduled_delay",
                      "type" : "Duration",
                      "default" : "\"5s\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter",
                          "fields" : [
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-trace_mode",
                              "doc" : "OpenTelemetry tracing mode.\n- `legacy`: follow the old tracing method, only trace message publishing and delivery.\n  Span names will be compatible to versions before 5.9.\n- `e2e`: end-to-end tracing mode. All client behaviors will be traced:\n  - connect and disconnect\n  - subscribe and unsubscribe\n  - messaging events such as `PUBLISH`, `PUBACK`, `PUBREL` etc.\n  When enabled (for each type of events), there will be a background tracing for all clients at the configured sample ratio.\n  From the dashboard, one can also add additional trace whitelist on top of the background tracing at full volume for a list of clients or topics.\n  See dashboard or API documents for more details.\n  More control and sampling options can be provided in `e2e_tracing_options`",
                              "text" : "trace_mode",
                              "type" : "Enum(legacy,e2e)",
                              "default" : "legacy"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-trace_all",
                              "doc" : "If enabled, all published messages are traced, a new trace ID is generated if it can't be extracted from the message.\nOtherwise, only messages published with trace context are traced.\nDisabled by default.\nNote: this config only takes effect when `trace_mode` is set to `legacy`.",
                              "text" : "trace_all",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options",
                                  "fields" : [
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-cluster_identifier",
                                      "doc" : "An attribute value added into Span's Attributes. The attribute key will be `cluster.id`\nTypically, set a simple and easily recognizable name or use the cluster name to identify different EMQX clusters.",
                                      "text" : "cluster_identifier",
                                      "type" : "String",
                                      "default" : "emqxcl"
                                    },
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-msg_trace_level",
                                      "doc" : "Trace level for all message exchanges during the message publishing process.\n- `0`: Basic events during message publish will be recorded as Spans.\n  Including 'client.publish', 'client.authz', 'message.route', 'message.forward', 'message.handle_forward', 'broker.publish'.\n- `1`: In addition to basic events.\n  The events 'broker.puback', 'client.puback', 'broker.pubrec', 'client.pubrec' will be recorded as Spans.\n  That is, the first response packet in the QoS1 or QoS2 message interaction.\n- `2`: In addition to level 1.\n  The events 'broker.pubrel', 'client.pubrel', 'broker.pubcomp', 'client.pubcomp' will be recorded as Spans.",
                                      "text" : "msg_trace_level",
                                      "type" : "Integer(0..2)",
                                      "default" : "0"
                                    },
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-clientid_match_rules_max",
                                      "doc" : "Maximum length of the whitelist for clientid matching.",
                                      "text" : "clientid_match_rules_max",
                                      "type" : "Integer(1..+inf)",
                                      "default" : "30"
                                    },
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-topic_match_rules_max",
                                      "doc" : "Maximum length of the whitelist based for topic matching.",
                                      "text" : "topic_match_rules_max",
                                      "type" : "Integer(1..+inf)",
                                      "default" : "30"
                                    },
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-sample_ratio",
                                      "doc" : "Background tracing sample ratio for the listed event types.",
                                      "text" : "sample_ratio",
                                      "type" : "String",
                                      "default" : "\"10%\""
                                    },
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-client_connect_disconnect",
                                      "doc" : "Enable/Disable background tracing for all clients' connect/disconnect events at the configured sample ratio.",
                                      "text" : "client_connect_disconnect",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-client_subscribe_unsubscribe",
                                      "doc" : "Enable/Disable background tracing for all clients' subscribe/unsubscribe at the configured sample ratio.",
                                      "text" : "client_subscribe_unsubscribe",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-client_messaging",
                                      "doc" : "Enable/Disable background messaging events for all clients at the configured sample ratio and trace-level.",
                                      "text" : "client_messaging",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-trace_rule_engine",
                                      "doc" : "Enable/Disable background tracing of rule engine execution for all clients at the configured sample ratio.",
                                      "text" : "trace_rule_engine",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options-S-e2e_tracing_options-follow_traceparent",
                                      "doc" : "Enable/Disable, Whether to follow the traceparent passed in by the client through User-Property.",
                                      "text" : "follow_traceparent",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    }
                                  ],
                                  "doc" : "End-to-end tracing options",
                                  "text" : "e2e_tracing_options"
                                }
                              ],
                              "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter-S-trace_filter-e2e_tracing_options",
                              "doc" : "End-to-end tracing options",
                              "text" : "e2e_tracing_options",
                              "type" : "Struct(e2e_tracing_options)",
                              "default" : "{}"
                            }
                          ],
                          "doc" : "Open Telemetry Trace Filter configuration",
                          "text" : "trace_filter"
                        }
                      ],
                      "hash" : "V-opentelemetry-S-opentelemetry-traces-S-otel_traces-filter",
                      "doc" : "Open Telemetry Trace Filter configuration",
                      "text" : "filter",
                      "type" : "Struct(trace_filter)"
                    }
                  ],
                  "doc" : "Open Telemetry Traces configuration.",
                  "text" : "otel_traces"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-traces",
              "doc" : "Open Telemetry Traces configuration.",
              "text" : "traces",
              "type" : "Struct(otel_traces)"
            },
            {
              "refs" : [
                {
                  "hash" : "T-opentelemetry-S-opentelemetry-exporter-S-otel_exporter",
                  "fields" : [
                    {
                      "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-endpoint",
                      "doc" : "The target URL to which the exporter is going to send Open Telemetry signal data.",
                      "text" : "endpoint",
                      "type" : "String",
                      "default" : "\"http://localhost:4317\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts",
                          "fields" : [
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-cacertfile",
                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                              "text" : "cacertfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-cacerts",
                              "doc" : "Deprecated since 5.1.4.",
                              "text" : "cacerts",
                              "type" : "Boolean"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-certfile",
                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                              "text" : "certfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-keyfile",
                              "doc" : "PEM format private key file.",
                              "text" : "keyfile",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-verify",
                              "doc" : "Enable or disable peer verification.",
                              "text" : "verify",
                              "type" : "Enum(verify_peer,verify_none)",
                              "default" : "verify_none"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-reuse_sessions",
                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                              "text" : "reuse_sessions",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-depth",
                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                              "text" : "depth",
                              "type" : "Integer(0..+inf)",
                              "default" : "10"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-password",
                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-versions",
                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                              "text" : "versions",
                              "type" : "Array(String)",
                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-ciphers",
                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                              "text" : "ciphers",
                              "type" : "Array(String)",
                              "default" : "[]"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-secure_renegotiate",
                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                              "text" : "secure_renegotiate",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-log_level",
                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                              "text" : "log_level",
                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                              "default" : "notice"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-hibernate_after",
                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "hibernate_after",
                              "type" : "Duration",
                              "default" : "\"5s\""
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-partial_chain",
                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                              "text" : "partial_chain",
                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-verify_peer_ext_key_usage",
                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                              "text" : "verify_peer_ext_key_usage",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-enable",
                              "doc" : "Enable TLS.",
                              "text" : "enable",
                              "type" : "Boolean",
                              "default" : "false"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-middlebox_comp_mode",
                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                              "text" : "middlebox_comp_mode",
                              "type" : "Boolean",
                              "default" : "true"
                            },
                            {
                              "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options-S-ssl_client_opts-server_name_indication",
                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                              "text" : "server_name_indication",
                              "type" : "OneOf(String(\"disable\"),String)"
                            }
                          ],
                          "doc" : "Socket options for SSL clients.",
                          "text" : "ssl_client_opts"
                        }
                      ],
                      "hash" : "V-opentelemetry-S-opentelemetry-exporter-S-otel_exporter-ssl_options",
                      "doc" : "SSL configuration for the Open Telemetry exporter",
                      "text" : "ssl_options",
                      "type" : "Struct(ssl_client_opts)",
                      "default" : "{enable = false}"
                    }
                  ],
                  "doc" : "Open Telemetry Exporter",
                  "text" : "otel_exporter"
                }
              ],
              "hash" : "V-opentelemetry-S-opentelemetry-exporter",
              "doc" : "Open Telemetry Exporter",
              "text" : "exporter",
              "type" : "Struct(otel_exporter)"
            }
          ],
          "doc" : "Open Telemetry Toolkit configuration",
          "text" : "opentelemetry"
        }
      ],
      "hash" : "V-opentelemetry",
      "text" : "opentelemetry",
      "type" : "Struct(opentelemetry)"
    },
    {
      "refs" : [
        {
          "hash" : "T-api_key-S-api_key",
          "fields" : [
            {
              "hash" : "V-api_key-S-api_key-bootstrap_file",
              "doc" : "The bootstrap file provides API keys for EMQX.\nEMQX will load these keys on startup to authorize API requests.\nIt contains colon-separated values in the format: `api_key:api_secret:role`.\nEach line specifies an API key and its associated secret, and the role of this key.\nThe 'role' part should be the pre-defined access scope group name,\nfor example, `administrator` or `viewer`.\nThe 'role' is introduced in 5.4, to be backward compatible, if it is missing, the key is implicitly granted `administrator` role.",
              "text" : "bootstrap_file",
              "type" : "String",
              "default" : "\"\""
            }
          ],
          "doc" : "API Key, can be used to request API other than the management API key and the Dashboard user management API",
          "text" : "api_key"
        }
      ],
      "hash" : "V-api_key",
      "text" : "api_key",
      "type" : "Struct(api_key)"
    },
    {
      "refs" : [
        {
          "hash" : "T-license-S-key_license",
          "fields" : [
            {
              "hash" : "V-license-S-key_license-key",
              "doc" : "This configuration parameter is designated for the license key and supports below input formats:\n\n- Direct Key: Enter the secret key directly as a string value.\n- File Path: Specify the path to a file that contains the secret key. Ensure the path starts with `file://`.\n- \"default\": Use string value `default` to apply the default single-node community license.\n- \"evaluation\": Use string value `evaluation` to apply the 25-connection limit evaluation license.\n\nNote: An invalid license key or an incorrect file path may prevent EMQX from starting successfully.\nIf a file path is used, EMQX attempts to reload the license key from the file every 2 minutes.\nAny failure in reloading the license file will be recorded as an error level log message,\nand EMQX continues to apply the license loaded previously.",
              "text" : "key",
              "type" : "OneOf(String(\"default\"),String(\"evaluation\"),String)",
              "default" : "default"
            },
            {
              "hash" : "V-license-S-key_license-connection_low_watermark",
              "doc" : "Low watermark limit below which license connection quota usage alarms are deactivated",
              "text" : "connection_low_watermark",
              "type" : "String",
              "default" : "\"75%\""
            },
            {
              "hash" : "V-license-S-key_license-connection_high_watermark",
              "doc" : "High watermark limit above which license connection quota usage alarms are activated",
              "text" : "connection_high_watermark",
              "type" : "String",
              "default" : "\"80%\""
            }
          ],
          "doc" : "License provisioned as a string.",
          "text" : "key_license"
        }
      ],
      "hash" : "V-license",
      "doc" : "Defines the EMQX Enterprise license.\n\nEMQX is initially provided with a default single-node community license.\nThe default license is not permitted for commercial use.\n\nApply for an official license here: https://www.emqx.com/apply-licenses/emqx?version=5",
      "text" : "license",
      "type" : "Struct(key_license)"
    },
    {
      "refs" : [
        {
          "hash" : "T-schema_registry-S-schema_registry",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-schema_registry-S-schema_registry-external-S-confluent_schema_registry",
                  "fields" : [
                    {
                      "hash" : "V-schema_registry-S-schema_registry-external-S-confluent_schema_registry-type",
                      "doc" : "External Schema Registry Type",
                      "text" : "type",
                      "type" : "String(\"confluent\")",
                      "default" : "confluent"
                    },
                    {
                      "hash" : "V-schema_registry-S-schema_registry-external-S-confluent_schema_registry-url",
                      "doc" : "URL endpoint for external registry.",
                      "text" : "url",
                      "type" : "String"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-schema_registry-S-schema_registry-external-S-confluent_schema_registry-auth-S-confluent_schema_registry_auth_basic",
                          "fields" : [
                            {
                              "hash" : "V-schema_registry-S-schema_registry-external-S-confluent_schema_registry-auth-S-confluent_schema_registry_auth_basic-username",
                              "doc" : "Username for basic authentication method.",
                              "text" : "username",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-external-S-confluent_schema_registry-auth-S-confluent_schema_registry_auth_basic-password",
                              "doc" : "Password for basic authentication method.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                              "text" : "password",
                              "type" : "Secret"
                            }
                          ],
                          "doc" : "Authentication options for accessing external registry.",
                          "text" : "confluent_schema_registry_auth_basic"
                        }
                      ],
                      "hash" : "V-schema_registry-S-schema_registry-external-S-confluent_schema_registry-auth",
                      "doc" : "Authentication options for accessing external registry.",
                      "text" : "auth",
                      "type" : "OneOf(String(\"none\"),Struct(confluent_schema_registry_auth_basic))",
                      "default" : "none"
                    }
                  ],
                  "doc" : "Confluent External Schema Registry configuration.",
                  "text" : "confluent_schema_registry"
                }
              ],
              "hash" : "V-schema_registry-S-schema_registry-external",
              "doc" : "Confluent External Schema Registry configuration.",
              "text" : "external",
              "type" : "Map($name->OneOf(Struct(confluent_schema_registry)))",
              "default" : "{}"
            },
            {
              "refs" : [
                {
                  "hash" : "T-schema_registry-S-schema_registry-schemas-S-avro",
                  "fields" : [
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-avro-type",
                      "doc" : "Must be `avro` for Avro schema.",
                      "text" : "type",
                      "type" : "String(\"avro\")"
                    },
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-avro-source",
                      "doc" : "Source text for the schema.",
                      "text" : "source",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-avro-description",
                      "doc" : "A description for this schema.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "doc" : "[Apache Avro](https://avro.apache.org/) serialization format.",
                  "text" : "avro"
                },
                {
                  "hash" : "T-schema_registry-S-schema_registry-schemas-S-protobuf",
                  "fields" : [
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-protobuf-type",
                      "doc" : "Must be `protobuf` for protobuf schema.",
                      "text" : "type",
                      "type" : "String(\"protobuf\")"
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-schema_registry-S-schema_registry-schemas-S-protobuf-source-S-protobuf_bundle_source",
                          "fields" : [
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-protobuf-source-S-protobuf_bundle_source-type",
                              "doc" : "Protobuf bundle file (`.tar.gz`) containing one or more Protobuf files.",
                              "text" : "type",
                              "type" : "String(\"bundle\")"
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-protobuf-source-S-protobuf_bundle_source-root_proto_path",
                              "doc" : "Name of the root Protobuf file for this schema.  Must reside at the root of the bundle (i.e., not nested in any directory).",
                              "text" : "root_proto_path",
                              "type" : "String"
                            }
                          ],
                          "doc" : "Protobuf bundle file (`.tar.gz`) containing one or more Protobuf files.",
                          "text" : "protobuf_bundle_source"
                        }
                      ],
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-protobuf-source",
                      "doc" : "Source text for the schema.",
                      "text" : "source",
                      "type" : "OneOf(String,Struct(protobuf_bundle_source))"
                    },
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-protobuf-description",
                      "doc" : "A description for this schema.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "doc" : "[Protocol Buffers](https://protobuf.dev/) serialization format.",
                  "text" : "protobuf"
                },
                {
                  "hash" : "T-schema_registry-S-schema_registry-schemas-S-json",
                  "fields" : [
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-json-type",
                      "doc" : "Must be `json` for JSON schema.",
                      "text" : "type",
                      "type" : "String(\"json\")"
                    },
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-json-source",
                      "doc" : "Source text for the schema.",
                      "text" : "source",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-json-description",
                      "doc" : "A description for this schema.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    }
                  ],
                  "doc" : "Supports JSON Schema\n[Draft 03](http://tools.ietf.org/html/draft-zyp-json-schema-03)\n[Draft 04](http://tools.ietf.org/html/draft-zyp-json-schema-04) and\n[Draft 06](https://datatracker.ietf.org/doc/html/draft-wright-json-schema-00).",
                  "text" : "json"
                },
                {
                  "hash" : "T-schema_registry-S-schema_registry-schemas-S-external_http",
                  "fields" : [
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-type",
                      "doc" : "Must be `external_http` for External HTTP.",
                      "text" : "type",
                      "type" : "String(\"external_http\")"
                    },
                    {
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-description",
                      "doc" : "A description for this schema.",
                      "text" : "description",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "refs" : [
                        {
                          "hash" : "T-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params",
                          "fields" : [
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-url",
                              "doc" : "External HTTP schema server URL.",
                              "text" : "url",
                              "type" : "String"
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-headers",
                              "doc" : "Headers to be sent to external HTTP schema server.",
                              "text" : "headers",
                              "type" : "Map",
                              "default" : "{}"
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-max_retries",
                              "doc" : "HTTP request max retry times if failed.",
                              "text" : "max_retries",
                              "type" : "Integer(0..+inf)",
                              "default" : "2"
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-request_timeout",
                              "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "request_timeout",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-external_params",
                              "doc" : "A string that will be sent in every request body to external HTTP schema server.",
                              "text" : "external_params",
                              "type" : "String",
                              "default" : "\"\""
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-connect_timeout",
                              "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "connect_timeout",
                              "type" : "Duration",
                              "default" : "\"15s\""
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-pool_type",
                              "doc" : "The type of the pool. Can be one of `random`, `hash`.",
                              "text" : "pool_type",
                              "type" : "Enum(random,hash)",
                              "default" : "random"
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-pool_size",
                              "doc" : "The pool size.",
                              "text" : "pool_size",
                              "type" : "Integer(1..+inf)",
                              "default" : "8"
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-enable_pipelining",
                              "doc" : "The maximum number of HTTP requests that can be sent before an HTTP response is received.\n\nSetting this to 1 is equivalent to turning off HTTP pipelining, and the EMQX must receive a response to the previous HTTP request before sending the next HTTP request.",
                              "text" : "enable_pipelining",
                              "type" : "Integer(1..+inf)",
                              "default" : "100"
                            },
                            {
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-max_inactive",
                              "doc" : "Maximum amount of time without any activity that the HTTP driver will wait before attempting to reconnect.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                              "text" : "max_inactive",
                              "type" : "Duration",
                              "default" : "\"10s\""
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts",
                                  "fields" : [
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-cacertfile",
                                      "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                      "text" : "cacertfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-cacerts",
                                      "doc" : "Deprecated since 5.1.4.",
                                      "text" : "cacerts",
                                      "type" : "Boolean"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-certfile",
                                      "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                      "text" : "certfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-keyfile",
                                      "doc" : "PEM format private key file.",
                                      "text" : "keyfile",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-verify",
                                      "doc" : "Enable or disable peer verification.",
                                      "text" : "verify",
                                      "type" : "Enum(verify_peer,verify_none)",
                                      "default" : "verify_none"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-reuse_sessions",
                                      "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                      "text" : "reuse_sessions",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-depth",
                                      "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                      "text" : "depth",
                                      "type" : "Integer(0..+inf)",
                                      "default" : "10"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-password",
                                      "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                      "text" : "password",
                                      "type" : "Secret"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-versions",
                                      "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                      "text" : "versions",
                                      "type" : "Array(String)",
                                      "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-ciphers",
                                      "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                      "text" : "ciphers",
                                      "type" : "Array(String)",
                                      "default" : "[]"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-secure_renegotiate",
                                      "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                      "text" : "secure_renegotiate",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-log_level",
                                      "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                      "text" : "log_level",
                                      "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                      "default" : "notice"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-hibernate_after",
                                      "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                      "text" : "hibernate_after",
                                      "type" : "Duration",
                                      "default" : "\"5s\""
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-partial_chain",
                                      "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                      "text" : "partial_chain",
                                      "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                                      "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                      "text" : "verify_peer_ext_key_usage",
                                      "type" : "String"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-enable",
                                      "doc" : "Enable TLS.",
                                      "text" : "enable",
                                      "type" : "Boolean",
                                      "default" : "false"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-middlebox_comp_mode",
                                      "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                                      "text" : "middlebox_comp_mode",
                                      "type" : "Boolean",
                                      "default" : "true"
                                    },
                                    {
                                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl-S-ssl_client_opts-server_name_indication",
                                      "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                                      "text" : "server_name_indication",
                                      "type" : "OneOf(String(\"disable\"),String)"
                                    }
                                  ],
                                  "doc" : "Socket options for SSL clients.",
                                  "text" : "ssl_client_opts"
                                }
                              ],
                              "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters-S-external_http_params-ssl",
                              "doc" : "SSL connection settings.",
                              "text" : "ssl",
                              "type" : "Struct(ssl_client_opts)",
                              "default" : "{enable = false}"
                            }
                          ],
                          "doc" : "Configure External HTTP schema server parameters.",
                          "text" : "external_http_params"
                        }
                      ],
                      "hash" : "V-schema_registry-S-schema_registry-schemas-S-external_http-parameters",
                      "doc" : "Configure External HTTP schema server parameters.",
                      "text" : "parameters",
                      "type" : "Struct(external_http_params)"
                    }
                  ],
                  "doc" : "External HTTP server.",
                  "text" : "external_http"
                }
              ],
              "hash" : "V-schema_registry-S-schema_registry-schemas",
              "doc" : "Registered schemas.",
              "text" : "schemas",
              "type" : "Map($name->OneOf(Struct(avro),Struct(protobuf),Struct(json),Struct(external_http)))",
              "default" : "{}"
            }
          ],
          "doc" : "Schema registry configurations.",
          "text" : "schema_registry"
        }
      ],
      "hash" : "V-schema_registry",
      "text" : "schema_registry",
      "type" : "Struct(schema_registry)"
    },
    {
      "refs" : [
        {
          "hash" : "T-file_transfer-S-file_transfer",
          "fields" : [
            {
              "hash" : "V-file_transfer-S-file_transfer-enable",
              "doc" : "Enable the File Transfer feature.<br/>\nEnabling File Transfer implies reserving special MQTT topics in order to serve the protocol.<br/>\nThis toggle also affects the availability of the File Transfer REST API and\nstorage-dependent background activities (e.g. garbage collection).",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            },
            {
              "hash" : "V-file_transfer-S-file_transfer-init_timeout",
              "doc" : "Timeout for EMQX to initialize the file transfer.<br/>\nAfter reaching the timeout (e.g. due to system is overloaded), the PUBACK message for `init` will contain error code (0x80).<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "init_timeout",
              "type" : "Duration",
              "default" : "\"10s\""
            },
            {
              "hash" : "V-file_transfer-S-file_transfer-store_segment_timeout",
              "doc" : "Timeout for storing a file segment.<br/>\nAfter reaching the timeout (e.g. due to system overloaded), the PUBACK message will contain error code (0x80).<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "store_segment_timeout",
              "type" : "Duration",
              "default" : "\"5m\""
            },
            {
              "hash" : "V-file_transfer-S-file_transfer-assemble_timeout",
              "doc" : "Timeout for assembling and exporting file segments into a final file.<br/>\nAfter reaching the timeout (e.g. due to system is overloaded), the PUBACK message for `fin` will contain error code (0x80)<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
              "text" : "assemble_timeout",
              "type" : "Duration",
              "default" : "\"5m\""
            },
            {
              "refs" : [
                {
                  "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend",
                  "fields" : [
                    {
                      "refs" : [
                        {
                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage",
                          "fields" : [
                            {
                              "refs" : [
                                {
                                  "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments",
                                  "fields" : [
                                    {
                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-root",
                                      "doc" : "File system path to keep uploaded fragments and temporary data.",
                                      "text" : "root",
                                      "type" : "String"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc",
                                          "fields" : [
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc-interval",
                                              "doc" : "Interval of periodic garbage collection.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "interval",
                                              "type" : "Duration",
                                              "default" : "\"1h\""
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc-maximum_segments_ttl",
                                              "doc" : "Maximum TTL of a segment kept in the local file system.<br/>\nThis is a hard limit: no segment will outlive this TTL, even if some file transfer specifies a\nTTL more than that.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "maximum_segments_ttl",
                                              "type" : "Duration(s)",
                                              "default" : "\"24h\""
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc-S-local_storage_segments_gc-minimum_segments_ttl",
                                              "doc" : "Minimum TTL of a segment kept in the local file system.<br/>\nThis is a hard limit: no segment will be garbage collected before reaching this TTL,\neven if some file transfer specifies a TTL less than that.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "minimum_segments_ttl",
                                              "type" : "Duration(s)",
                                              "default" : "\"5m\""
                                            }
                                          ],
                                          "doc" : "Garbage collection settings for the File transfer local segments storage",
                                          "text" : "local_storage_segments_gc"
                                        }
                                      ],
                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments-S-local_storage_segments-gc",
                                      "doc" : "Garbage collection settings for the intermediate and temporary files in the local file system.",
                                      "text" : "gc",
                                      "type" : "Struct(local_storage_segments_gc)"
                                    }
                                  ],
                                  "doc" : "File transfer local segments storage settings",
                                  "text" : "local_storage_segments"
                                }
                              ],
                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-segments",
                              "doc" : "Settings for local segments storage, which include uploaded transfer fragments and temporary data.",
                              "text" : "segments",
                              "type" : "Struct(local_storage_segments)",
                              "default" : "{gc {}}"
                            },
                            {
                              "refs" : [
                                {
                                  "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend",
                                  "fields" : [
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local-S-local_storage_exporter",
                                          "fields" : [
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local-S-local_storage_exporter-root",
                                              "doc" : "Directory where the uploaded files are kept.",
                                              "text" : "root",
                                              "type" : "String"
                                            }
                                          ],
                                          "doc" : "Local Exporter settings for the File transfer local storage backend",
                                          "text" : "local_storage_exporter"
                                        }
                                      ],
                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-local",
                                      "doc" : "Exporter to the local file system.",
                                      "text" : "local",
                                      "type" : "Struct(local_storage_exporter)"
                                    },
                                    {
                                      "refs" : [
                                        {
                                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter",
                                          "fields" : [
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-access_key_id",
                                              "doc" : "The access key ID of the S3 bucket.",
                                              "text" : "access_key_id",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-secret_access_key",
                                              "doc" : "The secret access key of the S3 bucket.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                              "text" : "secret_access_key",
                                              "type" : "Secret"
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-host",
                                              "doc" : "The host of the S3 endpoint.",
                                              "text" : "host",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-port",
                                              "doc" : "The port of the S3 endpoint.",
                                              "text" : "port",
                                              "type" : "Integer(1..+inf)"
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-access_method",
                                              "doc" : "Method to be used to access the bucket through HTTP API.",
                                              "text" : "access_method",
                                              "type" : "Enum(path,vhost)",
                                              "default" : "path"
                                            },
                                            {
                                              "refs" : [
                                                {
                                                  "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options",
                                                  "fields" : [
                                                    {
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ipv6_probe",
                                                      "doc" : "Whether to probe for IPv6 support.",
                                                      "text" : "ipv6_probe",
                                                      "type" : "Boolean",
                                                      "default" : "false"
                                                    },
                                                    {
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-connect_timeout",
                                                      "doc" : "The timeout when connecting to the HTTP server.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "connect_timeout",
                                                      "type" : "Duration",
                                                      "default" : "\"15s\""
                                                    },
                                                    {
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-pool_size",
                                                      "doc" : "The pool size.",
                                                      "text" : "pool_size",
                                                      "type" : "Integer(1..+inf)",
                                                      "default" : "8"
                                                    },
                                                    {
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-enable_pipelining",
                                                      "doc" : "Deprecated since 5.8.2.",
                                                      "text" : "enable_pipelining",
                                                      "type" : "Integer(1..+inf)"
                                                    },
                                                    {
                                                      "refs" : [
                                                        {
                                                          "hash" : "T-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts",
                                                          "fields" : [
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacertfile",
                                                              "doc" : "Trusted PEM format CA certificates bundle file.<br/>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQX to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br/>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.",
                                                              "text" : "cacertfile",
                                                              "type" : "String"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-cacerts",
                                                              "doc" : "Deprecated since 5.1.4.",
                                                              "text" : "cacerts",
                                                              "type" : "Boolean"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-certfile",
                                                              "doc" : "PEM format certificates chain file.<br/>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should be placed at the end of\nthe file if it is to be added.",
                                                              "text" : "certfile",
                                                              "type" : "String"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-keyfile",
                                                              "doc" : "PEM format private key file.",
                                                              "text" : "keyfile",
                                                              "type" : "String"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-verify",
                                                              "doc" : "Enable or disable peer verification.",
                                                              "text" : "verify",
                                                              "type" : "Enum(verify_peer,verify_none)",
                                                              "default" : "verify_none"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-reuse_sessions",
                                                              "doc" : "Enable TLS session reuse.<br/>\nHas no effect when TLS version is configured (or negotiated) to 1.3",
                                                              "text" : "reuse_sessions",
                                                              "type" : "Boolean",
                                                              "default" : "true"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-depth",
                                                              "doc" : "Maximum number of non-self-issued intermediate certificates that can follow the peer certificate in a valid certification path.\nSo, if depth is 0 the PEER must be signed by the trusted ROOT-CA directly;<br/>\nif 1 the path can be PEER, Intermediate-CA, ROOT-CA;<br/>\nif 2 the path can be PEER, Intermediate-CA1, Intermediate-CA2, ROOT-CA.",
                                                              "text" : "depth",
                                                              "type" : "Integer(0..+inf)",
                                                              "default" : "10"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-password",
                                                              "doc" : "String containing the user's password. Only used if the private key file is password-protected.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                                                              "text" : "password",
                                                              "type" : "Secret"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-versions",
                                                              "doc" : "All TLS/DTLS versions to be supported.<br/>\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config.<br/>\nIn case PSK cipher suites are intended, make sure to configure\n<code>['tlsv1.2', 'tlsv1.1']</code> here.",
                                                              "text" : "versions",
                                                              "type" : "Array(String)",
                                                              "default" : "[\"tlsv1.3\", \"tlsv1.2\"]"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-ciphers",
                                                              "doc" : "This config holds TLS cipher suite names separated by comma,\nor as an array of strings. e.g.\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>.\n<br/>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the network connection.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\n\nThe names should be in OpenSSL string format (not RFC format).\nAll default values and examples provided by EMQX config\ndocumentation are all in OpenSSL format.<br/>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br/>\n\nNOTE: PSK ciphers are suppressed by 'tlsv1.3' version config<br/>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br/>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
                                                              "text" : "ciphers",
                                                              "type" : "Array(String)",
                                                              "default" : "[]"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-secure_renegotiate",
                                                              "doc" : "Whether to reject TLS renegotiation attempts that are not compliant with [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt).\n\nBy default, `secure_renegotiate` is set to `true`, which forces secure renegotiation.\nIf set to `false`, secure renegotiation will still be used, but will fall back to insecure renegotiation if the peer does not support [RFC 5746](http://www.ietf.org/rfc/rfc5746.txt), which increases the risk of a MitM attack.\n\nHas no effect when TLS version is configured (or negotiated) to 1.3.",
                                                              "text" : "secure_renegotiate",
                                                              "type" : "Boolean",
                                                              "default" : "true"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-log_level",
                                                              "doc" : "The minimum level of logging allowed for SSL output.\n\nThe default is `notice`, set to a lower `debug` level for more detailed logging that can be used to investigate SSL handshake issues.",
                                                              "text" : "log_level",
                                                              "type" : "Enum(emergency,alert,critical,error,warning,notice,info,debug,none,all)",
                                                              "default" : "notice"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-hibernate_after",
                                                              "doc" : "Specifies the amount of time that an SSL process will hibernate after being idle, thus reducing its memory footprint.\n\nThe hibernating process will be woken up when a new message arrives.\nHibernating and waking up too often can cause CPU utilization to increase, as they both perform garbage collection on the process.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                              "text" : "hibernate_after",
                                                              "type" : "Duration",
                                                              "default" : "\"5s\""
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-partial_chain",
                                                              "doc" : "Enable or disable peer verification with partial_chain.\nWhen local verifies a peer certificate during the x509 path validation\nprocess, it constructs a certificate chain that starts with the peer\ncertificate and ends with a trust anchor.\nBy default, if it is set to `false`, the trust anchor is the\nRoot CA, and the certificate chain must be complete.\nHowever, if the setting is set to `true` or `cacert_from_cacertfile`,\nthe last certificate in `cacertfile` will be used as the trust anchor\ncertificate (intermediate CA). This creates a partial chain\nin the path validation.\nAlternatively, if it is configured with `two_cacerts_from_cacertfile`,\none of the last two certificates in `cacertfile` will be used as the\ntrust anchor certificate, forming a partial chain. This option is\nparticularly useful for intermediate CA certificate rotation.\nHowever, please note that it incurs some additional overhead, so it\nshould only be used for certificate rotation purposes.",
                                                              "text" : "partial_chain",
                                                              "type" : "Enum(true,false,two_cacerts_from_cacertfile,cacert_from_cacertfile)"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-verify_peer_ext_key_usage",
                                                              "doc" : "Verify extended key usage in peer's certificate\nFor additional peer certificate validation, the value defined here must present in the\n'Extended Key Usage' of peer certificate defined in\n[rfc5280](https://www.rfc-editor.org/rfc/rfc5280#section-4.2.1.12).\n\nAllowed values are\n- `clientAuth`\n- `serverAuth`\n- `codeSigning`\n- `emailProtection`\n- `timeStamping`\n- `ocspSigning`\n- raw OID, for example: \"OID:1.3.6.1.5.5.7.3.2\" means `id-pk 2` which is equivalent to `clientAuth`\n\nComma-separated string is also supported for validating more than one key usages.\n\nFor example, `\"serverAuth,OID:1.3.6.1.5.5.7.3.2\"`",
                                                              "text" : "verify_peer_ext_key_usage",
                                                              "type" : "String"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-enable",
                                                              "doc" : "Enable TLS.",
                                                              "text" : "enable",
                                                              "type" : "Boolean",
                                                              "default" : "false"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-middlebox_comp_mode",
                                                              "doc" : "Configures the middle box compatibility mode for a TLS-1.3 connection.\n\nA significant number of middle boxes misbehave when a TLS-1.3 connection is negotiated. Implementations can increase the chance of making connections through those middle boxes by adapting the TLS-1.3 handshake to resemble that of a TLS-1.2 handshake.",
                                                              "text" : "middlebox_comp_mode",
                                                              "type" : "Boolean",
                                                              "default" : "true"
                                                            },
                                                            {
                                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl-S-ssl_client_opts-server_name_indication",
                                                              "doc" : "Specify the host name to be used in TLS Server Name Indication extension.<br/>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accepts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br/>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP address used.<br/>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br/> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.",
                                                              "text" : "server_name_indication",
                                                              "type" : "OneOf(String(\"disable\"),String)"
                                                            }
                                                          ],
                                                          "doc" : "Socket options for SSL clients.",
                                                          "text" : "ssl_client_opts"
                                                        }
                                                      ],
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-ssl",
                                                      "doc" : "SSL connection settings.",
                                                      "text" : "ssl",
                                                      "type" : "Struct(ssl_client_opts)",
                                                      "default" : "{enable = true}"
                                                    },
                                                    {
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-headers",
                                                      "doc" : "List of HTTP headers.",
                                                      "text" : "headers",
                                                      "type" : "Map"
                                                    },
                                                    {
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-max_retries",
                                                      "doc" : "Max retry times if error on sending request.",
                                                      "text" : "max_retries",
                                                      "type" : "Integer(0..+inf)"
                                                    },
                                                    {
                                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options-S-transport_options-request_timeout",
                                                      "doc" : "HTTP request timeout.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                                      "text" : "request_timeout",
                                                      "type" : "Duration"
                                                    }
                                                  ],
                                                  "doc" : "Options for the HTTP transport layer used by the S3 client",
                                                  "text" : "transport_options"
                                                }
                                              ],
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-transport_options",
                                              "doc" : "Options for the HTTP transport layer used by the S3 client.",
                                              "text" : "transport_options",
                                              "type" : "Struct(transport_options)"
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-min_part_size",
                                              "doc" : "The minimum part size for multipart uploads.<br/>\nUploaded data will be accumulated in memory until this size is reached.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "min_part_size",
                                              "type" : "Bytesize",
                                              "default" : "\"5mb\""
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-max_part_size",
                                              "doc" : "The maximum part size for multipart uploads.<br/>\nS3 uploader won't try to upload parts larger than this size.<br/>A string that represents a number of bytes, for example: <code>10B</code>, <code>640kb</code>, <code>4MB</code>, <code>1GB</code>. Units are binary standardized, i.e., 1MB equals 1024KB. units are not case sensitive, i.e., 1kb equals 1KB.",
                                              "text" : "max_part_size",
                                              "type" : "Bytesize",
                                              "default" : "\"5gb\""
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-url_expire_time",
                                              "doc" : "The time in seconds for which the signed URLs to the S3 objects are valid.<br/>A string that represents a time duration, for example: <code>10s</code>, <code>2.5m</code>, <code>1h30m</code>, <code>1W2D</code>, or <code>2345ms</code>, which is the smallest unit. Each configuration item has its own minimum precision. The part of the setting value that exceeds the precision will be ignored.\n\nFor example, if a configuration item of type <code>Duration(s)</code> is set to <code>1200ms</code>, the final effective value will be <code>1s</code> instead of <code>1.2s</code>.\n\n`Duration` is equivalent to `Duration(ms)`. The unit part is case-insensitive.",
                                              "text" : "url_expire_time",
                                              "type" : "Duration(s)",
                                              "default" : "\"1h\""
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-bucket",
                                              "doc" : "The name of the S3 bucket.<br/>A string for `${.path.to.var}` style value interpolation,\nwhere the leading dot is optional, and `${.}` represents all values as an object.",
                                              "text" : "bucket",
                                              "type" : "String"
                                            },
                                            {
                                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3-S-s3_exporter-acl",
                                              "doc" : "The ACL to use for the uploaded objects.",
                                              "text" : "acl",
                                              "type" : "Enum(private,public_read,public_read_write,authenticated_read,bucket_owner_read,bucket_owner_full_control)"
                                            }
                                          ],
                                          "doc" : "S3 Exporter settings for the File transfer local storage backend",
                                          "text" : "s3_exporter"
                                        }
                                      ],
                                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter-S-local_storage_exporter_backend-s3",
                                      "doc" : "Exporter to the S3 API compatible object storage.",
                                      "text" : "s3",
                                      "type" : "Struct(s3_exporter)"
                                    }
                                  ],
                                  "doc" : "Exporter for the local file system storage backend",
                                  "text" : "local_storage_exporter_backend"
                                }
                              ],
                              "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local-S-local_storage-exporter",
                              "doc" : "Exporter for the local file system storage backend.<br/>\nExporter defines where and how fully transferred and assembled files are stored.",
                              "text" : "exporter",
                              "type" : "Struct(local_storage_exporter_backend)",
                              "default" : "{local {}}"
                            }
                          ],
                          "doc" : "File transfer local storage settings",
                          "text" : "local_storage"
                        }
                      ],
                      "hash" : "V-file_transfer-S-file_transfer-storage-S-storage_backend-local",
                      "doc" : "Local file system backend to store uploaded fragments and temporary data.",
                      "text" : "local",
                      "type" : "Struct(local_storage)"
                    }
                  ],
                  "doc" : "Storage backend settings for file transfer",
                  "text" : "storage_backend"
                }
              ],
              "hash" : "V-file_transfer-S-file_transfer-storage",
              "doc" : "Storage settings for file transfer.",
              "text" : "storage",
              "type" : "Struct(storage_backend)",
              "default" : "{local {}}"
            }
          ],
          "doc" : "File transfer settings",
          "text" : "file_transfer"
        }
      ],
      "hash" : "V-file_transfer",
      "text" : "file_transfer",
      "type" : "Struct(file_transfer)"
    },
    {
      "refs" : [
        {
          "hash" : "T-durable_queues-S-durable_queues",
          "fields" : [
            {
              "hash" : "V-durable_queues-S-durable_queues-enable",
              "doc" : "Enable the shared subscription feature.",
              "text" : "enable",
              "type" : "Boolean",
              "default" : "false"
            }
          ],
          "doc" : "Settings for durable queues",
          "text" : "durable_queues"
        }
      ],
      "hash" : "V-durable_queues",
      "text" : "durable_queues",
      "type" : "Struct(durable_queues)"
    },
    {
      "refs" : [
        {
          "hash" : "T-multi_tenancy-S-config",
          "fields" : [
            {
              "hash" : "V-multi_tenancy-S-config-default_max_sessions",
              "doc" : "The default number of live sessions allowed for each namespace.\nAccess will be denied for new clients if limit is reached.\nOnline config changes do not affect running sessions.",
              "text" : "default_max_sessions",
              "type" : "OneOf(String(\"infinity\"),Integer(1..+inf))",
              "default" : "infinity"
            },
            {
              "hash" : "V-multi_tenancy-S-config-allow_only_managed_namespaces",
              "doc" : "If enabled, clients that belong to a non-managed namespace will be\ndenied connection.  Clients that can't have their namespace resolved\nwill also be denied connection.",
              "text" : "allow_only_managed_namespaces",
              "type" : "Boolean",
              "default" : "false"
            }
          ],
          "doc" : "Multi-tenancy configuration",
          "text" : "config"
        }
      ],
      "hash" : "V-multi_tenancy",
      "text" : "multi_tenancy",
      "type" : "Struct(config)"
    },
    {
      "refs" : [
        {
          "hash" : "T-ai-S-ai",
          "fields" : [
            {
              "refs" : [
                {
                  "hash" : "T-ai-S-ai-providers-S-provider",
                  "fields" : [
                    {
                      "hash" : "V-ai-S-ai-providers-S-provider-name",
                      "doc" : "Name of the provider.",
                      "text" : "name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-ai-S-ai-providers-S-provider-type",
                      "doc" : "Type of AI provider: OpenAI or Anthropic.",
                      "text" : "type",
                      "type" : "Enum(openai,anthropic)",
                      "default" : "openai"
                    },
                    {
                      "hash" : "V-ai-S-ai-providers-S-provider-api_key",
                      "doc" : "API key for the AI provider.<br/>A string holding some sensitive information, such as a password. When secret starts with <code>file://</code>, the rest of the string is interpreted as a path to a file containing the secret itself: whole content of the file except any trailing whitespace characters is considered a secret value. Note: when clustered, all EMQX nodes should have the same file present before using <code>file://</code> secrets.",
                      "text" : "api_key",
                      "type" : "Secret"
                    },
                    {
                      "hash" : "V-ai-S-ai-providers-S-provider-base_url",
                      "doc" : "Base URL for the AI provider API endpoint.",
                      "text" : "base_url",
                      "type" : "String",
                      "default" : "\"https://api.openai.com/v1\""
                    }
                  ],
                  "doc" : "AI provider.",
                  "text" : "provider"
                }
              ],
              "hash" : "V-ai-S-ai-providers",
              "doc" : "List of AI provider providers.",
              "text" : "providers",
              "type" : "Array(Struct(provider))",
              "default" : "[]"
            },
            {
              "refs" : [
                {
                  "hash" : "T-ai-S-ai-completion_profiles-S-anthropic_completion_profile",
                  "fields" : [
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-anthropic_completion_profile-name",
                      "doc" : "Name of the completion profile.",
                      "text" : "name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-anthropic_completion_profile-type",
                      "doc" : "Type of AI provider: OpenAI or Anthropic.",
                      "text" : "type",
                      "type" : "String(\"anthropic\")",
                      "default" : "anthropic"
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-anthropic_completion_profile-provider_name",
                      "doc" : "Name of the provider.",
                      "text" : "provider_name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-anthropic_completion_profile-anthropic_version",
                      "doc" : "Version of the Anthropic API to use.",
                      "text" : "anthropic_version",
                      "type" : "Enum(2023-06-01)",
                      "default" : "\"2023-06-01\""
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-anthropic_completion_profile-system_prompt",
                      "doc" : "System prompt for the AI completion.",
                      "text" : "system_prompt",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-anthropic_completion_profile-model",
                      "doc" : "Model to use for the AI completion.",
                      "text" : "model",
                      "type" : "String",
                      "default" : "\"claude-3-5-sonnet-20240620\""
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-anthropic_completion_profile-max_tokens",
                      "doc" : "Maximum number of tokens to generate.",
                      "text" : "max_tokens",
                      "type" : "Integer(1..+inf)",
                      "default" : "100"
                    }
                  ],
                  "doc" : "AI completion profile for Anthropic.",
                  "text" : "anthropic_completion_profile"
                },
                {
                  "hash" : "T-ai-S-ai-completion_profiles-S-openai_completion_profile",
                  "fields" : [
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-openai_completion_profile-name",
                      "doc" : "Name of the completion profile.",
                      "text" : "name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-openai_completion_profile-type",
                      "doc" : "Type of AI provider: OpenAI or Anthropic.",
                      "text" : "type",
                      "type" : "String(\"openai\")",
                      "default" : "openai"
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-openai_completion_profile-provider_name",
                      "doc" : "Name of the provider.",
                      "text" : "provider_name",
                      "type" : "String"
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-openai_completion_profile-system_prompt",
                      "doc" : "System prompt for the AI completion.",
                      "text" : "system_prompt",
                      "type" : "String",
                      "default" : "\"\""
                    },
                    {
                      "hash" : "V-ai-S-ai-completion_profiles-S-openai_completion_profile-model",
                      "doc" : "Model to use for the AI completion.",
                      "text" : "model",
                      "type" : "String",
                      "default" : "\"gpt-4o\""
                    }
                  ],
                  "doc" : "AI completion profile for OpenAI.",
                  "text" : "openai_completion_profile"
                }
              ],
              "hash" : "V-ai-S-ai-completion_profiles",
              "doc" : "List of AI completion profiles.",
              "text" : "completion_profiles",
              "type" : "Array(OneOf(Struct(anthropic_completion_profile),Struct(openai_completion_profile)))",
              "default" : "[]"
            }
          ],
          "doc" : "AI functions settings.",
          "text" : "ai"
        }
      ],
      "hash" : "V-ai",
      "text" : "ai",
      "type" : "Struct(ai)"
    }
  ],
  "doc" : "",
  "text" : "root"
}