Here is a valid HOCON example based on the provided schema:

```
authentication = [
  {
    ssl {
      cacertfile = "/path/to/cacertfile.pem"
      certfile = "/path/to/certfile.pem"
      keyfile = "/path/to/keyfile.pem"
      verify = verify_none
      reuse_sessions = true
      depth = 10
      password = "your_password"
      versions = ["tlsv1.3", "tlsv1.2"]
      ciphers = []
      secure_renegotiate = true
      log_level = notice
      hibernate_after = "5s"
      partial_chain = false
      verify_peer_ext_key_usage = "clientAuth"
      enable = false
      # You can either disable or provide a specific server name for SNI
      server_name_indication = "disable"
    }
  }
]

authorization {
  sources = [
    {
      ssl {
        cacertfile = "/path/to/cacertfile.pem"
        certfile = "/path/to/certfile.pem"
        keyfile = "/path/to/keyfile.pem"
        verify = verify_none
        reuse_sessions = true
        depth = 10
        password = "your_password"
        versions = ["tlsv1.3", "tlsv1.2"]
        ciphers = []
        secure_renegotiate = true
        log_level = notice
        hibernate_after = "5s"
        partial_chain = false
        verify_peer_ext_key_usage = "clientAuth"
        enable = false
        # You can either disable or provide a specific server name for SNI
        server_name_indication = "disable"
      }
    }
  ]
}

dashboard {
  sso {
    ldap {
      ssl {
        cacertfile = "/path/to/cacertfile.pem"
        certfile = "/path/to/certfile.pem"
        keyfile = "/path/to/keyfile.pem"
        verify = verify_none
        reuse_sessions = true
        depth = 10
        password = "your_password"
        versions = ["tlsv1.3", "tlsv1.2"]
        ciphers = []
        secure_renegotiate = true
        log_level = notice
        hibernate_after = "5s"
        partial_chain = false
        verify_peer_ext_key_usage = "clientAuth"
        enable = false
        # You can either disable or provide a specific server name for SNI
        server_name_indication = "disable"
      }
    }
  }
}
```