#!/usr/bin/env bash

set -euo pipefail

cd "$(dirname "$0")"

help() {
    echo "Usage: gen.sh [options] <emqx-version>"
    echo "Options:"
    echo "  -h, --help      Show this help message and exit"
    echo "  -v, --verbose   Enable verbose output"
    echo "  --rebuild       Purge tmp/emqx and rebuild"
    echo "  --git_repo      Git repo url to clone"
    echo "  --git_ref       Git tag or branch name to clone"
}

while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            help
            exit 0
            ;;
        -v|--verbose)
            set -x
            shift
            ;;
        --rebuild)
            REBUILD=true
            shift
            ;;
        --git_ref)
            GIT_REF="${2}"
            shift 2
            ;;
        --git_repo)
            GIT_REPO="${2}"
            shift 2
            ;;
        v*)
            export PROFILE='emqx'
            VERSION="${1}"
            DEFAULT_REPO="https://github.com/emqx/emqx.git"
            shift
            ;;
        e5.8.*)
            export PROFILE='emqx-enterprise'
            VERSION="${1}"
            DEFAULT_REPO="https://github.com/emqx/emqx.git"
            shift
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
    esac
done

if [[ -z "${VERSION:-}" ]]; then
    help
    exit 1
fi

if [[ -z "${GIT_REF:-}" ]]; then
    GIT_REF="${VERSION}"
fi

if [[ -z "${GIT_REPO:-}" ]]; then
    GIT_REPO="$DEFAULT_REPO"
fi

BUILDER="${EMQX_BUILDER:-ghcr.io/emqx/emqx-builder/5.5-2:1.18.3-27.2-3-ubuntu24.04}"
mkdir -p tmp
pushd tmp
if [ ! -d emqx ] || [ "${REBUILD:-}" = true ]; then
    rm -rf emqx
    git clone "${GIT_REPO}" -b "${GIT_REF}" --depth 1 ./emqx
    chmod -R u+w ./emqx
    docker run --rm -t -v "$(pwd)"/emqx:/emqx \
        -u $(id -u):$(id -g) \
        -w /emqx \
        -e PROFILE="$PROFILE" \
        --name docgen \
        "$BUILDER" \
        bash -c "git config --global --add safe.directory /emqx && make"
fi
popd
INPUT_DIR="$(pwd)/tmp/emqx/_build/docgen/${PROFILE}"
OUTPUT_DIR="$(pwd)/docs/"
OUTPUT_DIR_V2="$(pwd)/docs-v2/"

copy_lang() {
    lang="$1"
    cp "$INPUT_DIR/schema-${lang}.json" "${OUTPUT_DIR}/${lang}/${VERSION}.json"
    cp "$INPUT_DIR"/sch*-v2-"${lang}.json" "${OUTPUT_DIR_V2}/${lang}/${VERSION}.json"
}

langs=("en" "zh")

for lang in "${langs[@]}"; do
    copy_lang "$lang"
done

./refresh-index-page.sh
